"use strict";(self.webpackChunkkgajera_blog=self.webpackChunkkgajera_blog||[]).push([[1635],{6404:n=>{n.exports=JSON.parse('{"blogPosts":[{"id":"spark-adaptive-query-execution","metadata":{"permalink":"/blogs/blog/spark-adaptive-query-execution","editUrl":"https://github.com/lam1051999/blogs/edit/main/blog/2023-01-19-spark-adaptive-query-execution/index.md","source":"@site/blog/2023-01-19-spark-adaptive-query-execution/index.md","title":"Spark Adaptive Query Execution","description":"spark adaptive query banner","date":"2023-01-19T00:00:00.000Z","formattedDate":"January 19, 2023","tags":[{"label":"Bigdata","permalink":"/blogs/blog/tags/bigdata"},{"label":"Spark","permalink":"/blogs/blog/tags/spark"},{"label":"Apache","permalink":"/blogs/blog/tags/apache"}],"readingTime":0.045,"truncated":true,"authors":[{"name":"Tr\u1ea7n L\xe2m","title":"Data Engineer","url":"https://github.com/lam1051999","imageURL":"https://github.com/lam1051999.png","key":"tranlam"}],"frontMatter":{"slug":"spark-adaptive-query-execution","title":"Spark Adaptive Query Execution","authors":"tranlam","tags":["Bigdata","Spark","Apache"],"image":"./images/spark-aqe-banner.PNG"},"nextItem":{"title":"Spark catalyst optimizer v\xe0 Spark session extension","permalink":"/blogs/blog/spark-catalyst-optimizer-and-spark-session-extension"}},"content":"![spark adaptive query banner](./images/spark-aqe-banner.PNG)\\n\\n\x3c!--truncate--\x3e\\n\\n:::note\\n\\nComing soon...\\n\\n:::"},{"id":"spark-catalyst-optimizer-and-spark-session-extension","metadata":{"permalink":"/blogs/blog/spark-catalyst-optimizer-and-spark-session-extension","editUrl":"https://github.com/lam1051999/blogs/edit/main/blog/2023-01-07-spark-catalyst-optimizer-and-spark-extension/index.md","source":"@site/blog/2023-01-07-spark-catalyst-optimizer-and-spark-extension/index.md","title":"Spark catalyst optimizer v\xe0 Spark session extension","description":"Spark catalyst optimizer n\u1eb1m trong ph\u1ea7n core c\u1ee7a Spark SQL v\u1edbi m\u1ee5c \u0111\xedch t\u1ed1i \u01b0u c\xe1c truy v\u1ea5n c\xf3 c\u1ea5u tr\xfac \u0111\u01b0\u1ee3c th\u1ec3 hi\u1ec7n d\u01b0\u1edbi d\u1ea1ng SQL ho\u1eb7c qua c\xe1c API DataFrame/Dataset, gi\u1ea3m thi\u1ec3u th\u1eddi gian v\xe0 chi ph\xed ch\u1ea1y c\u1ee7a \u1ee9ng d\u1ee5ng. Khi s\u1eed d\u1ee5ng Spark, th\u01b0\u1eddng m\u1ecdi ng\u01b0\u1eddi xem catalyst optimizer nh\u01b0 l\xe0 m\u1ed9t black box, khi ch\xfang ta m\u1eb7c nhi\xean cho r\u1eb1ng n\xf3 ho\u1ea1t \u0111\u1ed9ng m\u1ed9t c\xe1ch th\u1ea7n b\xed m\xe0 kh\xf4ng th\u1ef1c s\u1ef1 quan t\xe2m b\xean trong n\xf3 x\u1ea3y ra nh\u1eefng g\xec. \u1ede b\xe0i vi\u1ebft n\xe0y, m\xecnh s\u1ebd \u0111i v\xe0o t\xecm hi\u1ec3u b\xean trong logic c\u1ee7a n\xf3 th\u1ef1c s\u1ef1 th\u1ebf n\xe0o, c\xe1c th\xe0nh ph\u1ea7n, v\xe0 c\xe1ch m\xe0 Spark session extension tham gia \u0111\u1ec3 thay \u0111\u1ed5i c\xe1c plan c\u1ee7a catalyst.","date":"2023-01-07T00:00:00.000Z","formattedDate":"January 7, 2023","tags":[{"label":"Bigdata","permalink":"/blogs/blog/tags/bigdata"},{"label":"Spark","permalink":"/blogs/blog/tags/spark"},{"label":"Apache","permalink":"/blogs/blog/tags/apache"}],"readingTime":16.35,"truncated":true,"authors":[{"name":"Tr\u1ea7n L\xe2m","title":"Data Engineer","url":"https://github.com/lam1051999","imageURL":"https://github.com/lam1051999.png","key":"tranlam"}],"frontMatter":{"slug":"spark-catalyst-optimizer-and-spark-session-extension","title":"Spark catalyst optimizer v\xe0 Spark session extension","authors":"tranlam","tags":["Bigdata","Spark","Apache"],"image":"./images/spark-catalyst-optimizer.JPG"},"prevItem":{"title":"Spark Adaptive Query Execution","permalink":"/blogs/blog/spark-adaptive-query-execution"},"nextItem":{"title":"MySQL series - Indexing","permalink":"/blogs/blog/mysql-series-mysql-indexing"}},"content":"Spark catalyst optimizer n\u1eb1m trong ph\u1ea7n core c\u1ee7a Spark SQL v\u1edbi m\u1ee5c \u0111\xedch t\u1ed1i \u01b0u c\xe1c truy v\u1ea5n c\xf3 c\u1ea5u tr\xfac \u0111\u01b0\u1ee3c th\u1ec3 hi\u1ec7n d\u01b0\u1edbi d\u1ea1ng SQL ho\u1eb7c qua c\xe1c API DataFrame/Dataset, gi\u1ea3m thi\u1ec3u th\u1eddi gian v\xe0 chi ph\xed ch\u1ea1y c\u1ee7a \u1ee9ng d\u1ee5ng. Khi s\u1eed d\u1ee5ng Spark, th\u01b0\u1eddng m\u1ecdi ng\u01b0\u1eddi xem catalyst optimizer nh\u01b0 l\xe0 m\u1ed9t black box, khi ch\xfang ta m\u1eb7c nhi\xean cho r\u1eb1ng n\xf3 ho\u1ea1t \u0111\u1ed9ng m\u1ed9t c\xe1ch th\u1ea7n b\xed m\xe0 kh\xf4ng th\u1ef1c s\u1ef1 quan t\xe2m b\xean trong n\xf3 x\u1ea3y ra nh\u1eefng g\xec. \u1ede b\xe0i vi\u1ebft n\xe0y, m\xecnh s\u1ebd \u0111i v\xe0o t\xecm hi\u1ec3u b\xean trong logic c\u1ee7a n\xf3 th\u1ef1c s\u1ef1 th\u1ebf n\xe0o, c\xe1c th\xe0nh ph\u1ea7n, v\xe0 c\xe1ch m\xe0 Spark session extension tham gia \u0111\u1ec3 thay \u0111\u1ed5i c\xe1c plan c\u1ee7a catalyst.\\n\\n![spark catalyst optimizer](./images/spark-catalyst-optimizer.JPG)\\n\\n\x3c!--truncate--\x3e\\n\\n### 1. Tree v\xe0 Node\\nC\xe1c th\xe0nh ph\u1ea7n ch\xednh trong Catalyst \u0111\u01b0\u1ee3c bi\u1ec3u di\u1ec5n d\u01b0\u1edbi d\u1ea1ng c\xe2y v\xe0 c\xe1c node, \u0111\u01b0\u1ee3c k\u1ebf th\u1eeba t\u1eeb class ```TreeNode```, ho\u1eb7c c\xe1c class con c\u1ee7a n\xf3. Class ```TreeNode``` n\xe0y c\xf3 t\u1eadp c\xe1c node con \u1ee9ng v\u1edbi thu\u1ed9c t\xednh ```children```, ki\u1ec3u d\u1eef li\u1ec7u ```Seq[BaseType]```, do v\u1eady, m\u1ed9t ```TreeNode``` c\xf3 th\u1ec3 c\xf3 0 ho\u1eb7c nhi\u1ec1u c\xe1c node con. C\xe1c object n\xe0y l\xe0 immutable v\xe0 \u0111\u01b0\u1ee3c thao t\xe1c b\u1eb1ng nh\u1eefng functional transformation, khi\u1ebfn cho vi\u1ec7c debug optimizer tr\u1edf n\xean d\u1ec5 d\xe0ng h\u01a1n v\xe0 c\xe1c ho\u1ea1t \u0111\u1ed9ng song song tr\u1edf n\xean d\u1ec5 \u0111o\xe1n h\u01a1n.     \\nHai class quan tr\u1ecdng l\xe0 ```LogicalPlan``` v\xe0 ```SparkPlan``` \u0111\u1ec1u l\xe0 subclass c\u1ee7a ```QueryPlan```, class k\u1ebf th\u1eeba tr\u1ef1c ti\u1ebfp t\u1eeb ```TreeNode```. Trong s\u01a1 \u0111\u1ed3 Catalyst b\xean tr\xean, 3 th\xe0nh ph\u1ea7n \u0111\u1ea7u l\xe0 c\xe1c logical plans, c\xe1c node trong logical plan th\u01b0\u1eddng l\xe0 c\xe1c to\xe1n t\u1eed \u0111\u1ea1i s\u1ed1 nh\u01b0 join, and, or,... 2 th\xe0nh ph\u1ea7n \u0111\u1eb1ng sau l\xe0 c\xe1c spark plan (physical plan), c\xe1c node th\u01b0\u1eddng l\xe0 c\xe1c to\xe1n t\u1eed low-level nh\u01b0 ```ShuffledHashJoinExec```, ```SortMergeJoinExec```, ```BroadcastHashJoinExec```, ```FileSourceScanExec```,... C\xe1c leaf node s\u1ebd \u0111\u1ecdc d\u1eef li\u1ec7u t\u1eeb c\xe1c source, storage, memory,... c\xf2n root node c\u1ee7a c\xe2y l\xe0 to\xe1n t\u1eed ngo\xe0i c\xf9ng v\xe0 tr\u1ea3 v\u1ec1 k\u1ebft qu\u1ea3 c\u1ee7a vi\u1ec7c t\xednh to\xe1n.\\n\\n### 2. Rules\\n\u0110\u1ec3 thao t\xe1c tr\xean TreeNode ta s\u1eed d\u1ee5ng c\xe1c Rule, c\xe1c Rule th\u1ef1c ch\u1ea5t l\xe0 th\xe0nh ph\u1ea7n bi\u1ebfn \u0111\u1ed5i c\xe2y, t\u1eeb c\xe2y n\xe0y sang c\xe2y kh\xe1c. Trong rule, ta tri\u1ec3n khai c\xe1c logic bi\u1ebfn \u0111\u1ed5i c\xe1c TreeNode, c\xe1c logic n\xe0y th\u01b0\u1eddng s\u1eed d\u1ee5ng pattern matching trong scala \u0111\u1ec3 t\xecm c\xe1c matching t\u01b0\u01a1ng \u1ee9ng trong subtree c\u1ee7a n\xf3 v\xe0 thay th\u1ebf b\u1eb1ng c\xe1c c\u1ea5u tr\xfac kh\xe1c.\\nC\xe1c c\xe2y cung c\u1ea5p c\xe1c h\xe0m transform c\xf3 th\u1ec3 \xe1p d\u1ee5ng pattern matching n\xe0y \u0111\u1ec3 bi\u1ebfn \u0111\u1ed5i c\xe2y nh\u01b0 ```transform```, ```transformDown```, ```transformUp```,...\\n\\n```scala\\npackage org.apache.spark.sql.catalyst.trees\\n\\n/**\\n   * Returns a copy of this node where `rule` has been recursively applied to the tree.\\n   * When `rule` does not apply to a given node it is left unchanged.\\n   * Users should not expect a specific directionality. If a specific directionality is needed,\\n   * transformDown or transformUp should be used.\\n   *\\n   * @param rule the function used to transform this nodes children\\n*/\\ndef transform(rule: PartialFunction[BaseType, BaseType]): BaseType = {\\n    transformDown(rule)\\n}\\n\\n/**\\n   * Returns a copy of this node where `rule` has been recursively applied to the tree.\\n   * When `rule` does not apply to a given node it is left unchanged.\\n   * Users should not expect a specific directionality. If a specific directionality is needed,\\n   * transformDown or transformUp should be used.\\n   *\\n   * @param rule   the function used to transform this nodes children\\n   * @param cond   a Lambda expression to prune tree traversals. If `cond.apply` returns false\\n   *               on a TreeNode T, skips processing T and its subtree; otherwise, processes\\n   *               T and its subtree recursively.\\n   * @param ruleId is a unique Id for `rule` to prune unnecessary tree traversals. When it is\\n   *               UnknownRuleId, no pruning happens. Otherwise, if `rule` (with id `ruleId`)\\n   *               has been marked as in effective on a TreeNode T, skips processing T and its\\n   *               subtree. Do not pass it if the rule is not purely functional and reads a\\n   *               varying initial state for different invocations.\\n*/\\ndef transformWithPruning(cond: TreePatternBits => Boolean,\\nruleId: RuleId = UnknownRuleId)(rule: PartialFunction[BaseType, BaseType])\\n: BaseType = {\\n    transformDownWithPruning(cond, ruleId)(rule)\\n}\\n\\n/**\\n   * Returns a copy of this node where `rule` has been recursively applied to it and all of its\\n   * children (pre-order). When `rule` does not apply to a given node it is left unchanged.\\n   *\\n   * @param rule the function used to transform this nodes children\\n*/\\ndef transformDown(rule: PartialFunction[BaseType, BaseType]): BaseType = {\\n    transformDownWithPruning(AlwaysProcess.fn, UnknownRuleId)(rule)\\n}\\n\\ndef transformDownWithPruning(cond: TreePatternBits => Boolean,\\n    ruleId: RuleId = UnknownRuleId)(rule: PartialFunction[BaseType, BaseType])\\n  : BaseType = {\\n    /* More code */    \\n}\\n\\ndef transformUp(rule: PartialFunction[BaseType, BaseType]): BaseType = {\\n    transformUpWithPruning(AlwaysProcess.fn, UnknownRuleId)(rule)\\n}\\n\\ndef transformUpWithPruning(cond: TreePatternBits => Boolean,\\n    ruleId: RuleId = UnknownRuleId)(rule: PartialFunction[BaseType, BaseType])\\n  : BaseType = {\\n    /* More code */    \\n}\\n\\n/* ... */\\n```\\n\\nD\u01b0\u1edbi \u0111\xe2y l\xe0 v\xed d\u1ee5 \u0111\u01a1n gi\u1ea3n v\u1ec1 s\u1eed d\u1ee5ng transform v\xe0 parttern matching \u0111\u1ec3 bi\u1ebfn \u0111\u1ed5i m\u1ed9t Treenode sang Treenode kh\xe1c\\n```scala\\npackage com.tranlam\\n\\nimport org.apache.spark.sql.catalyst.expressions.{Add, BinaryOperator, Expression, IntegerLiteral, Literal, Multiply, Subtract, UnaryMinus}\\nimport org.apache.spark.SparkConf\\nimport org.apache.spark.sql.SparkSession\\n\\nobject TestTransform {\\n  def main(args: Array[String]): Unit = {\\n    val sparkConf = new SparkConf().setAppName(\\"test_transform\\").setMaster(\\"local[*]\\")\\n    val spark = SparkSession.builder().config(sparkConf).getOrCreate()\\n    val firstExpr: Expression = UnaryMinus(Multiply(Subtract(Literal(11), Literal(2)), Subtract(Literal(9), Literal(5))))\\n    val transformed: Expression = firstExpr transformDown {\\n      case BinaryOperator(l, r) => Add(l, r)\\n      case IntegerLiteral(i) if i > 5 => Literal(1)\\n      case IntegerLiteral(i) if i < 5 => Literal(0)\\n    }\\n    println(firstExpr) // -((11 - 2) * (9 - 5))\\n    println(transformed) // -((1 + 0) + (1 + 5))\\n    spark.sql(s\\"SELECT ${firstExpr.sql}\\").show()\\n    spark.sql(s\\"SELECT ${transformed.sql}\\").show()\\n  }\\n}\\n```\\n\\nTrong v\xed d\u1ee5 tr\xean, h\xe0m transformDown \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng, n\xf3 \u0111i qua c\xe1c node c\u1ee7a 1 c\xe2y v\xe0 s\u1eed d\u1ee5ng parttern matching \u0111\u1ec3 tr\u1ea3 v\u1ec1 k\u1ebft qu\u1ea3 kh\xe1c. N\u1ebfu nh\u01b0 node \u0111\xf3 l\xe0 d\u1ea1ng binary operator nh\u01b0 Multiply, Subtract, n\xf3 s\u1ebd bi\u1ebfn \u0111\u1ed5i th\xe0nh ph\xe9p c\u1ed9ng Add. N\u1ebfu node l\xe0 h\u1eb1ng s\u1ed1 nguy\xean l\u1edbn h\u01a1n 5, n\xf3 s\u1ebd bi\u1ebfn \u0111\u1ed5i v\u1ec1 1, h\u1eb1ng s\u1ed1 b\xe9 h\u01a1n 5 s\u1ebd bi\u1ebfn \u0111\u1ed5i th\xe0nh 0, h\u1eb1ng s\u1ed1 b\u1eb1ng 5 th\xec gi\u1eef nguy\xean gi\xe1 tr\u1ecb.\\n\\n### 3. C\xe1c ho\u1ea1t \u0111\u1ed9ng c\u1ee7a Catalyst trong Spark SQL\\nSpark Catalyst s\u1eed d\u1ee5ng c\xe1c ph\xe9p bi\u1ebfn \u0111\u1ed5i c\xe2y trong 4 phase ch\xednh: (1) ph\xe2n t\xedch logical plan \u0111\u1ec3 duy\u1ec7t c\xe1c relation trong plan \u0111\xf3, (2) logical plan optimization, (3) physical planning, (4) code generation \u0111\u1ec3 compile c\xe1c query th\xe0nh Java bytecode. \\n\\n#### 3.1. Parsing v\xe0 Analyzing\\n\\n![spark catalyst parseing analyzing](./images/catalyst-pipeline-parsing-analyzing.PNG)\\n\\n\u1ede phase n\xe0y, c\xe1c Catalyst rule v\xe0 Catalog object s\u1ebd \u0111\u01b0\u1ee3c Spark SQL s\u1eed d\u1ee5ng \u0111\u1ec3 ki\u1ec3m tra xem c\xe1c relation trong c\xe2u query c\u1ee7a ch\xfang ta c\xf3 t\u1ed3n t\u1ea1i hay kh\xf4ng, c\xe1c thu\u1ed9c t\xednh c\u1ee7a relation nh\u01b0 c\u1ed9t, t\xean c\u1ed9t c\u0169ng \u0111\u01b0\u1ee3c ki\u1ec3m tra n\xf3 c\xf3 chu\u1ea9n hay kh\xf4ng, syntax \u0111\xe3 \u0111\xfang ch\u01b0a v\xe0 resolve c\xe1c relation \u0111\xf3.\\n\\nV\xed d\u1ee5, nh\xecn v\xe0o plan c\xe2u query d\u01b0\u1edbi \u0111\xe2y, \u0111\u1ea7u ti\xean Spark SQL s\u1ebd bi\u1ebfn \u0111\u1ed5i query v\u1ec1 m\u1ed9t parsed tree \u0111\u01b0\u1ee3c g\u1ecdi l\xe0 \\"unresolved logical plan\\" v\u1edbi c\xe1c thu\u1ed9c t\xednh v\xe0 datatypes ch\u01b0a x\xe1c \u0111\u1ecbnh, ch\u01b0a \u0111\u01b0\u1ee3c g\xe1n v\u1edbi m\u1ed9t table (ho\u1eb7c alias) c\u1ee5 th\u1ec3 n\xe0o. Sau \u0111\xf3 n\xf3 s\u1ebd\\n- T\xecm ki\u1ebfm relation theo t\xean t\u1eeb Catalog object.\\n- Mapping c\xe1c thu\u1ed9c t\xednh nh\u01b0 c\u1ed9t c\u1ee7a input v\u1edbi c\xe1c relation \u0111\xe3 t\xecm \u0111\u01b0\u1ee3c.\\n- Quy\u1ebft \u0111\u1ecbnh xem c\xe1c thu\u1ed9c t\xednh n\xe0o s\u1ebd tr\u1ecf t\u1edbi c\xf9ng gi\xe1 tr\u1ecb \u0111\u1ec3 g\xe1n cho n\xf3 m\u1ed9t unique ID (ph\u1ee5c v\u1ee5 m\u1ee5c \u0111\xedch v\u1ec1 sau \u0111\u1ec3 t\u1ed1i \u01b0u c\xe1c expressions nh\u01b0 ```col = col```).\\n- Cast c\xe1c expression v\u1ec1 datatype c\u1ee5 th\u1ec3 (v\xed d\u1ee5, ch\xfang ta s\u1ebd kh\xf4ng bi\u1ebft datatype tr\u1ea3 v\u1ec1 c\u1ee7a ```col * 2``` cho t\u1edbi khi col \u0111\u01b0\u1ee3c resolved v\xe0 \u0111\u01b0\u1ee3c x\xe1c \u0111\u1ecbnh datatype).\\n\\n```sql\\nSELECT * FROM test.describe_abc;\\n\\n== Parsed Logical Plan ==\\n\'Project [*]\\n+- \'UnresolvedRelation [test, describe_abc], [], false\\n\\n== Analyzed Logical Plan ==\\nid: int, name: string\\nProject [id#5833, name#5834]\\n+- SubqueryAlias spark_catalog.test.describe_abc\\n   +- Relation test.describe_abc[id#5833,name#5834] parquet\\n\\n== Optimized Logical Plan ==\\nRelation test.describe_abc[id#5833,name#5834] parquet\\n\\n== Physical Plan ==\\n*(1) ColumnarToRow\\n+- FileScan parquet test.describe_abc[id#5833,name#5834] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://bigdataha/user/hive/warehouse/test.db/describe_abc], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<id:int,name:string>\\n```\\n\\n#### 3.2. Logical plan optimizations\\n\\n![spark LP optimization](./images/catalyst-pipeline-LP-optimization.PNG)\\n\\nCatalyst \xe1p d\u1ee5ng c\xe1c standard optimization rule cho logical plan \u0111\u01b0\u1ee3c \u0111\u01b0\u1ee3c ph\xe2n t\xedch \u1edf b\u01b0\u1edbc tr\xean, v\u1edbi c\xe1c d\u1eef li\u1ec7u \u0111\u01b0\u1ee3c cache. \u1ede \u0111\xe2y, cost-based optimization \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u1ec3 sinh ra nhi\u1ec1u plans, v\xe0 sau \u0111\xf3 t\xednh to\xe1n cost cho t\u1eebng plan. Ph\u1ea7n n\xe0y bao g\u1ed3m c\xe1c rule nh\u01b0 \\n- Constant folding: lo\u1ea1i b\u1ecf c\xe1c expression t\xednh to\xe1n m\u1ed9t gi\xe1 tr\u1ecb m\xe0 c\xf3 ta c\xf3 th\u1ec3 x\xe1c \u0111\u1ecbnh tr\u01b0\u1edbc khi code ch\u1ea1y, v\xed d\u1ee5 nh\u01b0 ```y = x * 2 * 2```, compiler s\u1ebd kh\xf4ng sinh ra 2 multiply instruction m\xe0 n\xf3 s\u1ebd thay th\u1ebf tr\u01b0\u1edbc c\xe1c gi\xe1 tr\u1ecb c\xf3 th\u1ec3 \u0111\u01b0\u1ee3c t\xednh to\xe1n ```y = x * 4```.\\n- Predicate pushdown: push down c\xe1c ph\u1ea7n c\u1ee7a query t\u1edbi n\u01a1i d\u1eef li\u1ec7u \u0111\u01b0\u1ee3c l\u01b0u tr\u1eef, filter l\u01b0\u1ee3ng l\u1edbn d\u1eef li\u1ec7u, c\u1ea3i thi\u1ec7n network traffic.\\n- Projection: ch\u1ecdn \u0111\xfang c\xe1c c\u1ed9t \u0111\u01b0\u1ee3c select, s\u1ed1 c\u1ed9t \u0111\u01b0\u1ee3c l\u1ea5y t\u1eeb storage t\u1edbi Spark \xedt h\u01a1n, ph\u1ee5c v\u1ee5 \u0111\u1ecdc c\xe1c columnar storage nhanh h\u01a1n v\xe0 ch\u1ec9 \u0111\u1ecdc c\xe1c c\u1ed9t c\u1ea7n thi\u1ebft.\\n- Boolean expression simplification: v\xed d\u1ee5, A and (A or B) = A(A+B) = A.A + A.B = A + A.B = A.(1+B) = A.\\n- V\xe0 nhi\u1ec1u c\xe1c rule kh\xe1c... \\n\\nCatalyst optimizer c\u1ee7a Spark s\u1ebd bao g\u1ed3m c\xe1c batch of rule, m\u1ed9t s\u1ed1 rule c\xf3 th\u1ec3 t\u1ed3n t\u1ea1i trong nhi\u1ec1u batch. Th\u01b0\u1eddng c\xe1c batch rule n\xe0y s\u1ebd \u0111\u01b0\u1ee3c ch\u1ea1y 1 l\u1ea7n tr\xean plan \u0111\xf3, tuy nhi\xean, c\xf3 m\u1ed9t s\u1ed1 batch s\u1ebd ch\u1ea1y l\u1eb7p \u0111i l\u1eb7p l\u1ea1i cho \u0111\u1ebfn m\u1ed9t s\u1ed1 l\u1ea7n duy\u1ec7t nh\u1ea5t \u0111\u1ecbnh.\\n\\n#### 3.3. Physical planning\\n\\n![spark PP planning](./images/catalyst-pipeline-PP-planning.PNG)\\n\\nSpark SQL nh\u1eadn v\xe0o logical plan v\xe0 sinh ra m\u1ed9t ho\u1eb7c nhi\u1ec1u physical plan, sau \u0111\xf3 n\xf3 s\u1ebd ch\u1ecdn physical plan ph\xf9 h\u1ee3p d\u1ef1a v\xe0o c\xe1c cost model. C\xe1c cost model th\u01b0\u1eddng d\u1ef1a v\xe0o c\xe1c ch\u1ec9 s\u1ed1 th\u1ed1ng k\xea c\u1ee7a c\xe1c relation, \u0111\u1ecbnh l\u01b0\u1ee3ng c\xe1c th\u1ed1ng k\xea ch\u1ea3y v\xe0o m\u1ed9t node trong TreeNode nh\u01b0\\n- K\xedch th\u01b0\u1edbc d\u1eef li\u1ec7u ch\u1ea3y v\xe0o node.\\n- L\u01b0\u1ee3ng b\u1ea3n ghi t\u1eebng b\u1ea3ng.\\n- C\xe1c ch\u1ec9 s\u1ed1 th\u1ed1ng k\xea li\xean quan t\u1edbi c\u1ed9t nh\u01b0: l\u01b0\u1ee3ng gi\xe1 tr\u1ecb ph\xe2n bi\u1ec7t, gi\xe1 tr\u1ecb l\u1edbn nh\u1ea5t gi\xe1 tr\u1ecb nh\u1ecf nh\u1ea5t, gi\xe1 tr\u1ecb \u0111\u1ed9 d\xe0i trung b\xecnh v\xe0 l\u1edbn nh\u1ea5t c\u1ee7a c\u1ed9t, histogram c\xe1c gi\xe1 tr\u1ecb c\u1ee7a c\u1ed9t,...\\n\\nM\u1ed9t s\u1ed1 h\u01b0\u1edbng ti\u1ebfp c\u1eadn c\u1ee7a Spark SQL cho ph\u1ea7n cost model n\xe0y\\n- Size-only approach: ch\u1ec9 s\u1eed d\u1ee5ng th\u1ed1ng k\xea v\u1ec1 k\xedch th\u01b0\u1edbc v\u1eadt l\xfd c\u1ee7a d\u1eef li\u1ec7u ch\u1ea3y v\xe0o node, c\xf3 th\u1ec3 th\xeam ch\u1ec9 s\u1ed1 s\u1ed1 b\u1ea3n ghi trong m\u1ed9t s\u1ed1 tr\u01b0\u1eddng h\u1ee3p.\\n- Cost-based approach: th\u1ed1ng k\xea c\xe1c th\xf4ng tin li\xean quan \u0111\u1ebfn m\u1ee9c c\u1ed9t cho c\xe1c node Aggregate, Filter, Join, Project (l\u01b0u \xfd, cost-based approach ch\u1ec9 \u0111\u01b0\u1ee3c \xe1p d\u1ee5ng cho c\xe1c node lo\u1ea1i n\xe0y, v\u1edbi nh\u1eefng node lo\u1ea1i kh\xe1c, n\xf3 s\u1ebd tr\u1edf v\u1ec1 s\u1eed d\u1ee5ng size-only approach), c\u1ea3i thi\u1ec7n k\xedch th\u01b0\u1edbc v\xe0 l\u01b0\u1ee3ng b\u1ea3n ghi cho c\xe1c node \u0111\xf3.\\n\\nCost-based approach \u0111\u01b0\u1ee3c ch\u1ecdn n\u1ebfu ta set ```spark.sql.cbo.enabled=true```. B\xean c\u1ea1nh \u0111\xf3, c\xe1c th\u1ed1ng k\xea v\u1ec1 b\u1ea3ng v\xe0 c\u1ed9t c\u0169ng c\u1ea7n \u0111\u01b0\u1ee3c thu th\u1eadp \u0111\u1ec3 Spark c\xf3 th\u1ec3 d\u1ef1a v\xe0o \u0111\xf3 t\xednh to\xe1n, b\u1eb1ng vi\u1ec7c ch\u1ea1y c\xe1c l\u1ec7nh **[ANALYZE](https://spark.apache.org/docs/latest/sql-ref-syntax-aux-analyze-table.html)**\\n\\n#### 3.4. Code generation\\n\\n![spark codegen](./images/catalyst-pipeline-codegen.PNG)\\n\\nSau khi \u0111\xe3 l\u1ef1a ch\u1ecdn \u0111\u01b0\u1ee3c physical plan ph\xf9 h\u1ee3p \u0111\u1ec3 ch\u1ea1y, Catalyst s\u1ebd compile m\u1ed9t c\xe2y c\xe1c plans h\u1ed7 tr\u1ee3 codegen th\xe0nh m\u1ed9t h\xe0m Java duy nh\u1ea5t, v\u1ec1 Java bytecode \u0111\u1ec3 ch\u1ea1y tr\xean driver v\xe0 c\xe1c executor. Ph\u1ea7n codegen n\xe0y c\u1ea3i thi\u1ec7n t\u1ed1c \u0111\u1ed9 ch\u1ea1y r\u1ea5t nhi\u1ec1u khi m\xe0 Spark SQL th\u01b0\u1eddng ho\u1ea1t \u0111\u1ed9ng tr\xean c\xe1c in-memory dataset, vi\u1ec7c x\u1eed l\xfd d\u1eef li\u1ec7u th\u01b0\u1eddng g\u1eafn ch\u1eb7t v\u1edbi CPU. Catalyst d\u1ef1a v\xe0o m\u1ed9t t\xednh n\u0103ng c\u1ee7a Scala l\xe0 quasiquotes \u0111\u1ec3 th\u1ef1c hi\u1ec7n \u0111\u01a1n gi\u1ea3n ho\xe1 ph\u1ea7n codegen n\xe0y (quasiquotes cho ph\xe9p x\xe2y d\u1ef1ng c\xe1c abstract syntax tree (ASTs), sau \u0111\xf3 s\u1ebd input v\xe0o Scala compiler \u0111\u1ec3 t\u1ea1o ra bytecode).\\n\\n### 4. Spark session extension\\nSpark session extension l\xe0 m\u1ed9t t\xednh n\u0103ng m\u1edf r\u1ed9ng c\u1ee7a Spark gi\xfap cho ta c\xf3 th\u1ec3 custom c\xe1c ph\u1ea7n trong Catalyst optimizer \u0111\u1ec3 n\xf3 ho\u1ea1t \u0111\u1ed9ng theo t\u1eebng ng\u1eef c\u1ea3nh c\u1ee7a ta.\\n\\n#### 4.1. Custom parser rule\\nNh\u01b0 \u1edf tr\xean tr\xecnh b\xe0y, ban \u0111\u1ea7u query c\u1ee7a ta s\u1ebd ph\u1ea3i \u0111i qua b\u1ed9 parsing \u0111\u1ec3 ki\u1ec3m tra t\xednh h\u1ee3p l\u1ec7 c\u1ee7a query. Spark cung c\u1ea5p m\u1ed9t interface cho ta c\xf3 th\u1ec3 implement \u1edf stage n\xe0y l\xe0 ```ParserInterface```\\n\\n```scala\\npackage org.apache.spark.sql.catalyst.parser\\n\\n@DeveloperApi\\ntrait ParserInterface {\\n  @throws[ParseException](\\"Text cannot be parsed to a LogicalPlan\\")\\n  def parsePlan(sqlText: String): LogicalPlan\\n\\n  @throws[ParseException](\\"Text cannot be parsed to an Expression\\")\\n  def parseExpression(sqlText: String): Expression\\n\\n  @throws[ParseException](\\"Text cannot be parsed to a TableIdentifier\\")\\n  def parseTableIdentifier(sqlText: String): TableIdentifier\\n\\n  @throws[ParseException](\\"Text cannot be parsed to a FunctionIdentifier\\")\\n  def parseFunctionIdentifier(sqlText: String): FunctionIdentifier\\n\\n  @throws[ParseException](\\"Text cannot be parsed to a multi-part identifier\\")\\n  def parseMultipartIdentifier(sqlText: String): Seq[String]\\n\\n  @throws[ParseException](\\"Text cannot be parsed to a schema\\")\\n  def parseTableSchema(sqlText: String): StructType\\n\\n  @throws[ParseException](\\"Text cannot be parsed to a DataType\\")\\n  def parseDataType(sqlText: String): DataType\\n\\n  @throws[ParseException](\\"Text cannot be parsed to a LogicalPlan\\")\\n  def parseQuery(sqlText: String): LogicalPlan\\n}\\n```\\n\\nCh\xfang ta s\u1ebd implement interface \u0111\xf3 v\xe0 inject rule n\xe0y v\xe0o job Spark nh\u01b0 sau\\n\\n```scala\\ncase class CustomerParserRule(sparkSession: SparkSession, delegateParser: ParserInterface) extends ParserInterface {\\n  /* Overwrite those methods here */\\n}\\n\\nval customerParserRuleFunc: SparkSessionExtensions => Unit = (extensionBuilder: SparkSessionExtensions) => {\\n  extensionBuilder.injectParser(CustomerParserRule)\\n}\\n```\\n\\n#### 4.2. Custom analyzer rule\\nAnalyzer rule bao g\u1ed3m m\u1ed9t s\u1ed1 lo\u1ea1i rule nh\u01b0 resolution rule, check rule. C\xe1c rule n\xe0y \u0111\u01b0\u1ee3c inject th\xf4ng qua c\xe1c h\xe0m\\n- ```injectResolutionRule```: inject c\xe1c rule c\u1ee7a ta cho resolution phase.\\n- ```injectPostHocResolutionRule```: ch\u1ea1y c\xe1c rule c\u1ee7a ta sau resolution phase.\\n- ```injectCheckRule```: th\xeam c\xe1c rule \u0111\u1ec3 ki\u1ec3m tra m\u1ed9t s\u1ed1 logic c\u1ee7a c\xe1c logical plan, v\xed d\u1ee5 nh\u01b0 ta mu\u1ed1n ki\u1ec3m tra c\xe1c logic nghi\u1ec7p v\u1ee5, ho\u1eb7c ki\u1ec3m tra xem c\xe1c rule n\xe0o \u0111\xe3 ch\u1ea1y xong,...\\n\\n\u0110\u1ec3 inject resolution rule, ta k\u1ebf th\u1eeba m\u1ed9t l\u1edbp tr\u1eebu t\u01b0\u1ee3ng c\u1ee7a Spark ```Rule[LogicalPlan]```\\n```scala\\ncase class CustomAnalyzerResolutionRule(sparkSession: SparkSession) extends Rule[LogicalPlan] {\\n  override def apply(plan: LogicalPlan): LogicalPlan = {\\n    /* Code for resolution rule */\\n  }\\n}\\n\\nval customAnalyzerResolutionRuleFunc: SparkSessionExtensions => Unit = (extensionBuilder: SparkSessionExtensions) => {\\n  extensionBuilder.injectResolutionRule(CustomAnalyzerResolutionRule)\\n}\\n```\\n\\n\u0110\u1ec3 inject check rule, ta k\u1ebf th\u1eeba l\u1edbp h\xe0m class ```Function1[LogicalPlan, Unit]```\\n```scala\\ncase class CustomAnalyzerCheckRule(sparkSession: SparkSession) extends (LogicalPlan => Unit) {\\n  override def apply(plan: LogicalPlan): Unit = {\\n    /* Code for check rule */\\n  }\\n}\\n\\nval customAnalyzerCheckRuleFunc: SparkSessionExtensions => Unit = (extensionBuilder: SparkSessionExtensions) => {\\n  extensionBuilder.injectCheckRule(CustomAnalyzerCheckRule)\\n}\\n```\\n\\n#### 4.3. Custom optimization\\n\u0110\u1ec3 custom ph\u1ea7n logical plan optimization, ta s\u1ebd k\u1ebf th\u1eeba l\u1edbp tr\u1eebu t\u01b0\u1ee3ng ```Rule[LogicalPlan]```\\n```scala\\ncase class CustomOptimizer(sparkSession: SparkSession) extends Rule[LogicalPlan] {\\n  override def apply(plan: LogicalPlan): LogicalPlan = {\\n    /* Code for custom logical optimier */\\n  }\\n}\\n\\nval customOptimizerFunc: SparkSessionExtensions => Unit = (extensionBuilder: SparkSessionExtensions) => {\\n  extensionBuilder.injectOptimizerRule(CustomOptimizer)\\n}\\n```\\n\\n#### 4.4. Custom physical planning\\n\u0110\u1ec3 c\u1ea5u h\xecnh ph\u1ea7n chi\u1ebfn thu\u1eadt ch\u1ea1y cho Spark Catalyst optimizer, ch\xfang ta k\u1ebf th\u1eeba l\u1edbp tr\u1eebu t\u01b0\u1ee3ng ```SparkStrategy``` v\xe0 implement h\xe0m ```apply``` c\u1ee7a class \u0111\xf3\\n```scala\\ncase class CustomStrategy(sparkSession: SparkSession) extends SparkStrategy {\\n  override def apply(plan: LogicalPlan): Seq[SparkPlan] = {\\n    /* Code for custom spark strategy/physical planning */\\n  }\\n}\\n\\nval customStrategyFunc: SparkSessionExtensions => Unit = (extensionBuilder: SparkSessionExtensions) => {\\n  extensionBuilder.injectPlannerStrategy(CustomStrategy)\\n}\\n```\\n\\n#### 4.5. V\xed d\u1ee5 code c\u1ea5u h\xecnh ph\u1ea7n logical plan optimization trong Catalyst optimizer\\nPh\u1ea7n n\xe0y m\xecnh s\u1ebd code m\u1ed9t v\xed d\u1ee5 v\u1ec1 thay \u0111\u1ed5i logical plan optimization b\u1eb1ng Spark extension. M\u1ed9t extension \u0111\u01a1n gi\u1ea3n c\xf3 code nh\u01b0 d\u01b0\u1edbi \u0111\xe2y\\n\\n```scala\\n/* class CustomProjectFilterExtension ======================================= */\\npackage extensions\\nimport org.apache.spark.sql.SparkSession\\nimport org.apache.spark.sql.catalyst.plans.logical._\\nimport org.apache.spark.sql.catalyst.rules.Rule\\n// create an extension that \\ncase class CustomProjectFilterExtension(spark: SparkSession) extends Rule[LogicalPlan] {\\n  override def apply(plan: LogicalPlan): LogicalPlan = {\\n    val fixedPlan = plan transformDown {\\n      case Project(expression, Filter(condition, child)) =>\\n          Filter(condition, child)\\n    }\\n    fixedPlan\\n  }\\n}\\n\\n/* class AllExtensions ======================================= */\\npackage extensions\\nimport org.apache.spark.sql.SparkSessionExtensions\\n// inject the extension to SparkSessionExtensions\\nclass AllExtensions extends (SparkSessionExtensions => Unit) {\\n  override def apply(ext: SparkSessionExtensions): Unit = {\\n    ext.injectOptimizerRule(CustomProjectFilterExtension)\\n  }\\n}\\n```\\n\\nClass ```CustomProjectFilterExtension``` \u1edf tr\xean bi\u1ebfn \u0111\u1ed5i ph\xe9p Filter (l\u1ecdc row), Project (ch\u1ecdn c\u1ed9t trong l\xfac scan file) th\xe0nh ch\u1ec9 c\xf2n ph\xe9p Filter. Khi \u0111\xf3, m\u1eb7c d\xf9 ta \u0111\xe3 ch\u1ecdn c\u1ed9t nh\u01b0ng n\xf3 v\u1eabn scan t\u1ea5t c\u1ea3 c\xe1c c\u1ed9t trong file. \\n\\nTa compile project\\n```bash\\n# compile jar file\\nmvn clean package && mvn dependency:copy-dependencies\\n```\\n\\n##### 4.5.1. Khi kh\xf4ng apply extension\\nTa kh\u1edfi t\u1ea1o ```spark-shell``` kh\xf4ng truy\u1ec1n extension\\n```bash\\n# kh\u1edfi t\u1ea1o spark-shell\\n$SPARK_330/bin/spark-shell --jars $(echo /Users/tranlammacbook/Documents/spark_streaming_kafka/spark_ex/target/dependency/*.jar | tr \' \' \',\'),/Users/tranlammacbook/Documents/spark_streaming_kafka/spark_ex/target/custom-extension-1.0-SNAPSHOT.jar\\n\\n# ki\u1ec3m tra spark.sql.extensions\\nscala> spark.conf.get(\\"spark.sql.extensions\\")\\nres0: String = null\\n\\n# explain m\u1ed9t query c\xf3 Filter v\xe0 Project\\nscala> spark.sql(\\"SELECT hotel, is_canceled FROM (SELECT * FROM test.hotel_bookings WHERE hotel=\'Resort Hotel\') a\\").explain(extended = true)\\n\\n== Parsed Logical Plan ==\\n\'Project [\'hotel, \'is_canceled]\\n+- \'SubqueryAlias a\\n   +- \'Project [*]\\n      +- \'Filter (\'hotel = Resort Hotel)\\n         +- \'UnresolvedRelation [test, hotel_bookings], [], false\\n\\n== Analyzed Logical Plan ==\\nhotel: string, is_canceled: bigint\\nProject [hotel#0, is_canceled#1L]\\n+- SubqueryAlias a\\n   +- Project [hotel#0, is_canceled#1L, lead_time#2L, arrival_date_year#3L, arrival_date_month#4, arrival_date_week_number#5L, arrival_date_day_of_month#6L, stays_in_weekend_nights#7L, stays_in_week_nights#8L, adults#9L, children#10, babies#11L, meal#12, country#13, market_segment#14, distribution_channel#15, is_repeated_guest#16L, previous_cancellations#17L, previous_bookings_not_canceled#18L, reserved_room_type#19, assigned_room_type#20, booking_changes#21L, deposit_type#22, agent#23, ... 8 more fields]\\n      +- Filter (hotel#0 = Resort Hotel)\\n         +- SubqueryAlias spark_catalog.test.hotel_bookings\\n            +- Relation test.hotel_bookings[hotel#0,is_canceled#1L,lead_time#2L,arrival_date_year#3L,arrival_date_month#4,arrival_date_week_number#5L,arrival_date_day_of_month#6L,stays_in_weekend_nights#7L,stays_in_week_nights#8L,adults#9L,children#10,babies#11L,meal#12,country#13,market_segment#14,distribution_channel#15,is_repeated_guest#16L,previous_cancellations#17L,previous_bookings_not_canceled#18L,reserved_room_type#19,assigned_room_type#20,booking_changes#21L,deposit_type#22,agent#23,... 8 more fields] parquet\\n\\n== Optimized Logical Plan ==\\nProject [hotel#0, is_canceled#1L]\\n+- Filter (isnotnull(hotel#0) AND (hotel#0 = Resort Hotel))\\n   +- Relation test.hotel_bookings[hotel#0,is_canceled#1L,lead_time#2L,arrival_date_year#3L,arrival_date_month#4,arrival_date_week_number#5L,arrival_date_day_of_month#6L,stays_in_weekend_nights#7L,stays_in_week_nights#8L,adults#9L,children#10,babies#11L,meal#12,country#13,market_segment#14,distribution_channel#15,is_repeated_guest#16L,previous_cancellations#17L,previous_bookings_not_canceled#18L,reserved_room_type#19,assigned_room_type#20,booking_changes#21L,deposit_type#22,agent#23,... 8 more fields] parquet\\n\\n== Physical Plan ==\\n*(1) Filter (isnotnull(hotel#0) AND (hotel#0 = Resort Hotel))\\n+- *(1) ColumnarToRow\\n   +- FileScan parquet test.hotel_bookings[hotel#0,is_canceled#1L] Batched: true, DataFilters: [isnotnull(hotel#0), (hotel#0 = Resort Hotel)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/Users/tranlammacbook/Documents/spark_streaming_kafka/spark_ex/sp..., PartitionFilters: [], PushedFilters: [IsNotNull(hotel), EqualTo(hotel,Resort Hotel)], ReadSchema: struct<hotel:string,is_canceled:bigint>\\n```\\n\\nTa th\u1ea5y r\u1eb1ng ```Optimized Logical Plan``` c\xf3 c\u1ea3 ph\xe9p Project v\xe0 Filter, do ta filter ```WHERE hotel=\'Resort Hotel\'``` v\xe0 project ```SELECT hotel, is_canceled```. T\u1edbi physical plan, n\xf3 c\u0169ng ch\u1ec9 scan 2 c\u1ed9t ```FileScan parquet test.hotel_bookings[hotel#0,is_canceled#1L]```.\\n\\n##### 4.5.2. Khi c\xf3 extension\\n```bash\\n# kh\u1edfi t\u1ea1o spark-shell v\u1edbi extension\\n$SPARK_330/bin/spark-shell --jars $(echo /Users/tranlammacbook/Documents/spark_streaming_kafka/spark_ex/target/dependency/*.jar | tr \' \' \',\'),/Users/tranlammacbook/Documents/spark_streaming_kafka/spark_ex/target/custom-extension-1.0-SNAPSHOT.jar --conf spark.sql.extensions=extensions.AllExtensions\\n\\n# ki\u1ec3m tra spark.sql.extensions\\nscala> spark.conf.get(\\"spark.sql.extensions\\")\\nres0: String = extensions.AllExtensions\\n\\n# explain m\u1ed9t query c\xf3 Filter v\xe0 Project gi\u1ed1ng h\u1ec7t c\xe2u b\xean tr\xean\\nscala> spark.sql(\\"SELECT hotel, is_canceled FROM (SELECT * FROM test.hotel_bookings WHERE hotel=\'Resort Hotel\') a\\").explain(extended = true)\\n\\n== Parsed Logical Plan ==\\n\'Project [\'hotel, \'is_canceled]\\n+- \'SubqueryAlias a\\n   +- \'Project [*]\\n      +- \'Filter (\'hotel = Resort Hotel)\\n         +- \'UnresolvedRelation [test, hotel_bookings], [], false\\n\\n== Analyzed Logical Plan ==\\nhotel: string, is_canceled: bigint\\nProject [hotel#0, is_canceled#1L]\\n+- SubqueryAlias a\\n   +- Project [hotel#0, is_canceled#1L, lead_time#2L, arrival_date_year#3L, arrival_date_month#4, arrival_date_week_number#5L, arrival_date_day_of_month#6L, stays_in_weekend_nights#7L, stays_in_week_nights#8L, adults#9L, children#10, babies#11L, meal#12, country#13, market_segment#14, distribution_channel#15, is_repeated_guest#16L, previous_cancellations#17L, previous_bookings_not_canceled#18L, reserved_room_type#19, assigned_room_type#20, booking_changes#21L, deposit_type#22, agent#23, ... 8 more fields]\\n      +- Filter (hotel#0 = Resort Hotel)\\n         +- SubqueryAlias spark_catalog.test.hotel_bookings\\n            +- Relation test.hotel_bookings[hotel#0,is_canceled#1L,lead_time#2L,arrival_date_year#3L,arrival_date_month#4,arrival_date_week_number#5L,arrival_date_day_of_month#6L,stays_in_weekend_nights#7L,stays_in_week_nights#8L,adults#9L,children#10,babies#11L,meal#12,country#13,market_segment#14,distribution_channel#15,is_repeated_guest#16L,previous_cancellations#17L,previous_bookings_not_canceled#18L,reserved_room_type#19,assigned_room_type#20,booking_changes#21L,deposit_type#22,agent#23,... 8 more fields] parquet\\n\\n== Optimized Logical Plan ==\\nFilter (isnotnull(hotel#0) AND (hotel#0 = Resort Hotel))\\n+- Relation test.hotel_bookings[hotel#0,is_canceled#1L,lead_time#2L,arrival_date_year#3L,arrival_date_month#4,arrival_date_week_number#5L,arrival_date_day_of_month#6L,stays_in_weekend_nights#7L,stays_in_week_nights#8L,adults#9L,children#10,babies#11L,meal#12,country#13,market_segment#14,distribution_channel#15,is_repeated_guest#16L,previous_cancellations#17L,previous_bookings_not_canceled#18L,reserved_room_type#19,assigned_room_type#20,booking_changes#21L,deposit_type#22,agent#23,... 8 more fields] parquet\\n\\n== Physical Plan ==\\n*(1) Filter (isnotnull(hotel#0) AND (hotel#0 = Resort Hotel))\\n+- *(1) ColumnarToRow\\n   +- FileScan parquet test.hotel_bookings[hotel#0,is_canceled#1L,lead_time#2L,arrival_date_year#3L,arrival_date_month#4,arrival_date_week_number#5L,arrival_date_day_of_month#6L,stays_in_weekend_nights#7L,stays_in_week_nights#8L,adults#9L,children#10,babies#11L,meal#12,country#13,market_segment#14,distribution_channel#15,is_repeated_guest#16L,previous_cancellations#17L,previous_bookings_not_canceled#18L,reserved_room_type#19,assigned_room_type#20,booking_changes#21L,deposit_type#22,agent#23,... 8 more fields] Batched: true, DataFilters: [isnotnull(hotel#0), (hotel#0 = Resort Hotel)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[file:/Users/tranlammacbook/Documents/spark_streaming_kafka/spark_ex/sp..., PartitionFilters: [], PushedFilters: [IsNotNull(hotel), EqualTo(hotel,Resort Hotel)], ReadSchema: struct<hotel:string,is_canceled:bigint,lead_time:bigint,arrival_date_year:bigint,arrival_date_mon...\\n```\\n\\nKhi n\xe0y, ```Optimized Logical Plan``` kh\xf4ng c\xf2n ph\xe9p Project n\u1eefa, m\xe0 ch\u1ec9 c\xf2n ph\xe9p Filter, l\xe0m cho l\xfac t\u1edbi b\u01b0\u1edbc physical plan, n\xf3 scan t\u1ea5t c\u1ea3 c\xe1c c\u1ed9t trong b\u1ea3ng ```FileScan parquet test.hotel_bookings[hotel#0,is_canceled#1L,lead_time#2L,arrival_date_year#3L,arrival_date_month#4,arrival_date_week_number#5L,arrival_date_day_of_month#6L,stays_in_weekend_nights#7L,stays_in_week_nights#8L,adults#9L,children#10,babies#11L,meal#12,country#13,market_segment#14,distribution_channel#15,is_repeated_guest#16L,previous_cancellations#17L,previous_bookings_not_canceled#18L,reserved_room_type#19,assigned_room_type#20,booking_changes#21L,deposit_type#22,agent#23,... 8 more fields]```.\\n\\n\u1ede tr\xean m\xecnh \u0111\xe3 tr\xecnh b\xe0y c\u1ee5 th\u1ec3 v\u1ec1 c\xe1c th\xe0nh ph\u1ea7n c\u1ee7a Spark Catalyst optimizer v\xe0 c\xe1ch vi\u1ebft c\xe1c spark session extension \u0111\u1ec3 can thi\u1ec7p thay \u0111\u1ed5i c\xe1c plan c\u1ee7a Catalyst, c\u0169ng \u0111\xe3 c\xf3 v\xed d\u1ee5 code c\u1ee5 th\u1ec3 \u0111\u1ec3 ch\u1ee9ng minh \u0111i\u1ec1u n\xe0y. \u1ede b\xe0i vi\u1ebft sau, m\xecnh s\u1ebd tr\xecnh b\xe0y th\xeam m\u1ed9t ph\u1ea7n n\u1eefa l\xe0 t\xednh n\u0103ng m\u1edbi trong Spark 3.0, \u0111\xf3 l\xe0 Spark Adaptive Query Execution, t\xednh n\u0103ng c\u1ea3i thi\u1ec7n t\u1ed1c \u0111\u1ed9 job Spark \u1edf runtime.\\n\\n### 5. T\xe0i li\u1ec7u tham kh\u1ea3o\\n\\n[Deep Dive into Spark SQL\'s Catalyst Optimizer](https://www.databricks.com/blog/2015/04/13/deep-dive-into-spark-sqls-catalyst-optimizer.html)\\n\\n[Spark Catalyst Pipeline: A Deep Dive Into Spark\u2019s Optimizer](https://www.unraveldata.com/resources/catalyst-analyst-a-deep-dive-into-sparks-optimizer/)\\n\\n[Extending Apache Spark Catalyst for Custom Optimizations](https://medium.com/@pratikbarhate/extending-apache-spark-catalyst-for-custom-optimizations-9b491efdd24f)"},{"id":"mysql-series-mysql-indexing","metadata":{"permalink":"/blogs/blog/mysql-series-mysql-indexing","editUrl":"https://github.com/lam1051999/blogs/edit/main/blog/2022-10-15-mysql-indexing/index.md","source":"@site/blog/2022-10-15-mysql-indexing/index.md","title":"MySQL series - Indexing","description":"Indexing l\xe0 ph\u01b0\u01a1ng ph\xe1p gi\xfap truy v\u1ea5n nhanh h\u01a1n, l\xe0 m\u1ed9t ph\u1ea7n r\u1ea5t quan tr\u1ecdng trong vi\u1ec7c c\u1ea3i thi\u1ec7n hi\u1ec7u n\u0103ng. \u0110\u1ed1i v\u1edbi c\xe1c b\u1ea3ng d\u1eef li\u1ec7u l\u1edbn, vi\u1ec7c \u0111\xe1nh index ch\xednh x\xe1c gi\xfap t\u0103ng t\u1ed1c \u0111\u1ed9 nhanh h\u01a1n g\u1ea5p nhi\u1ec1u l\u1ea7n, tuy nhi\xean, vi\u1ec7c n\xe0y th\u01b0\u1eddng kh\xf4ng \u0111\u01b0\u1ee3c t\xednh to\xe1n s\xe1t sao trong quy tr\xecnh thi\u1ebft k\u1ebf b\u1ea3ng. B\xe0i vi\u1ebft n\xe0y n\xf3i v\u1ec1 c\xe1c lo\u1ea1i index v\xe0 c\xe1ch \u0111\xe1nh index sao cho h\u1ee3p l\xfd.","date":"2022-10-15T00:00:00.000Z","formattedDate":"October 15, 2022","tags":[{"label":"Bigdata","permalink":"/blogs/blog/tags/bigdata"},{"label":"MySQL","permalink":"/blogs/blog/tags/my-sql"},{"label":"Database","permalink":"/blogs/blog/tags/database"},{"label":"Data Engineering","permalink":"/blogs/blog/tags/data-engineering"},{"label":"Indexing","permalink":"/blogs/blog/tags/indexing"}],"readingTime":12.23,"truncated":true,"authors":[{"name":"Tr\u1ea7n L\xe2m","title":"Data Engineer","url":"https://github.com/lam1051999","imageURL":"https://github.com/lam1051999.png","key":"tranlam"}],"frontMatter":{"slug":"mysql-series-mysql-indexing","title":"MySQL series - Indexing","authors":"tranlam","tags":["Bigdata","MySQL","Database","Data Engineering","Indexing"],"image":"./images/indexing.PNG"},"prevItem":{"title":"Spark catalyst optimizer v\xe0 Spark session extension","permalink":"/blogs/blog/spark-catalyst-optimizer-and-spark-session-extension"},"nextItem":{"title":"MySQL series - Multiversion concurrency control","permalink":"/blogs/blog/mysql-series-mysql-mvcc"}},"content":"Indexing l\xe0 ph\u01b0\u01a1ng ph\xe1p gi\xfap truy v\u1ea5n nhanh h\u01a1n, l\xe0 m\u1ed9t ph\u1ea7n r\u1ea5t quan tr\u1ecdng trong vi\u1ec7c c\u1ea3i thi\u1ec7n hi\u1ec7u n\u0103ng. \u0110\u1ed1i v\u1edbi c\xe1c b\u1ea3ng d\u1eef li\u1ec7u l\u1edbn, vi\u1ec7c \u0111\xe1nh index ch\xednh x\xe1c gi\xfap t\u0103ng t\u1ed1c \u0111\u1ed9 nhanh h\u01a1n g\u1ea5p nhi\u1ec1u l\u1ea7n, tuy nhi\xean, vi\u1ec7c n\xe0y th\u01b0\u1eddng kh\xf4ng \u0111\u01b0\u1ee3c t\xednh to\xe1n s\xe1t sao trong quy tr\xecnh thi\u1ebft k\u1ebf b\u1ea3ng. B\xe0i vi\u1ebft n\xe0y n\xf3i v\u1ec1 c\xe1c lo\u1ea1i index v\xe0 c\xe1ch \u0111\xe1nh index sao cho h\u1ee3p l\xfd.\\n\\n![Indexing](./images/indexing.PNG)\\n\\n\x3c!--truncate--\x3e\\n\\n### 1. C\xe1c lo\u1ea1i index\\nC\xf3 r\u1ea5t nhi\u1ec1u lo\u1ea1i index thi\u1ebft k\u1ebf cho nhi\u1ec1u m\u1ee5c \u0111\xedch kh\xe1c nhau. N\xean nh\u1edb r\u1eb1ng, index \u0111\u01b0\u1ee3c tri\u1ec3n khai \u1edf storage engine, kh\xf4ng ph\u1ea3i \u1edf t\u1ea7ng server, do v\u1eady, ch\xfang ho\u1ea1t \u0111\u1ed9ng kh\xe1c nhau \u1edf c\xe1c storage engine kh\xe1c nhau. C\xe1c lo\u1ea1i index \u1edf b\xe0i vi\u1ebft n\xe0y ch\u1ee7 y\u1ebfu v\u1ec1 index trong InnoDB.\\n\\n#### 1.1. B-tree index\\nB-tree index d\xf9ng c\xe2y c\xe2n b\u1eb1ng \u0111\u1ec3 l\u01b0u tr\u1eef d\u1eef li\u1ec7u c\u1ee7a n\xf3, h\u1ea7u nh\u01b0 t\u1ea5t c\u1ea3 storage engine c\u1ee7a MySQL \u0111\u1ec1u h\u1ed7 tr\u1ee3 ki\u1ec3u index n\xe0y (ho\u1eb7c l\xe0 bi\u1ebfn th\u1ec3 c\u1ee7a n\xf3), v\xed d\u1ee5, NDB Cluster storage engine s\u1eed d\u1ee5ng c\u1ea5u tr\xfac d\u1eef li\u1ec7u T-tree cho indexing, InnoDB s\u1eed d\u1ee5ng B+ tree,... \\nTrong B-tree, t\u1ea5t c\u1ea3 gi\xe1 tr\u1ecb \u0111\u1ec1u \u0111\u01b0\u1ee3c s\u1eafp x\u1ebfp, v\xe0 c\xe1c l\xe1 (leaf) \u0111\u1ec1u c\xf3 kho\u1ea3ng c\xe1ch b\u1eb1ng nhau t\u1edbi g\u1ed1c (root) c\u1ee7a c\xe2y. D\u01b0\u1edbi \u0111\xe2y h\xecnh l\xe0 m\xf4 t\u1ea3 c\u1ea5u tr\xfac d\u1eef li\u1ec7u B-tree. \\n\\n![B Tree](./images/BTree.PNG)\\n\\nB-tree cung c\u1ea5p cho ta kh\u1ea3 n\u0103ng t\xecm ki\u1ebfm, truy c\u1eadp d\u1eef li\u1ec7u tu\u1ea7n t\u1ef1, ch\xe8n v\xe0 xo\xe1 v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p logarithmic ${O(log(n))}$. \u1ede root node s\u1ebd c\xf3 con tr\u1ecf tr\u1ecf \u0111\u1ebfn c\xe1c node con, khi ta truy v\u1ea5n, storage engine s\u1ebd bi\u1ebft nh\xe1nh node con ph\xf9 h\u1ee3p \u0111\u1ec3 duy\u1ec7t b\u1eb1ng c\xe1c nh\xecn v\xe0o c\xe1c gi\xe1 tr\u1ecb trong node pages, ch\u1ee9a th\xf4ng tin ng\u01b0\u1ee1ng tr\xean v\xe0 ng\u01b0\u1ee1ng d\u01b0\u1edbi gi\xe1 tr\u1ecb c\xe1c node con trong page \u0111\xf3. \u1ede t\u1ea7ng leaf page, c\xe1c con tr\u1ecf tr\u1ecf \u0111\u1ebfn d\u1eef li\u1ec7u thay v\xec tr\u1ecf t\u1edbi c\xe1c page kh\xe1c.\\n\\n\u1ede h\xecnh tr\xean, ch\xfang ta ch\u1ec9 nh\xecn th\u1ea5y 1 node page v\xe0 c\xe1c leaf page. Th\u1ef1c t\u1ebf B-tree c\xf3 r\u1ea5t nhi\u1ec1u t\u1ea7ng node page gi\u1eefa root node v\xe0 leaf nodes, \u0111\u1ed9 l\u1edbn c\u1ee7a c\xe2y d\u1ef1a v\xe0o \u0111\u1ed9 l\u1edbn c\u1ee7a b\u1ea3ng \u0111\u01b0\u1ee3c \u0111\xe1nh index.\\n\\n##### 1.1.1. Adaptive hash index\\nKhi c\xe1c gi\xe1 tr\u1ecb index \u0111\u01b0\u1ee3c truy c\u1eadp v\u1edbi t\u1ea7n s\u1ed1 cao, InnoDB s\u1ebd d\u1ef1ng m\u1ed9t b\u1ed9 hash index cho ch\xfang \u1edf memory tr\xean n\u1ec1n c\u1ee7a B-tree index, gi\xfap ch\xfang ta c\xf3 th\u1ec3 t\xecm ki\u1ebfm gi\xe1 tr\u1ecb hash n\xe0y r\u1ea5t nhanh v\xe0 hi\u1ec7u qu\u1ea3. Ch\u1ebf \u0111\u1ed9 n\xe0y l\xe0 t\u1ef1 \u0111\u1ed9ng b\u1edfi InnoDB, tuy nhi\xean, b\u1ea1n v\u1eabn c\xf3 th\u1ec3 v\xf4 hi\u1ec7u ho\xe1 adaptive hash index n\u1ebfu mu\u1ed1n.\\n\\n##### 1.1.2. C\xe1c lo\u1ea1i truy v\u1ea5n c\xf3 th\u1ec3 d\xf9ng B-tree index\\nB-tree index ho\u1ea1t \u0111\u1ed9ng hi\u1ec7u qu\u1ea3 v\u1edbi c\xe1c lo\u1ea1i truy v\u1ea5n ch\xednh x\xe1c gi\xe1 tr\u1ecb, m\u1ed9t kho\u1ea3ng gi\xe1 tr\u1ecb, hay m\u1ed9t ti\u1ec1n t\u1ed1 gi\xe1 tr\u1ecb. C\xe1c truy v\u1ea5n n\xe0y l\xe0 t\u1ed1t nh\u1ea5t khi ch\xfang ta d\xf9ng ch\xfang tr\xean c\u1ed9t tr\xe1i nh\u1ea5t trong t\u1eadp c\u1ed9t \u0111\u01b0\u1ee3c \u0111\xe1nh index.\\n\\n```sql\\nCREATE TABLE People (\\n     last_name varchar(50) not null,\\n     first_name varchar(50) not null,\\n     dob date not null,\\n     KEY `idx_full_col` (last_name, first_name, dob)\\n) ENGINE=InnoDB;\\n```\\n\\n- Kh\u1edbp ch\xednh x\xe1c gi\xe1 tr\u1ecb: khi c\xe1c c\u1ed9t trong index \u0111\u01b0\u1ee3c query kh\u1edbp \u0111\xfang gi\xe1 tr\u1ecb n\xe0o \u0111\xf3, v\xed d\u1ee5 ```WHERE last_name = \'lam\' AND first_name = \'tran\' AND dob = \'1999-05-10\'```. Truy v\u1ea5n lo\u1ea1i n\xe0y s\u1ebd tr\u1ea3 v\u1ec1 k\u1ebft qu\u1ea3 r\u1ea5t nhanh.\\n- Kh\u1edbp c\u1ed9t tr\xe1i nh\u1ea5t: V\xed d\u1ee5 n\u1ebfu ta truy v\u1ea5n t\xecm ng\u01b0\u1eddi c\xf3 ```last_name = \'lam\'```.\\n- Kh\u1edbp ph\u1ea7n \u0111\u1ea7u c\u1ee7a c\u1ed9t tr\xe1i nh\u1ea5t: V\xed d\u1ee5 khi ta t\xecm ng\u01b0\u1eddi c\xf3 last_name b\u1eaft \u0111\u1ea7u b\u1eb1ng ch\u1eef \'L\'.\\n- Kh\u1edbp m\u1ed9t kho\u1ea3ng gi\xe1 tr\u1ecb: Khi ta c\u1ea7n l\u1ea5y t\u1eadp ng\u01b0\u1eddi c\xf3 last_name \u1edf gi\u1eefa \'anh\' v\xe0 \'lam\'.\\n- Kh\u1edbp c\u1ed9t tr\xe1i nh\u1ea5t v\xe0 m\u1ed9t kho\u1ea3ng gi\xe1 tr\u1ecb c\u1ed9t ti\u1ebfp theo: V\xed d\u1ee5 khi ta c\u1ea7n th\xf4ng tin nh\u1eefng ng\u01b0\u1eddi last_name l\xe0 \'lam\' v\xe0 first_name b\u1eaft \u0111\u1ea7u b\u1eb1ng ch\u1ee9 \'t\'.\\n\\n##### 1.1.3. M\u1ed9t s\u1ed1 nh\u01b0\u1ee3c \u0111i\u1ec3m c\u1ee7a B-tree index\\n- N\xf3 s\u1ebd kh\xf4ng th\u1ef1c s\u1ef1 c\xf3 \xedch khi \u0111i\u1ec1u ki\u1ec7n truy v\u1ea5n kh\xf4ng b\u1eaft \u0111\u1ea7u b\u1eb1ng c\u1ed9t tr\xe1i nh\u1ea5t, c\u0169ng nh\u01b0 kh\xf4ng t\u1ed1t khi truy v\u1ea5n t\xecm nh\u1eefng ng\u01b0\u1eddi c\xf3 last_name k\u1ebft th\xfac b\u1eb1ng ch\u1eef c\u1ee5 th\u1ec3.\\n- C\xe1c truy v\u1ea5n b\u1ecf qu\xe3ng m\u1ed9t s\u1ed1 c\u1ed9t c\u0169ng kh\xf4ng t\u1eadn d\u1ee5ng h\u1ebft \u0111\u01b0\u1ee3c l\u1ee3i \xedch index. V\xed d\u1ee5 khi t\xecm nh\u1eefng ng\u01b0\u1eddi c\xf3 ```last_name = \'lam\' AND dob = \'1999-05-10\'``` m\xe0 kh\xf4ng c\xf3 \u0111i\u1ec1u ki\u1ec7n tr\xean first_name.\\n- Index ki\u1ec3u n\xe0y s\u1ebd kh\xf4ng t\u1eadn d\u1ee5ng ph\u1ea7n c\xe1c c\u1ed9t \u0111\u1eb1ng sau c\u1ed9t kh\u1edbp kho\u1ea3ng gi\xe1 tr\u1ecb. V\xed d\u1ee5, truy v\u1ea5n ng\u01b0\u1eddi ```last_name = \'lam\' AND first_name LIKE \'t%\' AND dob = \'1999-05-10\'``` s\u1ebd ch\u1ec9 \xe1p d\u1ee5ng index tr\xean 2 c\u1ed9t last_name v\xe0 first_name. V\u1edbi nh\u1eefng c\u1ed9t \xedt d\u1eef li\u1ec7u ph\xe2n bi\u1ec7t, ta c\xf3 th\u1ec3 overcome c\xe1i n\xe0y b\u1eb1ng vi\u1ec7c li\u1ec7t k\xea t\u1ea5t c\u1ea3 gi\xe1 tr\u1ecb thay v\xec truy c\u1eadp kho\u1ea3ng gi\xe1 tr\u1ecb.\\n\\nNh\u01b0 v\u1eady, th\u1ee9 t\u1ef1 c\u1ee7a c\xe1c c\u1ed9t trong index th\u1ef1c s\u1ef1 r\u1ea5t quan tr\u1ecdng, b\u1ea1n c\u1ea7n xem x\xe9t m\u1ee5c ti\xeau truy v\u1ea5n c\u1ee7a \u1ee9ng d\u1ee5ng tr\u01b0\u1edbc khi \u0111\xe1nh index cho c\xe1c c\u1ed9t.\\n\\n#### 1.2. Full-text index\\nFull-text index t\xecm ki\u1ebfm c\xe1c t\u1eeb kho\xe1 trong chu\u1ed7i ch\u1eef thay v\xec so s\xe1nh tr\u1ef1c ti\u1ebfp c\u1ea3 gi\xe1 tr\u1ecb c\u1ee7a tr\u01b0\u1eddng \u0111\xf3. N\xf3 h\u1ed7 tr\u1ee3 cho vi\u1ec7c t\xecm ki\u1ebfm h\u01a1n l\xe0 vi\u1ec7c suy x\xe9t d\u1eef li\u1ec7u kh\u1edbp v\u1edbi ki\u1ec3u n\xe0o. Khi m\u1ed9t c\u1ed9t \u0111\u01b0\u1ee3c \u0111\xe1nh full-text index, ta v\u1eabn c\xf3 th\u1ec3 \u0111\xe1nh B-tree index tr\xean c\u1ed9t \u0111\xf3 \u0111\u01b0\u1ee3c.\\n\\n```sql\\nCREATE TABLE tutorial (\\n    id INT UNSIGNED AUTO_INCREMENT NOT NULL PRIMARY KEY, \\n    title VARCHAR(200), \\n    description TEXT, \\n    FULLTEXT `idx_full_text` (title,description)\\n) ENGINE=InnoDB;\\n```\\nFull-text index \u0111\u01b0\u1ee3c d\xf9ng b\u1eb1ng c\xfa ph\xe1p ```MATCH() AGAINST()``` v\u1edbi tham s\u1ed1 c\u1ee7a ```MATCH()``` l\xe0 c\xe1c c\u1ed9t \u0111\u1ec3 t\xecm ki\u1ebfm, c\xe1ch nhau b\u1eb1ng d\u1ea5u ph\u1ea3y, tham s\u1ed1 c\u1ee7a ```AGAINST()``` l\xe0 chu\u1ed7i \u0111\u1ec3 t\xecm ki\u1ebfm c\xf9ng lo\u1ea1i t\xecm ki\u1ebfm \u0111\u1ec3 th\u1ef1c hi\u1ec7n.\\n\\n##### 1.2.1. C\xe1c lo\u1ea1i full-text index\\n- Natural language search: ch\u1ebf \u0111\u1ed9 n\xe0y s\u1ebd di\u1ec5n gi\u1ea3i chu\u1ed7i ch\u1eef t\xecm ki\u1ebfm d\u01b0\u1edbi d\u1ea1ng m\u1ed9t c\u1ee5m t\u1eeb trong ng\xf4n ng\u1eef t\u1ef1 nhi\xean c\u1ee7a con ng\u01b0\u1eddi. Ch\u1ebf \u0111\u1ed9 n\xe0y kh\xf4ng t\xednh c\xe1c stopwords c\u0169ng nh\u01b0 c\xe1c t\u1eeb ng\u1eafn h\u01a1n s\u1ed1 k\xed t\u1ef1 t\u1ed1i thi\u1ebfu (m\u1eb7c \u0111\u1ecbnh l\xe0 3 k\xed t\u1ef1 v\u1edbi InnoDB)\\n- Boolean search: di\u1ec5n gi\u1ea3i chu\u1ed7i ch\u1eef t\xecm ki\u1ebfm s\u1eed d\u1ee5ng quy t\u1eafc ng\xf4n ng\u1eef truy v\u1ea5n \u0111\u1eb7c bi\u1ec7t. Chu\u1ed7i ch\u1ee9 \u0111\xf3 ch\u1ee9a t\u1ea5t c\u1ea3 c\xe1c t\u1eeb c\u1ea7n t\xecm ki\u1ebfm, n\xf3 c\u0169ng c\xf3 th\u1ec3 ch\u1ee9a c\xe1c operator \u0111\u1eb7c bi\u1ec7t cho c\xe1c t\xecm ki\u1ebfm n\xe2ng cao, nh\u01b0 m\u1ed9t t\u1eeb c\u1ea7n ph\u1ea3i \u0111\u01b0\u1ee3c xu\u1ea5t hi\u1ec7n trong chu\u1ed7i, hay t\u1eeb \u0111\u01b0\u1ee3c \u0111\xe1nh tr\u1ecdng s\u1ed1 n\u1eb7ng h\u01a1n hay nh\u1eb9 h\u01a1n. C\xe1c stop words s\u1ebd b\u1ecb b\u1ecf qua trong ch\u1ebf \u0111\u1ed9 n\xe0y.\\n- Query expansion: l\xe0 m\u1ed9t bi\u1ebfn th\u1ec3 c\u1ee7a natural language search. C\xe1c t\u1eeb trong c\xe1c rows li\xean quan nh\u1ea5t \u0111\u01b0\u1ee3c tr\u1ea3 v\u1ec1 s\u1ebd \u0111\u01b0\u1ee3c th\xeam v\xe0o chu\u1ed7i ch\u1eef t\xecm ki\u1ebfm, v\xe0 vi\u1ec7c t\xecm ki\u1ebfm s\u1ebd \u0111\u01b0\u1ee3c l\u1eb7p l\u1ea1i. Truy v\u1ea5n s\u1ebd tr\u1ea3 v\u1ec1 c\xe1c rows trong l\u1ea7n t\xecm ki\u1ebfm th\u1ee9 hai.\\n\\nM\xecnh s\u1ebd kh\xf4ng \u0111i v\xe0o chi ti\u1ebft t\u1eebng lo\u1ea1i, v\xec m\xecnh c\u0169ng \xedt khi d\xf9ng full-text index.\\n\\n### 2. L\u1ee3i \xedch vi\u1ec7c \u0111\xe1nh index\\nM\u1ed9t s\u1ed1 l\u1ee3i \xedch c\u1ee7a vi\u1ec7c \u0111\xe1nh index\\n- Index gi\xfap server ti\u1ebft ki\u1ec7m th\u1eddi gian \u0111\u1ec3 duy\u1ec7t v\xe0 truy v\u1ea5n.\\n- Index gi\xfap server tr\xe1nh \u0111\u01b0\u1ee3c c\xe1c ho\u1ea1t \u0111\u1ed9ng nh\u01b0 s\u1eafp x\u1ebfp d\u1eef li\u1ec7u hay t\u1ea1o c\xe1c b\u1ea3ng t\u1ea1m.\\n- Index bi\u1ebfn vi\u1ec7c truy c\u1eadp \u1ed5 \u0111\u0129a m\u1ed9t c\xe1ch ng\u1eabu nhi\xean th\xe0nh truy c\u1eadp tu\u1ea7n t\u1ef1, c\u1ea3i thi\u1ec7n t\u1ed1c \u0111\u1ed9 \u0111\u1ecdc\\n\\nM\u1ed9t s\u1ed1 ti\xeau ch\xed \u0111\xe1nh gi\xe1 index\\n- Index c\u1ea7n ph\u1ea3i x\u1ebfp \u0111\u01b0\u1ee3c c\xe1c h\xe0ng li\xean quan t\u1edbi nhau, g\u1ea7n nhau h\u01a1n.\\n- C\xe1c h\xe0ng \u0111\u01b0\u1ee3c s\u1eafp x\u1ebfp c\u1ea7n \u0111\xfang v\u1edbi nhu c\u1ea7u c\xe1c truy v\u1ea5n \u1ee9ng d\u1ee5ng c\u1ee7a b\u1ea1n c\u1ea7n.\\n- Index c\u1ea7n ph\u1ea3i ch\u1ee9a t\u1ea5t c\u1ea3 c\xe1c c\u1ed9t m\xe0 truy v\u1ea5n \u1ee9ng d\u1ee5ng c\u1ee7a b\u1ea1n l\u1ecdc.\\n\\n### 3. M\u1ed9t s\u1ed1 chi\u1ebfn thu\u1eadt \u0111\xe1nh index\\nVi\u1ec7c t\u1ea1o \u0111\xfang c\xe1c index s\u1ebd c\u1ea3i thi\u1ec7n t\u1ed1c \u0111\u1ed9 truy v\u1ea5n c\u1ee7a b\u1ea1n r\u1ea5t nhi\u1ec1u, t\u1eeb \u0111\xf3 gi\xfap cho \u1ee9ng d\u1ee5ng c\u1ee7a b\u1ea1n ph\u1ea3n h\u1ed3i nhanh h\u01a1n t\u1edbi ng\u01b0\u1eddi d\xf9ng.\\n\\n#### 3.1. Index ti\u1ec1n t\u1ed1 c\xe1c tr\u01b0\u1eddng text d\xe0i\\nG\u1ecdi index selectivity l\xe0 ch\u1ec9 s\u1ed1 gi\u1eefa s\u1ed1 gi\xe1 tr\u1ecb kh\xe1c nhau c\u1ee7a c\u1ed9t / t\u1ed5ng b\u1ea3n ghi c\u1ee7a b\u1ea3ng. V\u1edbi c\xe1c c\u1ed9t c\xf3 index selectivity cao, th\xec vi\u1ec7c \u0111\xe1nh index tr\xean c\xe1c tr\u01b0\u1eddng n\xe0y r\u1ea5t hi\u1ec7u qu\u1ea3 b\u1edfi v\xec MySQL s\u1ebd lo\u1ea1i b\u1ecf \u0111\u01b0\u1ee3c nhi\u1ec1u b\u1ea3n ghi h\u01a1n khi l\u1ecdc tr\xean c\xe1c c\u1ed9t \u1ea5y.\\nV\u1edbi c\xe1c tr\u01b0\u1eddng text d\xe0i, ta kh\xf4ng th\u1ec3 \u0111\xe1nh index tr\xean c\u1ea3 \u0111\u1ed9 d\xe0i c\u1ed9t v\xec MySQL s\u1ebd kh\xf4ng cho ph\xe9p \u0111i\u1ec1u \u0111\xf3, do v\u1eady ta c\u1ea7n t\xecm m\u1ed9t l\u01b0\u1ee3ng prefix \u0111\u1ee7 t\u1ed1t c\u1ee7a tr\u01b0\u1eddng \u0111\xf3 \u0111\u1ec3 \u0111\xe1nh index v\xe0 n\xf3 s\u1ebd cho ta m\u1ed9t performance \u0111\u1ee7 t\u1ed1t.\\n\\nTh\u1eed v\u1edbi d\u1eef li\u1ec7u v\u1ec1 s\u1ea3n ph\u1ea9m d\u01b0\u1edbi \u0111\xe2y, ta li\u1ec7t k\xea m\u01b0\u1eddi nh\xe0 b\xe1n c\xf3 xu\u1ea5t hi\u1ec7n nhi\u1ec1u nh\u1ea5t\\n```sql\\nselect productVendor, count(1) c from `classicmodels`.`products_index`\\ngroup by productVendor\\norder by c desc\\nLIMIT 10;\\n\\n+--------------------------------------------------+----+\\n| productVendor                                    | c  |\\n+--------------------------------------------------+----+\\n| Pressure and Safety Relief Valve                 | 10 |\\n| NEC United Solutions                             |  9 |\\n| SunGard Data Systems                             |  8 |\\n| Zhengzhou Esunny Information Technology Co.,Ltd. |  8 |\\n| Spring Support                                   |  8 |\\n| Ball and Plug Valve                              |  7 |\\n| LSAW Pipe                                        |  7 |\\n| Wood Mackenzie Ltd                               |  7 |\\n| Heat Recovery Steam Generator                    |  7 |\\n| Carbon Steel Flange                              |  7 |\\n+--------------------------------------------------+----+\\n```\\n\\nTh\u1eed t\xednh to\xe1n t\u1ea7n s\u1ed1 xu\u1ea5t hi\u1ec7n c\u1ee7a prefix v\u1edbi \u0111\u1ed9 d\xe0i l\xe0 3 c\u1ee7a tr\u01b0\u1eddng ```productVendor```\\n```sql\\nselect LEFT(productVendor, 3), count(1) c from `classicmodels`.`products_index`\\ngroup by LEFT(productVendor, 3)\\norder by c desc\\nLIMIT 10;\\n\\n+------------------------+----+\\n| LEFT(productVendor, 3) | c  |\\n+------------------------+----+\\n| Sha                    | 44 |\\n| Car                    | 16 |\\n| Sun                    | 15 |\\n| Zhe                    | 13 |\\n| Gas                    | 12 |\\n| Sto                    | 11 |\\n| Pre                    | 11 |\\n| Col                    | 11 |\\n| She                    |  9 |\\n| Hea                    |  9 |\\n+------------------------+----+\\n```\\n\\nTa th\u1ea5y r\u1eb1ng t\u1ea7n s\u1ed1 xu\u1ea5t hi\u1ec7n c\u1ee7a c\xe1c gi\xe1 tr\u1ecb prefix \u0111\u1ed9 d\xe0i 3 nhi\u1ec1u h\u01a1n v\u1edbi c\u1ea3 gi\xe1 tr\u1ecb c\u1ed9t nhi\u1ec1u, t\u01b0\u01a1ng \u0111\u01b0\u01a1ng v\u1edbi vi\u1ec7c \xedt gi\xe1 tr\u1ecb kh\xe1c nhau h\u01a1n, t\u01b0\u01a1ng \u0111\u01b0\u01a1ng v\u1edbi index selectivity s\u1ebd b\xe9 h\u01a1n nhi\u1ec1u. Do v\u1eady prefix 3 kh\xf4ng ph\u1ea3i l\xe0 l\u1ef1a ch\u1ecdn t\u1ed1t\\n\\nTa c\xf9ng t\xednh to\xe1n index selectivity v\u1edbi nhi\u1ec1u lo\u1ea1i \u0111\u1ed9 d\xe0i prefix\\n```sql\\nselect COUNT(DISTINCT LEFT(productVendor, 3))/COUNT(1) AS selectivity_3,\\nCOUNT(DISTINCT LEFT(productVendor, 4))/COUNT(1) AS selectivity_4,\\nCOUNT(DISTINCT LEFT(productVendor, 5))/COUNT(1) AS selectivity_5,\\nCOUNT(DISTINCT LEFT(productVendor, 6))/COUNT(1) AS selectivity_6,\\nCOUNT(DISTINCT LEFT(productVendor, 7))/COUNT(1) AS selectivity_7,\\nCOUNT(DISTINCT LEFT(productVendor, 8))/COUNT(1) AS selectivity_8,\\nCOUNT(DISTINCT LEFT(productVendor, 9))/COUNT(1) AS selectivity_9,\\nCOUNT(DISTINCT LEFT(productVendor, 10))/COUNT(1) AS selectivity_10,\\nCOUNT(DISTINCT LEFT(productVendor, 11))/COUNT(1) AS selectivity_11,\\nCOUNT(DISTINCT productVendor)/COUNT(1) AS selectivity\\nfrom `classicmodels`.`products_index`;\\n\\n+---------------+---------------+---------------+---------------+---------------+---------------+---------------+----------------+----------------+-------------+\\n| selectivity_3 | selectivity_4 | selectivity_5 | selectivity_6 | selectivity_7 | selectivity_8 | selectivity_9 | selectivity_10 | selectivity_11 | selectivity |\\n+---------------+---------------+---------------+---------------+---------------+---------------+---------------+----------------+----------------+-------------+\\n|        0.1982 |        0.2164 |        0.2218 |        0.2236 |        0.2236 |        0.2273 |        0.2309 |         0.2491 |         0.2509 |      0.2600 |\\n+---------------+---------------+---------------+---------------+---------------+---------------+---------------+----------------+----------------+-------------+\\n```\\n\\nTa th\u1ea5y r\u1eb1ng selectivity prefix 11 r\u1ea5t g\u1ea7n v\u1edbi gi\xe1 tr\u1ecb selectivity c\u1ea3 c\u1ed9t, v\xe0 c\u0169ng kh\xe1 ph\xf9 h\u1ee3p v\u1edbi tr\u01b0\u1eddng text d\xe0i nh\u01b0 c\u1ed9t n\xe0y, n\xean ch\u1ecdn prefix 11 s\u1ebd c\xe2n b\u1eb1ng \u0111\u01b0\u1ee3c v\u1ec1 \u0111\u1ed9 l\u1edbn c\u1ee7a index c\u0169ng nh\u01b0 \u0111\u1ed9 nhanh khi truy v\u1ea5n.\\n\\n```sql\\nALTER TABLE `classicmodels`.`products_index` ADD KEY (productVendor(11));\\n```\\n\\n#### 3.2. Index tr\xean nhi\u1ec1u column\\nM\u1ed9t s\u1ed1 sai l\u1ea7m khi \u0111\xe1nh index \u0111\xf3 l\xe0 \u0111\xe1nh index t\u1eebng c\u1ed9t m\u1ed9t c\xe1ch ri\xeang r\u1ebd, v\xe0 t\u1ea1o index cho t\u1ea5t c\u1ea3 c\xe1c c\u1ed9t \u1edf trong c\xe2u l\u1ec7nh WHERE.\\n```sql\\nCREATE TABLE t (\\n     c1 INT,\\n     c2 INT,\\n     c3 INT,\\n     KEY(c1),\\n     KEY(c2),\\n     KEY(c3)\\n);\\n```\\nC\xe1c index ri\xeang r\u1ebd nh\u01b0 tr\xean th\u01b0\u1eddng s\u1ebd kh\xf4ng t\u1ed1i \u01b0u hi\u1ec7u n\u0103ng nhi\u1ec1u l\u1eafm trong h\u1ea7u h\u1ebft c\xe1c ho\xe0n c\u1ea3nh, b\u1edfi v\xec khi n\xe0y MySQL c\xf3 th\u1ec3 s\u1eed d\u1ee5ng m\u1ed9t chi\u1ebfn thu\u1eadt g\u1ecdi l\xe0 index merge. Index merge s\u1ebd s\u1eed d\u1ee5ng t\u1ea5t c\u1ea3 index trong c\xe2u truy v\u1ea5n, qu\xe9t c\xe1c index m\u1ed9t c\xe1ch \u0111\u1ed3ng th\u1eddi, sau \u0111\xf3 s\u1ebd merge k\u1ebft qu\u1ea3 l\u1ea1i\\n- union index s\u1ebd d\xf9ng cho \u0111i\u1ec1u ki\u1ec7n OR\\n- intersection index s\u1ebd d\xf9ng cho \u0111i\u1ec1u ki\u1ec7n AND\\n- union of intersection index cho s\u1ef1 k\u1ebft h\u1ee3p c\u1ee7a c\u1ea3 2\\n\\nD\u01b0\u1edbi \u0111\xe2y l\xe0 v\xed d\u1ee5 query tr\xean 2 tr\u01b0\u1eddng index nh\u01b0ng MySQL s\u1eed d\u1ee5ng index merge\\n```sql\\nmysql> explain select * from `classicmodels`.`products_index` where productVendor = \'Infor Global Solutions\' OR productScale = \'1:10\'\\\\G\\n*************************** 1. row ***************************\\n           id: 1\\n  select_type: SIMPLE\\n        table: products_index\\n   partitions: NULL\\n         type: index_merge\\npossible_keys: productVendor,productScale\\n          key: productVendor,productScale\\n      key_len: 14,12\\n          ref: NULL\\n         rows: 33\\n     filtered: 100.00\\n        Extra: Using sort_union(productVendor,productScale); Using where\\n```\\nM\u1ed9t s\u1ed1 c\xe2n nh\u1eafc khi query g\u1eb7p index merge\\n- N\u1ebfu server intersect index (\u0111i\u1ec1u ki\u1ec7n AND tr\xean c\xe1c index), \u0111i\u1ec1u \u0111\xf3 c\xf3 ngh\u0129a l\xe0 b\u1ea1n c\xf3 th\u1ec3 t\u1ea1o 1 index ch\u1ee9a t\u1ea5t c\u1ea3 c\xe1c c\u1ed9t li\xean quan t\u1edbi nhau, kh\xf4ng ph\u1ea3i t\u1eebng index cho t\u1eebng c\u1ed9t.\\n- N\u1ebfu server union index (\u0111i\u1ec1u ki\u1ec7n OR tr\xean c\xe1c index), ki\u1ec3m tra xem c\xe1c c\u1ed9t \u1ea5y c\xf3 index selectivity c\xf3 cao kh\xf4ng, n\u1ebfu index selectivity trong m\u1ed9t s\u1ed1 c\u1ed9t th\u1ea5p, ngh\u0129a l\xe0 c\u1ed9t \u1ea5y \xedt gi\xe1 tr\u1ecb kh\xe1c nhau, ngh\u0129a l\xe0 ph\u1ea7n scan index tr\u1ea3 v\u1ec1 nhi\u1ec1u b\u1ea3n ghi h\u01a1n cho c\xe1c ho\u1ea1t \u0111\u1ed9ng merge ti\u1ebfp sau n\xf3, ti\xeau t\u1ed1n nhi\u1ec1u CPU v\xe0 b\u1ed9 nh\u1edb h\u01a1n. \u0110\xf4i khi, vi\u1ebft l\u1ea1i truy v\u1ea5n v\u1edbi l\u1ec7nh UNION c\xf2n cho k\u1ebft qu\u1ea3 kh\u1ea3 quan h\u01a1n l\xe0 khi server union c\xe1c index trong index merge.\\n\\nKhi ta nh\xecn th\u1ea5y index merge trong c\xe2u l\u1ec7nh EXPLAIN, h\xe3y xem l\u1ea1i query v\xe0 c\u1ea5u tr\xfac b\u1ea3ng \u0111\u1ec3 ki\u1ec3m tra xem hi\u1ec7n t\u1ea1i thi\u1ebft k\u1ebf \u0111\xe3 l\xe0 t\u1ed1i \u01b0u nh\u1ea5t hay ch\u01b0a.\\n\\n#### 3.3. Ch\u1ecdn \u0111\xfang th\u1ee9 t\u1ef1 c\u1ed9t \u0111\u1ec3 index\\nKhi m\u1ed9t index c\u1ee7a ta ch\u01b0a nhi\u1ec1u c\u1ed9t, th\u1ee9 t\u1ef1 c\xe1c c\u1ed9t trong index \u0111\xf3 r\u1ea5t quan tr\u1ecdng, v\xec trong B-tree index, index s\u1ebd \u0111\u01b0\u1ee3c s\u1eafp x\u1ebfp t\u1eeb c\u1ed9t tr\xe1i nh\u1ea5t \u0111\u1ebfn c\xe1c c\u1ed9t ti\u1ebfp theo \u0111\xf3 (m\u1ed9t s\u1ed1 nh\u01b0\u1ee3c \u0111i\u1ec3m c\u1ee7a B-tree index **[ t\u1ea1i \u0111\xe2y](#113-m\u1ed9t-s\u1ed1-nh\u01b0\u1ee3c-\u0111i\u1ec3m-c\u1ee7a-b-tree-index)**). Do v\u1eady, ta th\u01b0\u1eddng ch\u1ecdn c\xe1c c\u1ed9t c\xf3 index selectivity cao l\xe0m c\u1ed9t tr\xe1i nh\u1ea5t, th\u1ee9 t\u1ef1 c\xe1c c\u1ed9t theo \u0111\u1ed9 gi\u1ea3m d\u1ea7n c\u1ee7a index selectivity, \u0111\u1ec3 t\u1ed5ng th\u1ec3 index c\u1ee7a ta c\xf3 selectivity cao.\\n\\n```sql\\nselect count(distinct productVendor)/count(1),\\n\\tcount(distinct productScale)/count(1)\\nfrom `classicmodels`.`products_index`;\\n\\n+----------------------------------------+---------------------------------------+\\n| count(distinct productVendor)/count(1) | count(distinct productScale)/count(1) |\\n+----------------------------------------+---------------------------------------+\\n|                                 0.2600 |                                0.0145 |\\n+----------------------------------------+---------------------------------------+\\n```\\nV\xed d\u1ee5 tr\xean, n\u1ebfu ta \u0111\xe1nh index g\u1ed3m 2 c\u1ed9t ```productVendor``` v\xe0 ```productScale```, ta th\u01b0\u1eddng s\u1ebd l\u1ea5y ```productVendor``` l\xe0m c\u1ed9t tr\xe1i nh\u1ea5t\\n```sql\\nalter table `classicmodels`.`products_index` add key (productVendor, productScale);\\n```\\n\\nM\u1ed9t s\u1ed1 c\xe2n nh\u1eafc n\u1eefa v\u1ec1 index c\u1ea7n ch\xfa \xfd nh\u01b0 clustered index, covering index, lo\u1ea1i b\u1ecf c\xe1c index th\u1eeba, kh\xf4ng s\u1eed d\u1ee5ng,... m\xecnh xin \u0111\u1ec1 c\u1eadp trong b\xe0i vi\u1ebft kh\xe1c."},{"id":"mysql-series-mysql-mvcc","metadata":{"permalink":"/blogs/blog/mysql-series-mysql-mvcc","editUrl":"https://github.com/lam1051999/blogs/edit/main/blog/2022-10-07-mysql-multiversion-concurrency-control/index.md","source":"@site/blog/2022-10-07-mysql-multiversion-concurrency-control/index.md","title":"MySQL series - Multiversion concurrency control","description":"Th\u01b0\u1eddng nh\u1eefng storage engine \u0111\u1ec1u kh\xf4ng s\u1eed d\u1ee5ng c\u01a1 ch\u1ebf row lock \u0111\u01a1n gi\u1ea3n, \u0111\u1ec3 \u0111\u1ea1t \u0111\u01b0\u1ee3c hi\u1ec7u n\u0103ng t\u1ed1t trong m\xf4i tr\u01b0\u1eddng \u0111\u1ecdc ghi \u0111\u1ed3ng th\u1eddi cao, c\xe1c storage engine tri\u1ec3n khai row lock v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p nh\u1ea5t \u0111\u1ecbnh, ph\u01b0\u01a1ng ph\xe1p th\u01b0\u1eddng \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\xf3 ch\xednh l\xe0 multiversion concurrency control (MVCC).","date":"2022-10-07T00:00:00.000Z","formattedDate":"October 7, 2022","tags":[{"label":"Bigdata","permalink":"/blogs/blog/tags/bigdata"},{"label":"MySQL","permalink":"/blogs/blog/tags/my-sql"},{"label":"Database","permalink":"/blogs/blog/tags/database"},{"label":"Data Engineering","permalink":"/blogs/blog/tags/data-engineering"},{"label":"Transaction","permalink":"/blogs/blog/tags/transaction"}],"readingTime":2.555,"truncated":true,"authors":[{"name":"Tr\u1ea7n L\xe2m","title":"Data Engineer","url":"https://github.com/lam1051999","imageURL":"https://github.com/lam1051999.png","key":"tranlam"}],"frontMatter":{"slug":"mysql-series-mysql-mvcc","title":"MySQL series - Multiversion concurrency control","authors":"tranlam","tags":["Bigdata","MySQL","Database","Data Engineering","Transaction"],"image":"./images/overall.PNG"},"prevItem":{"title":"MySQL series - Indexing","permalink":"/blogs/blog/mysql-series-mysql-indexing"},"nextItem":{"title":"MySQL series - Transaction trong MySQL","permalink":"/blogs/blog/mysql-series-mysql-transaction"}},"content":"Th\u01b0\u1eddng nh\u1eefng storage engine \u0111\u1ec1u kh\xf4ng s\u1eed d\u1ee5ng c\u01a1 ch\u1ebf row lock \u0111\u01a1n gi\u1ea3n, \u0111\u1ec3 \u0111\u1ea1t \u0111\u01b0\u1ee3c hi\u1ec7u n\u0103ng t\u1ed1t trong m\xf4i tr\u01b0\u1eddng \u0111\u1ecdc ghi \u0111\u1ed3ng th\u1eddi cao, c\xe1c storage engine tri\u1ec3n khai row lock v\u1edbi \u0111\u1ed9 ph\u1ee9c t\u1ea1p nh\u1ea5t \u0111\u1ecbnh, ph\u01b0\u01a1ng ph\xe1p th\u01b0\u1eddng \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\xf3 ch\xednh l\xe0 multiversion concurrency control (MVCC). \\n\\n![MVCC Overall](./images/overall.PNG)\\n\\n\x3c!--truncate--\x3e\\n\\n### 1. Gi\u1edbi thi\u1ec7u v\u1ec1 MVCC\\nMVCC \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng trong r\u1ea5t nhi\u1ec1u lo\u1ea1i c\u01a1 s\u1edf d\u1eef li\u1ec7u quan h\u1ec7, n\xf3 gi\xfap ch\xfang ta lock \xedt d\u1eef li\u1ec7u nh\u1ea5t c\xf3 th\u1ec3 khi th\u1ef1c hi\u1ec7n nhi\u1ec1u transaction m\u1ed9t l\xfac, n\xf3 c\xf3 th\u1ec3 cho ph\xe9p ch\xfang ta kh\xf4ng b\u1ecb lock khi \u0111\u1ecdc d\u1eef li\u1ec7u v\xe0 ch\u1ec9 lock nh\u1eefng row c\u1ea7n thi\u1ebft khi ghi d\u1eef li\u1ec7u.\\n\\n### 2. MVCC trong InnoDB\\nMVCC ho\u1ea1t \u0111\u1ed9ng b\u1eb1ng c\xe1ch snapshot l\u1ea1i d\u1eef li\u1ec7u t\u1ea1i m\u1ed9t th\u1eddi \u0111i\u1ec3m n\xe0o \u0111\xf3, n\xean m\u1ed9t transaction c\xf3 th\u1ec3 nh\xecn th\u1ea5y d\u1eef li\u1ec7u nh\u01b0 nhau cho d\xf9 ch\xfang ch\u1ea1y nhanh hay r\u1ea5t l\xe2u. Tuy nhi\xean, n\xf3 c\u0169ng g\xe2y ra c\xe1c transaction kh\xe1c nhau c\xf3 th\u1ec3 nh\xecn th\u1ea5y c\xe1c view d\u1eef li\u1ec7u kh\xe1c nhau c\u1ee7a c\xf9ng m\u1ed9t b\u1ea3ng trong c\xf9ng m\u1ed9t th\u1eddi \u0111i\u1ec3m.\\n\\n![MVCC Detail Example](./images/detail.PNG)\\n\\nInnoDB s\u1ebd g\xe1n m\u1ed9t transaction id cho m\u1ed9t transaction m\u1ed7i khi n\xf3 b\u1eaft \u0111\u1ea7u \u0111\u1ecdc m\u1ed9t d\u1eef li\u1ec7u n\xe0o \u0111\xf3. C\xe1c thay \u0111\u1ed5i c\u1ee7a m\u1ed9t b\u1ea3n ghi trong transaction \u0111\xf3 s\u1ebd \u0111\u01b0\u1ee3c ghi v\xe0o undo log \u0111\u1ec3 ph\u1ee5c v\u1ee5 cho vi\u1ec7c revert d\u1eef li\u1ec7u, v\xe0 rollback pointer c\u1ee7a transaction \u0111\xf3 s\u1ebd tr\u1ecf v\xe0o v\u1ecb tr\xed c\u1ee7a b\u1ea3n ghi undo log \u0111\xf3. Khi m\u1ed9t phi\xean kh\xe1c b\u1eaft \u0111\u1ea7u \u0111\u1ecdc b\u1ea3n ghi b\u1ecb thay \u0111\u1ed5i \u1edf tr\xean, InnoDB s\u1ebd so s\xe1nh transaction id c\u1ee7a b\u1ea3n ghi v\u1edbi view d\u1eef li\u1ec7u m\xe0 phi\xean \u0111\xf3 \u0111\u1ecdc. N\u1ebfu b\u1ea3n ghi \u0111ang trong tr\u1ea1ng th\xe1i v\xf4 h\xecnh v\u1edbi c\xe1c transaction kh\xe1c (v\xed d\u1ee5 nh\u01b0 transaction thay \u0111\u1ed5i b\u1ea3n ghi \u0111\xf3 ch\u01b0a \u0111\u01b0\u1ee3c commit), undo log s\u1ebd \u0111\u01b0\u1ee3c \xe1p d\u1ee5ng tr\xean view d\u1eef li\u1ec7u cho \u0111\u1ebfn khi b\u1ea3n ghi \u0111\xf3 tr\u1edf v\u1ec1 tr\u1ea1ng th\xe1i c\xf3 th\u1ec3 \u0111\u1ecdc \u0111\u01b0\u1ee3c b\u1edfi c\xe1c transaction kh\xe1c.\\n\\nT\u1ea5t c\u1ea3 undo log \u0111\u01b0\u1ee3c ghi \u0111\u1ec1u \u0111\u01b0\u1ee3c ch\xe9p l\u1ea1i v\xe0o redo log b\u1edfi v\xec ch\xfang ph\u1ee5c v\u1ee5 cho qu\xe1 tr\xecnh ph\u1ee5c h\u1ed3i d\u1eef li\u1ec7u khi h\u1ec7 th\u1ed1ng l\u1ed7i. K\xedch th\u01b0\u1edbc c\u1ee7a undo log v\xe0 redo log c\u0169ng \u1ea3nh h\u01b0\u1edbng t\u1edbi kh\u1ea3 n\u0103ng th\u1ef1c hi\u1ec7n \u0111\u1ecdc ghi trong m\xf4i tr\u01b0\u1eddng c\xf3 \u0111\u1ed9 \u0111\u1ecdc ghi \u0111\u1ed3ng th\u1eddi cao.\\n\\nTuy l\u1ee3i \xedch l\xe0 ta kh\xf4ng bao gi\u1edd b\u1ecb lock khi \u0111\u1ecdc nh\u01b0ng storage engine c\u1ea7n ph\u1ea3i l\u01b0u tr\u1eef th\xeam nhi\u1ec1u d\u1eef li\u1ec7u h\u01a1n v\u1edbi m\u1ed7i b\u1ea3n ghi, l\xe0m nhi\u1ec1u c\xf4ng vi\u1ec7c ki\u1ec3m so\xe1t, v\xe0 th\u1ef1c hi\u1ec7n nhi\u1ec1u ho\u1ea1t \u0111\u1ed9ng h\u01a1n.\\n\\n### 3. Isolation level v\u1edbi MVCC\\nMVCC ch\u1ec9 kh\u1ea3 d\u1ee5ng v\u1edbi c\xe1c ch\u1ebf \u0111\u1ed9 REPEATABLE READ v\xe0 READ COMMITTED. MVCC kh\xf4ng t\u01b0\u01a1ng th\xedch v\u1edbi READ UNCOMMITTED v\xec c\xe1c truy v\u1ea5n s\u1ebd kh\xf4ng \u0111\u1ecdc c\xe1c b\u1ea3n ghi m\xe0 phi\xean b\u1ea3n c\u1ee7a n\xf3 kh\xf4ng tr\xf9ng v\u1edbi phi\xean b\u1ea3n c\u1ee7a transaction. MVCC kh\xf4ng t\u01b0\u01a1ng th\xedch v\u1edbi SERIALIZABLE b\u1edfi v\xec vi\u1ec7c kho\xe1 khi \u0111\u1ecdc c\u1ee7a ch\u1ebf \u0111\u1ed9 n\xe0y (C\xe1c ch\u1ebf \u0111\u1ed9 isolation level c\xe1c b\u1ea1n c\xf3 th\u1ec3 t\xecm th\u1ea5y **[t\u1ea1i \u0111\xe2y](/blog/2022-10-06-mysql-transaction/index.md#3-4-isolation-level-trong-m\xf4i-tr\u01b0\u1eddng-c\xf3-nhi\u1ec1u-\u0111\u1ecdc-ghi-\u0111\u1ed3ng-th\u1eddi)**)"},{"id":"mysql-series-mysql-transaction","metadata":{"permalink":"/blogs/blog/mysql-series-mysql-transaction","editUrl":"https://github.com/lam1051999/blogs/edit/main/blog/2022-10-06-mysql-transaction/index.md","source":"@site/blog/2022-10-06-mysql-transaction/index.md","title":"MySQL series - Transaction trong MySQL","description":"Poster","date":"2022-10-06T00:00:00.000Z","formattedDate":"October 6, 2022","tags":[{"label":"Bigdata","permalink":"/blogs/blog/tags/bigdata"},{"label":"MySQL","permalink":"/blogs/blog/tags/my-sql"},{"label":"Database","permalink":"/blogs/blog/tags/database"},{"label":"Data Engineering","permalink":"/blogs/blog/tags/data-engineering"},{"label":"Transaction","permalink":"/blogs/blog/tags/transaction"}],"readingTime":6.535,"truncated":true,"authors":[{"name":"Tr\u1ea7n L\xe2m","title":"Data Engineer","url":"https://github.com/lam1051999","imageURL":"https://github.com/lam1051999.png","key":"tranlam"}],"frontMatter":{"slug":"mysql-series-mysql-transaction","title":"MySQL series - Transaction trong MySQL","authors":"tranlam","tags":["Bigdata","MySQL","Database","Data Engineering","Transaction"],"image":"./images/transaction.JPEG"},"prevItem":{"title":"MySQL series - Multiversion concurrency control","permalink":"/blogs/blog/mysql-series-mysql-mvcc"},"nextItem":{"title":"MySQL series - T\u1ed5ng quan ki\u1ebfn tr\xfac MySQL","permalink":"/blogs/blog/mysql-series-mysql-architecture"}},"content":"![Poster](./images/transaction.JPEG)\\n\\nB\xe0i vi\u1ebft ti\u1ebfp theo trong series MySQL v\u1ec1 transaction. M\u1ed9t ho\u1ea1t \u0111\u1ed9ng r\u1ea5t ph\u1ed5 bi\u1ebfn trong MySQL n\xf3i ri\xeang v\xe0 c\xe1c c\u01a1 s\u1edf d\u1eef li\u1ec7u quan h\u1ec7 n\xf3i chung. C\xf9ng \u0111i v\xe0o b\xe0i vi\u1ebft n\xe0o.\\n\\n\x3c!--truncate--\x3e\\n\\n### 1. Transaction l\xe0 g\xec?\\nTransaction l\xe0 m\u1ed9t t\u1eadp c\xe1c c\xe2u l\u1ec7nh SQL k\u1ebft h\u1ee3p v\u1edbi nhau nh\u01b0 l\xe0 m\u1ed9t \u0111\u01a1n v\u1ecb c\xf4ng vi\u1ec7c. N\u1ebfu nh\u01b0 database ch\u1ea1y th\xe0nh c\xf4ng to\xe0n b\u1ed9 l\u1ec7nh SQL trong nh\xf3m \u0111\xf3, n\xf3 \u0111\u01b0\u1ee3c coi l\xe0 th\xe0nh c\xf4ng. N\u1ebfu nh\u01b0 m\u1ed9t trong s\u1ed1 l\u1ec7nh SQL g\u1eb7p l\u1ed7i, t\u1ea5t c\u1ea3 c\xe1c l\u1ec7nh SQL \u0111\xe3 ch\u1ea1y ho\u1eb7c ch\u01b0a ch\u1ea1y s\u1ebd kh\xf4ng \u1ea3nh h\u01b0\u1edfng g\xec t\u1edbi database. V\xed d\u1ee5 c\xe1c m\u1ed9t t\u1eadp c\xe2u l\u1ec7nh SQL g\xf3i trong m\u1ed9t transaction sau\\n\\n```sql\\n    1  START  TRANSACTION;\\n    2  SELECT balance FROM checking WHERE customer_id = 10233276;\\n    3  UPDATE checking SET balance = balance - 200.00 WHERE customer_id = 10233276;\\n    4  UPDATE savings SET balance = balance - 200.00 WHERE customer_id = 10233276;\\n    5  COMMIT;\\n```\\n\\nTransaction \u0111\u01b0\u1ee3c b\u1eaft \u0111\u1ea7u b\u1edfi START TRANSACTION v\xe0 th\u01b0\u1eddng \u0111\u01b0\u1ee3c \u0111\xf3ng b\u1edfi COMMIT (x\xe1c nh\u1eadn th\u1ef1c hi\u1ec7n transaction) ho\u1eb7c ROLLBACK (tr\u1edf l\u1ea1i tr\u1ea1ng th\xe1i tr\u01b0\u1edbc khi transaction). N\u1ebfu nh\u01b0 c\xe2u l\u1ec7nh th\u1ee9 4 b\u1ecb l\u1ed7i, c\xe2u l\u1ec7nh th\u1ee9 3 s\u1ebd \u0111\u01b0\u1ee3c rollback v\xe0 kh\xf4ng c\xf3 g\xec x\u1ea3y ra \u1ea3nh h\u01b0\u1edfng t\u1edbi d\u1eef li\u1ec7u c\u0169.\\n\\n### 2. 4 t\xednh ch\u1ea5t b\u1ea3o to\xe0n d\u1eef li\u1ec7u trong c\u01a1 s\u1edf d\u1eef li\u1ec7u quan h\u1ec7\\n\\n![ACID](./images/acid.PNG)\\n\\nM\u1ed7i m\u1ed9t h\u1ec7 th\u1ed1ng c\u1ea7n tho\u1ea3 m\xe3n 4 t\xednh ch\u1ea5t ACID \u0111\u1ec3 \u0111\u1ea3m b\u1ea3o an to\xe0n v\u1ec1 d\u1eef li\u1ec7u\\n- Atomicity\\n\\nTransaction c\u1ea7n ho\u1ea1t \u0111\u1ed9ng nh\u01b0 m\u1ed9t \u0111\u01a1n v\u1ecb c\xf4ng vi\u1ec7c. Ho\u1eb7c l\xe0 t\u1ea5t c\u1ea3 c\xe2u l\u1ec7nh SQL trong transaction \u0111\u01b0\u1ee3c \xe1p d\u1ee5ng ho\u1eb7c l\xe0 kh\xf4ng c\xf3 c\xe2u l\u1ec7nh n\xe0o \u0111\u01b0\u1ee3c \xe1p d\u1ee5ng.\\n- Consistency\\n\\nDatabase c\u1ea7n c\xf3 t\xednh nh\u1ea5t qu\xe1n, ch\u1ec9 \u0111\u01b0\u1ee3c chuy\u1ec3n t\u1eeb tr\u1ea1ng th\xe1i nh\u1ea5t qu\xe1n n\xe0y \u0111\u1ebfn tr\u1ea1ng th\xe1i nh\u1ea5t qu\xe1n kh\xe1c. V\xed d\u1ee5 \u1edf b\xean tr\xean, n\u1ebfu l\u1ed7i x\u1ea3y ra sau khi ch\u1ea1y xong c\xe2u th\u1ee9 3, t\xe0i kho\u1ea3n checking s\u1ebd kh\xf4ng b\u1ecb m\u1ea5t \u0111i 200 ti\u1ec1n khi transaction ch\u01b0a commit. T\u1ed5ng ti\u1ec1n \u1edf hai t\xe0i kho\u1ea3n tr\u01b0\u1edbc v\xe0 sau v\u1eabn gi\u1eef nguy\xean.\\n- Isolation\\n\\nK\u1ebft qu\u1ea3 c\u1ee7a transaction n\xe0y s\u1ebd v\xf4 h\xecnh \u0111\u1ed1i v\u1edbi c\xe1c transaction kh\xe1c khi transaction n\xe0y ch\u01b0a k\u1ebft th\xfac, ch\u01b0a commit. V\xed d\u1ee5 khi transaction 1 \u0111ang ch\u1ea1y gi\u1eefa c\xe2u 3 v\xe0 c\xe2u 4 b\xean tr\xean, m\u1ed9t transaction kh\xe1c t\xednh to\xe1n t\xf3m l\u01b0\u1ee3c l\u1ea1i s\u1ed1 d\u01b0 c\xe1c t\xe0i kho\u1ea3n s\u1ebd v\u1eabn nh\xecn th\u1ea5y 200 ti\u1ec1n \u1edf trong t\xe0i kho\u1ea3n checking. Khi m\u1ed9t transaction ch\u01b0a commit, kh\xf4ng c\xf3 s\u1ef1 thay \u0111\u1ed5i n\xe0o s\u1ebd \u1ea3nh h\u01b0\u1edfng l\xean database.\\n- Durability\\n\\nM\u1ed9t khi commit, c\xe1c thay \u0111\u1ed5i b\u1edfi transaction s\u1ebd t\u1ed3n t\u1ea1i l\xe2u d\xe0i, c\xe1c s\u1ef1 thay \u0111\u1ed5i \u0111\xf3 c\u1ea7n \u0111\u01b0\u1ee3c ghi ch\xe9p l\u1ea1i \u0111\u1ea3m b\u1ea3o vi\u1ec7c d\u1eef li\u1ec7u kh\xf4ng b\u1ecb m\u1ea5t n\u1ebfu h\u1ec7 th\u1ed1ng b\u1ecb l\u1ed7i.\\n\\n### 3. 4 isolation level trong m\xf4i tr\u01b0\u1eddng c\xf3 nhi\u1ec1u \u0111\u1ecdc ghi \u0111\u1ed3ng th\u1eddi\\nC\xf3 4 isolation level li\xean quan t\u1edbi transaction\\n- READ UNCOMMITTED\\n\\n\u1ede ch\u1ebf \u0111\u1ed9 n\xe0y, c\xe1c transactions c\xf3 th\u1ec3 nh\xecn th\u1ea5y k\u1ebft qu\u1ea3 c\u1ee7a c\xe1c transactions ch\u01b0a commit kh\xe1c. Ch\u1ebf \u0111\u1ed9 n\xe0y hi\u1ec7u n\u0103ng kh\xf4ng nhanh h\u01a1n qu\xe1 nhi\u1ec1u ch\u1ebf \u0111\u1ed9 kh\xe1c nh\u01b0ng d\u1ec5 g\xe2y nhi\u1ec1u v\u1ea5n \u0111\u1ec1 khi \u0111\u1ecdc d\u1eef li\u1ec7u sai.\\n- READ COMMITTED\\n\\nCh\u1ebf \u0111\u1ed9 m\u1eb7c \u0111\u1ecbnh c\u1ee7a h\u1ea7u h\u1ebft c\xe1c database (nh\u01b0ng kh\xf4ng ph\u1ea3i MySQL), n\xf3 s\u1ebd l\xe0m m\u1ea5t \u0111i m\u1ed9t s\u1ed1 \u0111\u1eb7c t\xednh trong t\xednh Isolation c\u1ee7a ACID, transaction n\xe0y s\u1ebd c\xf3 th\u1ec3 nh\xecn th\u1ea5y c\xe1c s\u1ef1 thay \u0111\u1ed5i b\u1edfi c\xe1c transactions kh\xe1c \u0111\u01b0\u1ee3c commit sau khi transaction n\xe0y b\u1eaft \u0111\u1ea7u, tuy nhi\xean s\u1ef1 thay \u0111\u1ed5i c\u1ee7a transaction n\xe0y v\u1eabn v\xf4 h\xecnh cho \u0111\u1ebfn khi n\xf3 \u0111\u01b0\u1ee3c commit. \u0110i\u1ec1u n\xe0y c\xf3 th\u1ec3 g\xe2y ra vi\u1ec7c hai c\xe2u l\u1ec7nh \u0111\u1ecdc gi\u1ed1ng nhau trong m\u1ed9t transaction c\xf3 th\u1ec3 tr\u1ea3 v\u1ec1 c\xe1c d\u1eef li\u1ec7u kh\xe1c nhau.\\n- REPEATABLE READ \\n\\nCh\u1ebf \u0111\u1ed9 n\xe0y l\xe0 m\u1eb7c \u0111\u1ecbnh c\u1ee7a MySQL. N\xf3 \u0111\u1ea3m b\u1ea3o r\u1eb1ng trong c\xf9ng m\u1ed9t transaction, c\xe1c c\xe2u l\u1ec7nh \u0111\u1ecdc gi\u1ed1ng nhau s\u1ebd tr\u1ea3 v\u1ec1 c\xf9ng m\u1ed9t k\u1ebft qu\u1ea3 gi\u1ed1ng nhau. Nh\u01b0ng c\u0169ng s\u1ebd c\xf3 m\u1ed9t v\u1ea5n \u0111\u1ec1 nh\u1ecf x\u1ea3y ra l\xe0 n\u1ebfu ta select m\u1ed9t kho\u1ea3ng gi\xe1 tr\u1ecb, m\u1ed9t transaction kh\xe1c ch\xe8n b\u1ea3n ghi m\u1edbi v\xe0o kho\u1ea3ng gi\xe1 tr\u1ecb \u0111\xf3, ta s\u1ebd nh\xecn th\u1ea5y b\u1ea3n ghi m\u1edbi \u0111\xf3. C\xe1c storage engines nh\u01b0 InnDB, XtraDB gi\u1ea3i quy\u1ebft v\u1ea5n \u0111\u1ec1 n\xe0y b\u1eb1ng vi\u1ec7c t\u1ea1o ra nhi\u1ec1u phi\xean b\u1ea3n qu\u1ea3n l\xfd vi\u1ec7c \u0111\u1ecdc ghi \u0111\u1ed3ng th\u1eddi.\\n- SERIALIZABLE\\n\\nCh\u1ebf \u0111\u1ed9 n\xe0y gi\u1ea3i quy\u1ebft v\u1ea5n \u0111\u1ec1 \u0111\u1ecdc m\u1ed9t kho\u1ea3ng gi\xe1 tr\u1ecb b\xean tr\xean b\u1eb1ng vi\u1ec7c ch\u1ea1y c\xe1c transactions theo m\u1ed9t th\u1ee9 t\u1ef1. Ch\u1ebf \u0111\u1ed9 n\xe0y s\u1ebd kho\xe1 t\u1ea5t c\u1ea3 row m\xe0 n\xf3 \u0111\u1ecdc, r\u1ea5t nhi\u1ec1u timeout v\xe0 vi\u1ec7c kho\xe1 x\u1ea3y ra th\u01b0\u1eddng xuy\xean, t\xednh \u0111\u1ecdc ghi \u0111\u1ed3ng th\u1eddi s\u1ebd b\u1ecb gi\u1ea3m xu\u1ed1ng.\\n\\n![Isolation Level](./images/isolation_levels.PNG)\\n\\n### 4. Deadlock trong transaction\\nDeadlock x\u1ea3y ra khi hai ho\u1eb7c nhi\u1ec1u c\xe1c transactions kho\xe1 c\u0169ng c\xe1c t\xe0i nguy\xean, t\u1ea1o ra m\u1ed9t v\xf2ng tr\xf2n ph\u1ee5 thu\u1ed9c\\n```sql\\n-- Transaction 1 \\n    START TRANSACTION;\\n    UPDATE StockPrice SET close = 45.50 WHERE stock_id = 4 and date = \u20182020-05-01\u2019;\\n    UPDATE StockPrice SET close = 19.80 WHERE stock_id = 3 and date = \u20182020-05-02\u2019;\\n    COMMIT;\\n-- Transaction 2 \\n    START TRANSACTION;\\n    UPDATE StockPrice SET high = 20.12 WHERE stock_id = 3 and date = \u20182020-05-02\u2019;\\n    UPDATE StockPrice SET high = 47.20 WHERE stock_id = 4 and date = \u20182020-05-01\u2019;\\n    COMMIT;\\n```\\nSau khi 2 transaction n\xe0y ch\u1ea1y xong l\u1ec7nh \u0111\u1ea7u ti\xean, khi ch\u1ea1y l\u1ec7nh th\u1ee9 2. C\xe1c b\u1ea3n ghi v\u1edbi id t\u01b0\u01a1ng \u1ee9ng c\u1ee7a transaction n\xe0y \u0111ang b\u1ecb kho\xe1 b\u1edfi transaction kh\xe1c, c\u0169ng nh\u01b0 transaction kh\xe1c b\u1ecb kho\xe1 b\u1edfi transaction n\xe0y. InnoDB s\u1ebd tr\u1ea3 v\u1ec1 l\u1ed7i n\u1ebfu ph\xe1t hi\u1ec7n m\u1ed9t v\xf2ng tr\xf2n ph\u1ee5 thu\u1ed9c. C\xe1ch m\xe0 InnoDB x\u1eed l\xfd deadlock l\xe0 n\xf3 s\u1ebd rollback transaction c\xf3 \xedt row b\u1ecb lock nh\u1ea5t.\\n\\n![Deadlock](./images/deadlock.JPEG)\\n\\n### 5. Transaction logging\\nTransaction logging khi\u1ebfn vi\u1ec7c th\u1ef1c hi\u1ec7n transaction th\xeam hi\u1ec7u qu\u1ea3 h\u01a1n. Thay v\xec c\u1eadp nh\u1eadt th\u1eb3ng v\xe0o b\u1ea3ng \u1edf disk m\u1ed7i khi c\xf3 s\u1ef1 thay \u0111\u1ed5i n\xe0o \u0111\xf3, n\xf3 c\u1eadp nh\u1eadt v\xe0o b\u1ea3ng copy c\u1ee7a d\u1eef li\u1ec7u trong b\u1ed9 nh\u1edb (in-memory). Sau \u0111\xf3 c\xe1c transaction log s\u1ebd \u0111\u01b0\u1ee3c ghi xu\u1ed1ng disk v\u1edbi mode append, ho\u1ea1t \u0111\u1ed9ng n\xe0y r\u1ea5t nhanh v\xec ch\u1ec9 y\xeau c\u1ea7u I/O tu\u1ea7n t\u1ef1 trong disk, hi\u1ec7u qu\u1ea3 v\u1ec1 chi ph\xed h\u01a1n, m\u1ed9t th\u1eddi gian sau c\xe1c thay \u0111\u1ed5i n\xe0y m\u1edbi \u0111\u01b0\u1ee3c \xe1p d\u1ee5ng v\xe0o d\u1eef li\u1ec7u th\u1ef1c \u1edf disk. B\u1edfi v\xec log n\xe0y \u0111\u01b0\u1ee3c ghi tr\xean disk n\xean n\xf3 s\u1ebd t\u1ed3n t\u1ea1i l\xe2u, n\u1ebfu h\u1ec7 th\u1ed1ng l\u1ed7i sau khi ghi transaction log xu\u1ed1ng disk nh\u01b0ng tr\u01b0\u1edbc khi c\u1eadp nh\u1eadt thay \u0111\u1ed5i v\xe0o d\u1eef li\u1ec7u ch\xednh, storage engine v\u1eabn c\xf3 th\u1ec3 ph\u1ee5c h\u1ed3i c\xe1c thay \u0111\u1ed5i \u0111\xf3 \u0111\u01b0\u1ee3c.\\n\\n![Transaction Log](./images/transaction_log.PNG)\\n\\n### 6. Autocommit\\nM\u1eb7c \u0111\u1ecbnh c\xe1c c\xe2u l\u1ec7nh INSERT, UPDATE, DELETE \u0111\u01b0\u1ee3c g\xf3i trong c\xe1c transaction t\u1ea1m v\xe0 \u0111\u01b0\u1ee3c commit ngay khi n\xf3 ch\u1ea1y, \u0111\xe2y l\xe0 ch\u1ebf \u0111\u1ed9 AUTOCOMMIT. \u0110\u1ec3 b\u1eadt ch\u1ebf \u0111\u1ed9 n\xe0y ch\u1ea1y c\xe2u SET AUTOCOMMIT = 1; ng\u01b0\u1ee3c l\u1ea1i th\xec SET AUTOCOMMIT = 0. M\u1ed9t s\u1ed1 c\xe2u l\u1ec7nh \u0111\u1eb7c bi\u1ec7t c\xf3 th\u1ec3 l\xe0m transaction commit khi n\u1eb1m trong m\u1ed9t transaction \u0111ang m\u1edf, v\xed d\u1ee5 nh\u01b0 c\xe1c c\xe2u l\u1ec7nh DDL.\\nTa c\xf3 th\u1ec3 c\xe0i \u0111\u1eb7t isolation level cho MySQL b\u1eb1ng vi\u1ec7c ch\u1ea1y c\xe2u l\u1ec7nh SET TRANSACTION ISOLATION LEVEL, sau khi ch\u1ea1y th\xec isolation level n\xe0y s\u1ebd c\xf3 hi\u1ec7u d\u1ee5ng trong c\xe1c transaction ti\u1ebfp theo. Ta c\xf3 th\u1ec3 c\xe0i \u0111\u1eb7t trong file c\u1ea5u h\xecnh cho c\u1ea3 server, ho\u1eb7c l\xe0 ch\u1ec9 set trong phi\xean l\xe0m vi\u1ec7c c\u1ee7a ta \\n```sql\\nSET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED;\\n```\\nTa kh\xf4ng n\xean x\u1eed l\xfd c\xe1c b\u1ea3ng c\xf3 kh\xe1c storage engine trong c\xf9ng m\u1ed9t transaction, v\xec c\xf3 m\u1ed9t s\u1ed1 storage engine s\u1ebd kh\xf4ng h\u1ed7 tr\u1ee3 vi\u1ec7c rollback d\u1eef li\u1ec7u (MyISAM storage engine), n\u1ebfu c\xf3 m\u1ed9t s\u1ed1 l\u1ed7i x\u1ea3y ra trong qu\xe1 tr\xecnh th\u1ef1c hi\u1ec7n transaction, s\u1ebd ch\u1ec9 c\xf3 m\u1ed9t s\u1ed1 b\u1ea3ng \u0111\u01b0\u1ee3c rollback l\u1ea1i khi\u1ebfn l\xe0m m\u1ea5t \u0111i t\xednh Consistency.\\n\\nB\xe0i vi\u1ebft k\u1ebft th\xfac t\u1ea1i \u0111\xe2y, h\u1eb9n g\u1eb7p c\xe1c b\u1ea1n trong c\xe1c blog ti\u1ebfp theo."},{"id":"mysql-series-mysql-architecture","metadata":{"permalink":"/blogs/blog/mysql-series-mysql-architecture","editUrl":"https://github.com/lam1051999/blogs/edit/main/blog/2022-10-04-mysql-architecture/index.md","source":"@site/blog/2022-10-04-mysql-architecture/index.md","title":"MySQL series - T\u1ed5ng quan ki\u1ebfn tr\xfac MySQL","description":"Ch\xe0o c\xe1c b\u1ea1n, g\u1ea7n \u0111\xe2y m\xecnh c\xf3 t\xecm hi\u1ec3u s\xe2u h\u01a1n v\u1ec1 MySQL v\xec m\xecnh ngh\u0129 l\xe0m data th\xec n\xean n\u1eafm v\u1eefng m\u1ed9t c\u01a1 s\u1edf d\u1eef li\u1ec7u quan h\u1ec7 n\xe0o \u0111\xf3. Khi \u0111\xe3 ch\u1eafc m\u1ed9t RMDBS th\xec c\xe1c RMDBS kh\xe1c c\u0169ng s\u1ebd c\xf3 nhi\u1ec1u n\xe9t t\u01b0\u01a1ng \u0111\u1ed3ng. Th\u1eddi gian t\u1edbi m\xecnh s\u1ebd c\xf3 m\u1ed9t series v\u1ec1 MySQL, \u0111\xe2y l\xe0 b\xe0i vi\u1ebft \u0111\u1ea7u ti\xean.","date":"2022-10-04T00:00:00.000Z","formattedDate":"October 4, 2022","tags":[{"label":"Bigdata","permalink":"/blogs/blog/tags/bigdata"},{"label":"MySQL","permalink":"/blogs/blog/tags/my-sql"},{"label":"Database","permalink":"/blogs/blog/tags/database"},{"label":"Data Engineering","permalink":"/blogs/blog/tags/data-engineering"}],"readingTime":5.26,"truncated":true,"authors":[{"name":"Tr\u1ea7n L\xe2m","title":"Data Engineer","url":"https://github.com/lam1051999","imageURL":"https://github.com/lam1051999.png","key":"tranlam"}],"frontMatter":{"slug":"mysql-series-mysql-architecture","title":"MySQL series - T\u1ed5ng quan ki\u1ebfn tr\xfac MySQL","authors":"tranlam","tags":["Bigdata","MySQL","Database","Data Engineering"],"image":"./images/architecture.PNG"},"prevItem":{"title":"MySQL series - Transaction trong MySQL","permalink":"/blogs/blog/mysql-series-mysql-transaction"},"nextItem":{"title":"T\u1ea1o lu\u1ed3ng streaming d\u1eef li\u1ec7u v\u1edbi Spark Streaming, Kafka, Docker","permalink":"/blogs/blog/spark-kafka-docker"}},"content":"Ch\xe0o c\xe1c b\u1ea1n, g\u1ea7n \u0111\xe2y m\xecnh c\xf3 t\xecm hi\u1ec3u s\xe2u h\u01a1n v\u1ec1 MySQL v\xec m\xecnh ngh\u0129 l\xe0m data th\xec n\xean n\u1eafm v\u1eefng m\u1ed9t c\u01a1 s\u1edf d\u1eef li\u1ec7u quan h\u1ec7 n\xe0o \u0111\xf3. Khi \u0111\xe3 ch\u1eafc m\u1ed9t RMDBS th\xec c\xe1c RMDBS kh\xe1c c\u0169ng s\u1ebd c\xf3 nhi\u1ec1u n\xe9t t\u01b0\u01a1ng \u0111\u1ed3ng. Th\u1eddi gian t\u1edbi m\xecnh s\u1ebd c\xf3 m\u1ed9t series v\u1ec1 MySQL, \u0111\xe2y l\xe0 b\xe0i vi\u1ebft \u0111\u1ea7u ti\xean.\\n\\n\x3c!--truncate--\x3e\\n\\n### 1. C\xe1c th\xe0nh ph\u1ea7n trong ki\u1ebfn tr\xfac MySQL\\nMySQL \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng r\u1ed9ng r\xe3i kh\xf4ng ch\u1ec9 \u1edf nh\u1eefng \u1ee9ng d\u1ee5ng nh\u1ecf m\xe0 c\xf2n \u1edf c\xe1c doanh nghi\u1ec7p l\u1edbn, nh\u1edd c\xe1c \u0111\u1eb7c tr\u01b0ng c\u1ee7a ki\u1ebfn tr\xfac linh ho\u1ea1t c\u1ee7a n\xf3. \\n\\n![Architecture](./images/architecture.PNG)\\n\\nT\u1ea7ng cao nh\u1ea5t l\xe0 t\u1ea7ng Clients, layer n\xe0y th\u01b0\u1eddng kh\xf4ng ch\u1ec9 c\xf3 \u1edf duy nh\u1ea5t MySQL. Ch\xfang l\xe0 d\u1ecbch v\u1ee5 nh\u01b0 x\u1eed l\xfd connection, x\xe1c th\u1ef1c, b\u1ea3o m\u1eadt,\u2026\\n\\nT\u1ea7ng th\u1ee9 hai l\xe0 t\u1ea7ng ch\u1ee9a c\xe1c code ph\u1ee5c v\u1ee5 vi\u1ec7c ph\xe2n t\xedch c\xe1c truy v\u1ea5n, t\u1ed1i \u01b0u v\xe0 ch\u1ee9a c\xe1c h\xe0m built in t\u01b0\u01a1ng t\xe1c v\u1edbi database nh\u01b0 dates, times, math, encryption,\u2026 t\u1ea5t c\u1ea3 c\xe1c t\xednh n\u0103ng t\u01b0\u01a1ng th\xedch v\u1edbi nhi\u1ec1u storage engines nh\u01b0 stored procedures, triggers, views,\u2026\\n\\nT\u1ea7ng th\u1ee9 ba l\xe0 storage engines, c\xf3 nhi\u1ec7m v\u1ee5 l\u01b0u tr\u1eef v\xe0 l\u1ea5y c\xe1c d\u1eef li\u1ec7u trong MySQL. M\u1ed7i storage engines c\xf3 c\xe1c m\u1eb7t t\u1ed1t v\xe0 c\xe1c m\u1eb7t kh\xf4ng t\u1ed1t c\u1ee7a ri\xeang ch\xfang. MySQL server t\u01b0\u01a1ng t\xe1c v\u1edbi ch\xfang b\u1edfi c\xe1c storage engine API, ch\u1ee9a nhi\u1ec1u h\xe0m low-level, c\xe1c ho\u1ea1t \u0111\u1ed9ng nh\u01b0 b\u1eaft \u0111\u1ea7u m\u1ed9t transaction, t\xecm b\u1ea3n ghi v\u1edbi primary key t\u01b0\u01a1ng \u1ee9ng. Storage engines ch\u1ec9 ph\u1ea3n h\u1ed3i l\u1ea1i c\xe1c request t\u1eeb server, c\xf2n ph\xe2n t\xedch c\xe1c c\xe2u truy v\u1ea5n \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n \u1edf t\u1ea7ng th\u1ee9 hai.\\n\\n### 2. Qu\u1ea3n l\xfd k\u1ebft n\u1ed1i v\xe0 b\u1ea3o m\u1eadt\\nV\u1edbi c\u1ea5u h\xecnh m\u1eb7c \u0111\u1ecbnh, m\u1ed7i k\u1ebft n\u1ed1i t\u1eeb client s\u1ebd chi\u1ebfm m\u1ed9t thread, v\xe0 c\xe1c truy v\u1ea5n s\u1ebd ch\u1ea1y trong thread \u0111\xf3. Server s\u1ebd c\xf3 m\u1ed9t cache c\xe1c thread s\u1eb5n s\xe0ng c\xf3 th\u1ec3 s\u1eed d\u1ee5ng, n\xean ch\xfang s\u1ebd kh\xf4ng c\u1ea7n t\u1ea1o ra v\xe0 hu\u1ef7 \u0111i m\u1ed7i khi c\xf3 m\u1ed9t k\u1ebft n\u1ed1i m\u1edbi t\u1eeb client.\\n\\nKhi client k\u1ebft n\u1ed1i, server s\u1ebd c\u1ea7n x\xe1c th\u1ef1c k\u1ebft n\u1ed1i \u0111\xf3 d\u1ef1a tr\xean host, username, password. Sau khi \u0111\xe3 connect th\xec server s\u1ebd ki\u1ec3m tra xem client \u0111\xf3 c\xf3 quy\u1ec1n th\u1ebf n\xe0o, v\xe0o c\xe1c t\xe0i nguy\xean n\xe0o c\u1ee7a database (v\xed d\u1ee5 nh\u01b0 quy\u1ec1n SELECT b\u1ea3ng n\xe0o \u1edf database n\xe0o,\u2026).\\n\\n### 3. B\u1ed9 t\u1ed1i \u01b0u ho\xe1 v\xe0 tr\xecnh ch\u1ea1y\\n\\n![Overall](./images/overall.PNG)\\n\\nKhi ch\u1ea1y, MySQL s\u1ebd \\n- T\xecm trong query cache \u0111\u1ec3 xem k\u1ebft qu\u1ea3 c\u1ee7a truy v\u1ea5n c\xf3 th\u1ec3 t\xecm \u0111\u01b0\u1ee3c th\xec n\xf3 tr\u1ea3 l\u1ea1i k\u1ebft qu\u1ea3 lu\xf4n, n\u1ebfu kh\xf4ng n\xf3 th\u1ef1c hi\u1ec7n c\xe1c b\u01b0\u1edbc ti\u1ebfp theo. K\xedch th\u01b0\u1edbc b\u1ed9 nh\u1edb c\u1ee7a query cache \u0111\u01b0\u1ee3c g\xe1n trong bi\u1ebfn ```query_cache_size```, n\u1ebfu c\u1eadp nh\u1eadt bi\u1ebfn n\xe0y, MySQL s\u1ebd xo\xe1 h\u1ebft t\u1eebng truy v\u1ea5n \u0111\u01b0\u1ee3c cache m\u1ed9t v\xe0 kh\u1edfi t\u1ea1o l\u1ea1i query cache (vi\u1ec7c n\xe0y c\xf3 th\u1ec3 t\u1ed1n nhi\u1ec1u th\u1eddi gian).\\n- Ph\xe2n t\xedch c\xe1c c\xe2u truy v\u1ea5n th\xe0nh c\xe2y ch\u1ee9a th\xf4ng tin c\u1ee7a truy v\u1ea5n \u0111\xf3. C\xe2u truy v\u1ea5n c\xf3 th\u1ec3 b\u1ecb vi\u1ebft l\u1ea1i ho\xe0n to\xe0n, th\u1ee9 t\u1ef1 b\u1ea3ng \u0111\u01b0\u1ee3c \u0111\u1ecdc s\u1ebd kh\xe1c \u0111i, index c\u1ea7n ch\u1ecdn nh\u01b0 th\u1ebf n\xe0o,\u2026 Ta c\xf3 th\u1ec3 can thi\u1ec7p v\xe0o qu\xe1 tr\xecnh ph\xe2n t\xedch \u0111\xf3 b\u1eb1ng vi\u1ec7c d\xf9ng c\xe1c hint \u0111\u1ec3 quy\u1ebft \u0111\u1ecbnh xem tr\xecnh t\u1ef1 ch\u1ea1y s\u1ebd nh\u01b0 th\u1ebf n\xe0o. Khi n\xe0y b\u1ed9 parser s\u1ebd x\xe2y \u0111\u01b0\u1ee3c m\u1ed9t c\xe2y ph\xe2n t\xedch cho truy v\u1ea5n, b\xean c\u1ea1nh \u0111\xf3, n\xf3 c\xf2n ki\u1ec3m tra c\xfa ph\xe1p c\u1ee7a c\xe2u truy v\u1ea5n.\\n- B\u1ed9 preprocessor s\u1ebd ki\u1ec3m tra th\xeam m\u1ed9t s\u1ed1 r\u1eb1ng bu\u1ed9c kh\xe1c nh\u01b0 b\u1ea3ng, c\u1ed9t ho\u1eb7c database n\xe0y c\xf3 t\u1ed3n t\u1ea1i hay kh\xf4ng, quy\u1ec1n h\u1ea1n c\u1ee7a user th\u1ef1c hi\u1ec7n truy v\u1ea5n \u0111\u1ebfn nh\u1eefng t\xe0i nguy\xean n\xe0o.\\n- Sau \u0111\xf3, c\xe2y ph\xe2n t\xedch s\u1ebd \u0111\u01b0\u1ee3c cho qua m\u1ed9t b\u1ed9 optimizer \u0111\u1ec3 chuy\u1ec3n th\xe0nh query execution plan. M\u1ed9t c\xe2u truy v\u1ea5n MySQL c\xf3 th\u1ec3 \u0111\u01b0\u1ee3c ch\u1ea1y theo nhi\u1ec1u c\xe1ch, optimizer s\u1ebd t\xecm c\xe1ch t\u1ed1i \u01b0u chi ph\xed nh\u1ea5t c\xf3 th\u1ec3 (\u0111\u01a1n v\u1ecb l\xe0 4KB data page), chi ph\xed n\xe0y c\xf3 th\u1ec3 \u0111\u01b0\u1ee3c xem b\u1eb1ng c\xe1ch ch\u1ea1y ```SHOW STATUS LIKE \'Last_query_cost\';```. B\u1ed9 optimizer kh\xf4ng th\u1ef1c s\u1ef1 quan t\xe2m ph\xeda d\u01b0\u1edbi s\u1eed d\u1ee5ng storage engines n\xe0o, nh\u01b0ng vi\u1ec7c ch\u1ecdn storage engine c\xf3 \u1ea3nh h\u01b0\u1edfng l\u1edbn \u0111\u1ebfn vi\u1ec7c server t\u1ed1i \u01b0u c\xe1c query. v\xec server c\u1ea7n c\xe1c th\xf4ng tin t\u1eeb storage engines v\xed d\u1ee5 nh\u01b0 ch\u1ec9 s\u1ed1 th\u1ed1ng k\xea c\u1ee7a c\xe1c b\u1ea3ng, chi ph\xed th\u1ef1c hi\u1ec7n c\xe1c ho\u1ea1t \u0111\u1ed9ng, vi\u1ec7c h\u1ed7 tr\u1ee3 index nh\u01b0 th\u1ebf n\xe0o hay kh\u1ea3 n\u0103ng t\xednh to\xe1n c\u1ee7a storage engines \u0111\u1ec3 t\u1ed1i \u01b0u vi\u1ec7c ch\u1ea1y h\u01a1n. B\u1ed9 optimizer c\xf3 th\u1ec3 kh\xf4ng ch\u1ecdn \u0111\u01b0\u1ee3c plan t\u1ed1t nh\u1ea5t \u0111\u1ec3 ch\u1ea1y do c\xe1c ch\u1ec9 s\u1ed1 th\u1ed1ng k\xea t\u1eeb storage engines kh\xf4ng ch\xednh x\xe1c tuy\u1ec7t \u0111\u1ed1i, metric chi ph\xed c\xf3 th\u1ec3 kh\xf4ng t\u01b0\u01a1ng \u0111\u01b0\u01a1ng v\u1edbi chi ph\xed ch\u1ea1y query, MySQL s\u1ebd c\u1ed1 g\u1eafng gi\u1ea3m thi\u1ec3u chi ph\xed ch\u1ee9 kh\xf4ng t\u0103ng t\u1ed1c \u0111\u1ed9 c\u1ee7a truy v\u1ea5n, hay c\xe1c h\xe0m user-defined function s\u1ebd kh\xf4ng \u0111\u01b0\u1ee3c x\xe9t b\u1edfi b\u1ed9 optimizer.\\n- Query execution plan l\xe0 m\u1ed9t d\u1ea1ng c\xe2y ch\u1ee9a t\u1eebng b\u01b0\u1edbc \u0111\u1ec3 t\u1ea1o ra k\u1ebft qu\u1ea3 cho truy v\u1ea5n, server s\u1ebd th\u1ef1c hi\u1ec7n nhi\u1ec1u l\u1ea7n c\xe1c b\u01b0\u1edbc \u0111\xf3 cho \u0111\u1ebfn khi kh\xf4ng c\xf2n b\u1ea3n ghi n\xe0o c\u1ea7n l\u1ea5y n\u1eefa. Query execution engine giao ti\u1ebfp v\u1edbi storage engines b\u1edfi c\xe1c storage engine API \u0111\u1ec3 th\u1ef1c hi\u1ec7n c\xe1c ho\u1ea1t \u0111\u1ed9ng theo query execution plan.\\n- MySQL storage engines l\xe0 m\u1ed9t h\u1ec7 th\u1ed1ng qu\u1ea3n l\xfd v\u1edbi m\u1ed7i database l\xe0 m\u1ed9t \u0111\u01b0\u1eddng d\u1eabn con trong \u0111\u01b0\u1eddng d\u1eabn data c\u1ee7a filesystem \u0111\xf3. Khi t\u1ea1o m\u1ed9t b\u1ea3ng, th\xf4ng tin b\u1ea3ng s\u1ebd \u0111\u01b0\u1ee3c ch\u1ee9a trong file .frm (v\xed d\u1ee5 nh\u01b0 th\xf4ng tin b\u1ea3ng ```users``` s\u1ebd \u0111\u01b0\u1ee3c l\u01b0u trong file ```user.frm```).\\n- Ti\u1ebfp \u0111\u1ebfn, truy v\u1ea5n s\u1ebd \u0111\u01b0\u1ee3c ch\u1ea1y v\xe0 tr\u1ea3 v\u1ec1 k\u1ebft qu\u1ea3 cho client. MySQL \u0111\u1ed3ng th\u1eddi c\u0169ng l\u01b0u k\u1ebft qu\u1ea3 c\u1ee7a truy v\u1ea5n trong query cache.\\n\\nCu\u1ed1i c\xf9ng, vi\u1ec7c cache l\u1ea1i c\xe1c k\u1ebft qu\u1ea3 c\u1ee7a c\xe1c truy v\u1ea5n hay s\u1eed d\u1ee5ng c\xf3 th\u1ec3 c\u1ea3i thi\u1ec7n hi\u1ec7u n\u0103ng. Tr\u01b0\u1edbc \u0111\xe2y, MySQL c\xf3 m\u1ed9t b\u1ed9 query cache trong ki\u1ebfn tr\xfac c\u1ee7a n\xf3, do l\xe0 n\xfat th\u1eaft c\u1ed5 chai trong m\xf4i tr\u01b0\u1eddng c\xf3 \u0111\u1ed9 \u0111\u1ecdc ghi \u0111\u1ed3ng th\u1eddi cao, query cache n\xe0y trong c\xe1c phi\xean b\u1ea3n m\u1edbi \u0111\xe3 kh\xf4ng \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng n\u1eefa, thay v\xe0o \u0111\xf3 th\u01b0\u1eddng d\xf9ng c\xe1ch cache d\u1eef li\u1ec7u kh\xe1c nh\u01b0 Redis,...\\n\\nTr\xean \u0111\xe2y l\xe0 t\u1ed5ng quan v\u1ec1 ki\u1ebfn tr\xfac c\u1ee7a MySQL v\xe0 quy tr\xecnh ch\u1ea1y m\u1ed9t truy v\u1ea5n. H\u1eb9n g\u1eb7p l\u1ea1i c\xe1c b\u1ea1n \u1edf c\xe1c b\xe0i vi\u1ebft ti\u1ebfp theo."},{"id":"spark-kafka-docker","metadata":{"permalink":"/blogs/blog/spark-kafka-docker","editUrl":"https://github.com/lam1051999/blogs/edit/main/blog/2022-09-11-spark-kafka-docker/index.md","source":"@site/blog/2022-09-11-spark-kafka-docker/index.md","title":"T\u1ea1o lu\u1ed3ng streaming d\u1eef li\u1ec7u v\u1edbi Spark Streaming, Kafka, Docker","description":"Architecture","date":"2022-09-11T00:00:00.000Z","formattedDate":"September 11, 2022","tags":[{"label":"Bigdata","permalink":"/blogs/blog/tags/bigdata"},{"label":"Spark","permalink":"/blogs/blog/tags/spark"},{"label":"Apache","permalink":"/blogs/blog/tags/apache"},{"label":"Kafka","permalink":"/blogs/blog/tags/kafka"},{"label":"Docker","permalink":"/blogs/blog/tags/docker"}],"readingTime":9.13,"truncated":true,"authors":[{"name":"Tr\u1ea7n L\xe2m","title":"Data Engineer","url":"https://github.com/lam1051999","imageURL":"https://github.com/lam1051999.png","key":"tranlam"}],"frontMatter":{"slug":"spark-kafka-docker","title":"T\u1ea1o lu\u1ed3ng streaming d\u1eef li\u1ec7u v\u1edbi Spark Streaming, Kafka, Docker","authors":"tranlam","tags":["Bigdata","Spark","Apache","Kafka","Docker"],"image":"./images/architecture.PNG"},"prevItem":{"title":"MySQL series - T\u1ed5ng quan ki\u1ebfn tr\xfac MySQL","permalink":"/blogs/blog/mysql-series-mysql-architecture"},"nextItem":{"title":"T\u1ea1o 1 Standalone Spark Cluster v\u1edbi Docker","permalink":"/blogs/blog/spark-cluster-docker"}},"content":"![Architecture](./images/architecture.PNG)\\n\\nCh\xe0o c\xe1c b\u1ea1n, m\xecnh \u0111\xe3 tr\u1edf l\u1ea1i sau m\u1ed9t th\u1eddi gian kh\xe1 l\xe2u ch\u01b0a vi\u1ebft g\xec. H\xf4m nay, m\xecnh mu\u1ed1n chia s\u1ebb v\u1ec1 c\xe1ch t\u1ea1o 1 lu\u1ed3ng Spark Streaming ti\xeau th\u1ee5 d\u1eef li\u1ec7u t\u1eeb Kafka, t\u1ea5t c\u1ea3 m\u1ecdi th\u1ee9 \u0111\u01b0\u1ee3c d\u1ef1ng tr\xean Docker.\\n\\n\x3c!--truncate--\x3e\\n\\n### 1. T\u1ed5ng quan m\xf4 h\xecnh\\nM\xf4 h\xecnh \u0111\u01b0\u1ee3c containerize b\u1edfi Docker. Bao g\u1ed3m c\xe1c th\xe0nh ph\u1ea7n sau\\n* Producer: l\xe0 m\u1ed9t Kafka Producer s\u1ea3n xu\u1ea5t d\u1eef li\u1ec7u fake v\u1ec1 th\xf4ng tin m\u1ed9t c\xe1 th\u1ec3 b\u1eb1ng Java Faker v\xe0 b\u1eafn c\xe1c message l\xean Kafka.\\n* Kafka cluster: bao g\u1ed3m c\xe1c broker \u0111\u1ec3 l\u01b0u tr\u1eef d\u1eef li\u1ec7u v\xe0 Zookeeper \u0111\u1ec3 qu\u1ea3n l\xfd c\xe1c broker \u0111\xf3.\\n* Spark cluster: l\xe0 m\u1ed9t c\u1ee5m Spark g\u1ed3m 3 nodes: 1 driver v\xe0 2 worker \u0111\u1ec3 ti\xeau th\u1ee5 d\u1eef li\u1ec7u t\u1eeb Kafka.\\n* Schema Registry: cung c\u1ea5p restful interface \u0111\u1ec3 l\u01b0u tr\u1eef v\xe0 l\u1ea5y c\xe1c schema, gi\xfap cho Kafka producer v\xe0 consumer ho\u1ea1t \u0111\u1ed9ng v\u1edbi nhau theo quy chu\u1ea9n. Khi m\xe0 2 \u0111\u1ea7u s\u1ea3n xu\u1ea5t v\xe0 ti\xeau th\u1ee5 message t\u1eeb 2 \u0111\u1ea7u Kafka l\xe0 \u0111\u1ed9c l\u1eadp, b\xean \u0111\u1ea7u ti\xeau th\u1ee5 kh\xf4ng c\u1ea7n bi\u1ebft b\xean s\u1ea3n xu\u1ea5t b\u1eafn message v\u1edbi format th\u1ebf n\xe0o, th\xec Schema Registry nh\u01b0 l\xe0 trung gian \u0111\u1ec3 2 b\xean \u0111\u0103ng k\xed format message v\u1edbi nhau, tr\xe1nh l\u1ed7i h\u1ec7 th\u1ed1ng.\\n* Postgres: l\xe0 database \u0111\u1ec3 cung c\u1ea5p c\xe1c c\u1ea5u h\xecnh cho app Spark Streaming v\xe0 \u1edf b\xe0i vi\u1ebft n\xe0y c\u0169ng l\xe0 n\u01a1i \u0111\u1ec3 \u0111\u1ea9y d\u1eef li\u1ec7u streaming xu\u1ed1ng. \\n\\n### 2. D\u1ef1ng c\xe1c container c\u1ea7n thi\u1ebft tr\xean Docker\\n\\n#### 2.1. T\u1ea1o Spark cluster\\nNh\u01b0 trong **[b\xe0i vi\u1ebft tr\u01b0\u1edbc](/blog/2022-01-01-spark-cluster-docker/index.md)** m\xecnh c\xf3 vi\u1ebft v\u1ec1 c\xe1ch d\u1ef1ng c\u1ee5m Spark tr\xean Docker, \u1edf b\xe0i n\xe0y m\xecnh t\u1eadn d\u1ee5ng lu\xf4n c\u1ee5m \u0111\xf3. Tuy nhi\xean, c\xf3 m\u1ed9t ch\xfat thay \u0111\u1ed5i, l\u01b0\u1ee3c b\u1ecf \u0111i m\u1ed9t s\u1ed1 th\u1ee9 \u0111\u1ec3 ph\xf9 h\u1ee3p v\u1edbi b\xe0i vi\u1ebft n\xe0y. C\xe1c b\u1ea1n c\xf3 th\u1ec3 t\xecm \u0111\u01b0\u1ee3c script build image **[t\u1ea1i \u0111\xe2y](https://github.com/lam1051999/spark_kafka_docker/tree/main/spark_cluster)**. Th\u1ebf l\xe0 ta \u0111\xe3 c\xf3 c\xe1c image c\u1ea7n thi\u1ebft cho Spark cluster. Sau \u0111\xe2y l\xe0 ph\u1ea7n c\u1ea5u h\xecnh c\xe1c container trong docker-compose.yml\\n\\n```yml\\n  spark-master:\\n    image: spark-master\\n    container_name: spark-master\\n    ports:\\n      - 8080:8080\\n      - 7077:7077\\n      - 4040:4040\\n    volumes:\\n      - /Users/tranlammacbook/Documents/spark_streaming_kafka/spark_ex/target:/execution_files\\n  spark-worker-1:\\n    image: spark-worker\\n    container_name: spark-worker-1\\n    environment:\\n      - SPARK_WORKER_CORES=1\\n      - SPARK_WORKER_MEMORY=1024m\\n    ports:\\n      - 18081:8081\\n    volumes:\\n      - /Users/tranlammacbook/Documents/spark_streaming_kafka/spark_ex/target:/execution_files\\n    depends_on:\\n      - spark-master\\n  spark-worker-2:\\n    image: spark-worker\\n    container_name: spark-worker-2\\n    environment:\\n      - SPARK_WORKER_CORES=1\\n      - SPARK_WORKER_MEMORY=1024m\\n    ports:\\n      - 28081:8081\\n    volumes:\\n      - /Users/tranlammacbook/Documents/spark_streaming_kafka/spark_ex/target:/execution_files\\n    depends_on:\\n      - spark-master\\n```\\n\\n#### 2.2. Th\xeam c\xe1c container Zookeeper, Kafka, Postgres, Schema Registry\\nTi\u1ebfp theo s\u1ebd l\xe0 l\xean c\xe1c container Zookeeper, Kafka, Postgres v\xe0 Schema Registry\\n```yml\\n  zookeeper:\\n    image: confluentinc/cp-zookeeper:3.3.1\\n    container_name: zookeeper\\n    ports:\\n      - \\"2181:2181\\"\\n    environment:\\n      ZOOKEEPER_CLIENT_PORT: 2181\\n      ZOOKEEPER_TICK_TIME: 2000\\n  kafka:\\n    image: confluentinc/cp-kafka:3.3.1\\n    container_name: kafka\\n    depends_on:\\n      - zookeeper\\n    ports:\\n      - \\"29092:29092\\"\\n    environment:\\n      KAFKA_BROKER_ID: 1\\n      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181\\n      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092\\n      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT\\n      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT\\n      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1\\n\\n  db:\\n    image: postgres\\n    container_name: db-postgres\\n    volumes:\\n      - ./data/db:/var/lib/postgresql/data\\n    ports:\\n      - \\"5432:5432\\"\\n    environment:\\n      - POSTGRES_NAME=postgres\\n      - POSTGRES_USER=postgres\\n      - POSTGRES_PASSWORD=postgres\\n\\n  schema-registry:\\n    image: confluentinc/cp-schema-registry:3.3.1\\n    container_name: schema-registry\\n    depends_on:\\n      - zookeeper\\n      - kafka\\n    ports:\\n      - \\"8081:8081\\"\\n    environment:\\n      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zookeeper:2181\\n      SCHEMA_REGISTRY_HOST_NAME: schema-registry\\n```\\n\\nT\u1ed5ng h\u1ee3p l\u1ea1i, ta c\xf3 m\u1ed9t file docker-compose.yml ho\xe0n ch\u1ec9nh nh\u01b0 **[\u1edf \u0111\xe2y](https://github.com/lam1051999/spark_kafka_docker/blob/main/spark_ex/docker-compose.yml)**.\\nSau \u0111\xf3, ta th\u1ef1c hi\u1ec7n kh\u1edfi \u0111\u1ed9ng c\xe1c container b\u1eb1ng\\n```bash\\ndocker-compose up -d\\n```\\nL\u01b0u \xfd, vi\u1ec7c n\xe0y kh\u1edfi \u0111\u1ed9ng t\u1ea5t c\u1ea3 c\xe1c container c\xf9ng m\u1ed9t l\xfac, m\u1ed9t s\u1ed1 tr\u01b0\u1eddng h\u1ee3p Kafka v\xe0 Schema Registry s\u1ebd b\u1ecb l\u1ed7i v\xec n\xf3 ph\u1ee5 thu\u1ed9c v\xe0o Zookeeper. H\xe3y ch\u1edd container Zookeeper l\xean xong r\u1ed3i restart l\u1ea1i container Kafka v\xe0 Schema Registry.\\n\\n### 3. T\u1ea1o m\u1ed9t Kafka Producer b\u1eafn d\u1eef li\u1ec7u gi\u1ea3 b\u1eb1ng Java Faker\\nTi\u1ebfp \u0111\u1ebfn, ta t\u1ea1o m\u1ed9t Kafka Producer \u0111\u1ec3 b\u1eafn d\u1eef li\u1ec7u gi\u1ea3 b\u1eb1ng Java. Tr\u01b0\u1edbc ti\xean, ta c\u1ea7n t\u1ea1o 1 schema tr\xean Schema Registry. V\xec Schema Registry cung c\u1ea5p m\u1ed9t restful interface n\xean ta c\xf3 th\u1ec3 d\u1ec5 d\xe0ng t\u01b0\u01a1ng t\xe1c v\u1edbi n\xf3 b\u1eb1ng c\xe1c l\u1eddi g\u1ecdi GET, POST,... Schema ta s\u1eed d\u1ee5ng trong b\xe0i vi\u1ebft n\xe0y s\u1ebd c\xf3 d\u1ea1ng nh\u01b0 sau\\n```json\\n{\\"namespace\\": \\"com.cloudurable.phonebook\\",\\n  \\"type\\": \\"record\\",\\n  \\"name\\": \\"Employee\\",\\n  \\"doc\\" : \\"Represents an Employee at a company\\",\\n  \\"fields\\": [\\n    {\\"name\\": \\"id\\", \\"type\\": \\"string\\", \\"doc\\": \\"The person id\\"},\\n    {\\"name\\": \\"firstName\\", \\"type\\": \\"string\\", \\"doc\\": \\"The persons given name\\"},\\n    {\\"name\\": \\"nickName\\", \\"type\\": [\\"null\\", \\"string\\"], \\"default\\" : null},\\n    {\\"name\\": \\"lastName\\", \\"type\\": \\"string\\"},\\n    {\\"name\\": \\"age\\",  \\"type\\": \\"int\\", \\"default\\": -1},\\n    {\\"name\\": \\"emails\\", \\"type\\": \\"string\\", \\"doc\\": \\"The person email\\"},\\n    {\\"name\\": \\"phoneNumber\\",  \\"type\\":\\n      { \\"type\\": \\"record\\",   \\"name\\": \\"PhoneNumber\\",\\n        \\"fields\\": [\\n          {\\"name\\": \\"areaCode\\", \\"type\\": \\"string\\"},\\n          {\\"name\\": \\"countryCode\\", \\"type\\": \\"string\\", \\"default\\" : \\"\\"},\\n          {\\"name\\": \\"prefix\\", \\"type\\": \\"string\\"},\\n          {\\"name\\": \\"number\\", \\"type\\": \\"string\\"}\\n        ]\\n      }\\n    },\\n    {\\"name\\": \\"status\\", \\"type\\": \\"string\\"}\\n  ]\\n}\\n```\\nTr\u01b0\u1edbc h\u1ebft, \u0111\u1ec3 POST schema n\xe0y l\xean Schema Registry, ta ph\u1ea3i chuy\u1ec3n schema n\xe0y v\u1ec1 d\u1ea1ng escaped json, truy c\u1eadp **[trang web n\xe0y](https://www.freeformatter.com/json-escape.html)** \u0111\u1ec3 chuy\u1ec3n.\\nSau \u0111\xf3, d\xf9ng POST method \u0111\u1ec3 push schema l\xean nh\u01b0 sau\\n```bash\\ncurl -X POST -H \\"Content-Type: application/vnd.schemaregistry.v1+json\\" \\\\\\n  --data \'{\\"schema\\": \\"{\\\\\\"namespace\\\\\\": \\\\\\"com.cloudurable.phonebook\\\\\\",\\\\\\"type\\\\\\": \\\\\\"record\\\\\\",\\\\\\"name\\\\\\": \\\\\\"Employee\\\\\\",\\\\\\"doc\\\\\\" : \\\\\\"Represents an Employee at a company\\\\\\",\\\\\\"fields\\\\\\": [{\\\\\\"name\\\\\\": \\\\\\"id\\\\\\", \\\\\\"type\\\\\\": \\\\\\"string\\\\\\", \\\\\\"doc\\\\\\": \\\\\\"The person id\\\\\\"},{\\\\\\"name\\\\\\": \\\\\\"firstName\\\\\\", \\\\\\"type\\\\\\": \\\\\\"string\\\\\\", \\\\\\"doc\\\\\\": \\\\\\"The persons given name\\\\\\"},{\\\\\\"name\\\\\\": \\\\\\"nickName\\\\\\", \\\\\\"type\\\\\\": [\\\\\\"null\\\\\\", \\\\\\"string\\\\\\"], \\\\\\"default\\\\\\" : null},{\\\\\\"name\\\\\\": \\\\\\"lastName\\\\\\", \\\\\\"type\\\\\\": \\\\\\"string\\\\\\"},{\\\\\\"name\\\\\\": \\\\\\"age\\\\\\",  \\\\\\"type\\\\\\": \\\\\\"int\\\\\\", \\\\\\"default\\\\\\": -1},{\\\\\\"name\\\\\\": \\\\\\"emails\\\\\\", \\\\\\"type\\\\\\": \\\\\\"string\\\\\\", \\\\\\"doc\\\\\\": \\\\\\"The person email\\\\\\"},{\\\\\\"name\\\\\\": \\\\\\"phoneNumber\\\\\\",  \\\\\\"type\\\\\\":{ \\\\\\"type\\\\\\": \\\\\\"record\\\\\\",   \\\\\\"name\\\\\\": \\\\\\"PhoneNumber\\\\\\",\\\\\\"fields\\\\\\": [{\\\\\\"name\\\\\\": \\\\\\"areaCode\\\\\\", \\\\\\"type\\\\\\": \\\\\\"string\\\\\\"},{\\\\\\"name\\\\\\": \\\\\\"countryCode\\\\\\", \\\\\\"type\\\\\\": \\\\\\"string\\\\\\", \\\\\\"default\\\\\\" : \\\\\\"\\\\\\"},{\\\\\\"name\\\\\\": \\\\\\"prefix\\\\\\", \\\\\\"type\\\\\\": \\\\\\"string\\\\\\"},{\\\\\\"name\\\\\\": \\\\\\"number\\\\\\", \\\\\\"type\\\\\\": \\\\\\"string\\\\\\"}]}},{\\\\\\"name\\\\\\": \\\\\\"status\\\\\\", \\\\\\"type\\\\\\": \\\\\\"string\\\\\\"}]}\\"}\' \\\\\\n  http://localhost:8081/subjects/personinformation-value/versions\\n```\\nSau \u0111\xf3, GET v\u1ec1 \u0111\u1ec3 check xem schema \u0111\xe3 l\xean hay ch\u01b0a\\n```bash\\ncurl -X GET http://localhost:8081/subjects/personinformation-value/versions/ // xem c\xe1c version\\ncurl -X GET http://localhost:8081/subjects/personinformation-value/versions/1 // xem schema version 1\\n```\\nKhi n\xe0y, Kafka \u0111\xe3 l\xean, schema \u0111\xe3 c\xf3 tr\xean Schema Registry, vi\u1ec7c c\xf2n l\u1ea1i l\xe0 \u0111\u1ea9y message l\xean topic \u0111\xf3. Vi\u1ebft m\u1ed9t class nh\u01b0 sau (xem \u0111\u1ea7y \u0111\u1ee7 code **[t\u1ea1i \u0111\xe2y](https://github.com/lam1051999/spark_kafka_docker/tree/main/KafkaClient)**), v\xe0 ch\u1ea1y th\xec d\u1eef li\u1ec7u \u0111\xe3 l\xean Kafka v\u1edbi chema \u1edf tr\xean r\u1ed3i.\\n```java\\npackage kafkaclient;\\n\\nimport com.github.javafaker.Faker;\\nimport io.confluent.kafka.serializers.KafkaAvroSerializerConfig;\\nimport org.apache.avro.Schema;\\nimport org.apache.avro.generic.GenericData;\\nimport org.apache.avro.generic.GenericRecord;\\nimport org.apache.kafka.clients.producer.KafkaProducer;\\nimport org.apache.kafka.clients.producer.Producer;\\nimport io.confluent.kafka.serializers.KafkaAvroSerializer;\\nimport org.apache.kafka.clients.producer.ProducerConfig;\\nimport org.apache.kafka.clients.producer.ProducerRecord;\\nimport org.apache.kafka.common.serialization.StringSerializer;\\n\\nimport java.io.File;\\nimport java.io.IOException;\\nimport java.util.ArrayList;\\nimport java.util.Properties;\\n\\npublic class KafkaProducerExample {\\n    private final static String TOPIC = \\"personinformation\\";\\n    private final static String BOOTSTRAP_SERVERS = \\"localhost:29092\\";\\n    private final static String SCHEMA_REGISTRY_URL = \\"http://localhost:8081\\";\\n    private final static String LOCAL_SCHEMA_PATH = \\"src/main/resources/person.avsc\\";\\n    private final static Schema schema;\\n\\n    private final static int nPersons = 1000;\\n\\n    static {\\n        try {\\n            schema = new Schema.Parser().parse(new File(LOCAL_SCHEMA_PATH));\\n        } catch (IOException e) {\\n            throw new RuntimeException(e);\\n        }\\n    }\\n\\n    private static Producer<String, GenericRecord> createProducer(){\\n        Properties props = new Properties();\\n        props.put(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, BOOTSTRAP_SERVERS);\\n        props.put(ProducerConfig.KEY_SERIALIZER_CLASS_CONFIG, StringSerializer.class.getName());\\n        props.put(ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG, KafkaAvroSerializer.class.getName());\\n        props.put(KafkaAvroSerializerConfig.SCHEMA_REGISTRY_URL_CONFIG, SCHEMA_REGISTRY_URL);\\n\\n        return new KafkaProducer<>(props);\\n    }\\n\\n    static void runProducer() {\\n        final Producer<String, GenericRecord> producer = createProducer();\\n        Faker faker = new Faker();\\n\\n        for (int i = 0; i < nPersons; i ++){\\n            String id = faker.idNumber().valid();\\n            String firstName = faker.name().firstName();\\n            String nickName = faker.name().username();\\n            String lastName = faker.name().lastName();\\n            int age = faker.number().numberBetween(18, 90);\\n//            ArrayList<String> emails = new ArrayList<String>();\\n//            int nEmails = 3;\\n//            for(int k = 0; k < nEmails; k++){\\n//                emails.add(faker.internet().safeEmailAddress());\\n//            }\\n            String emails = faker.internet().safeEmailAddress();\\n            String areaCode = String.valueOf(faker.number().numberBetween(200, 500));\\n            String countryCode = String.valueOf(faker.number().numberBetween(80, 85));\\n            String prefix = String.valueOf(faker.number().numberBetween(400, 600));\\n            String number = String.valueOf(faker.number().numberBetween(1234, 6789));\\n\\n            GenericRecord phoneNumber = new GenericData.Record(schema.getField(\\"phoneNumber\\").schema());\\n            phoneNumber.put(\\"areaCode\\", areaCode);\\n            phoneNumber.put(\\"countryCode\\", countryCode);\\n            phoneNumber.put(\\"prefix\\", prefix);\\n            phoneNumber.put(\\"number\\", number);\\n\\n            StatusEnum status = StatusEnum.getRandomStatus();\\n\\n            GenericRecord personInfo = new GenericData.Record(schema);\\n            personInfo.put(\\"id\\", id);\\n            personInfo.put(\\"firstName\\", firstName);\\n            personInfo.put(\\"nickName\\", nickName);\\n            personInfo.put(\\"lastName\\", lastName);\\n            personInfo.put(\\"age\\", age);\\n            personInfo.put(\\"emails\\", emails);\\n            personInfo.put(\\"phoneNumber\\", phoneNumber);\\n            personInfo.put(\\"status\\", status.toString());\\n\\n            ProducerRecord<String, GenericRecord> data = new ProducerRecord<String, GenericRecord>(TOPIC, String.format(\\"%s %s %s\\", firstName, lastName, nickName), personInfo);\\n            producer.send(data);\\n            System.out.println(\\"Send successfully!!!\\");\\n            try {\\n                Thread.sleep(2000);\\n            }catch (Exception e){\\n                e.printStackTrace();\\n            }\\n        }\\n    }\\n\\n    public static void main(String[] args) {\\n        try {\\n            runProducer();\\n        }catch (Exception e){\\n            e.printStackTrace();\\n        }\\n    }\\n}\\n```\\n\u1ede tr\xean, m\u1ed7i 2 gi\xe2y ta s\u1ebd \u0111\u1ea9y 1 message l\xean Kafka, \u0111\u1ea9y t\u1ed5ng c\u1ed9ng 1000 message.\\n\\n### 4. Submit job Spark\\n#### 4.1. C\u1ea5u h\xecnh Postgres\\nTr\u01b0\u1edbc khi c\xf3 th\u1ec3 ch\u1ea1y job, ta c\u1ea7n c\u1ea5u h\xecnh Postgres v\u1edbi c\xe1c b\u1ea3ng sau\\n* B\u1ea3ng c\u1ea5u h\xecnh app Spark ch\u1ea1y\\n```sql\\nCREATE TABLE spark_launcher_config (\\n    id serial primary  key,\\n    \\"desc\\" varchar(1000) NULL,\\n    app_name varchar(255) NULL,\\n    properties text,\\n    created timestamp without time zone DEFAULT (now() at time zone \'Asia/Ho_Chi_Minh\'),\\n    modified timestamp without time zone DEFAULT (now() at time zone \'Asia/Ho_Chi_Minh\')\\n)\\n\\nINSERT INTO public.spark_launcher_config\\n    (id, \\"desc\\", app_name, properties, created, modified)\\n    VALUES(2, \'kafka_ingest\', \'ingest_avro_from_kafka\', \'{\\n    \\"appname\\": \\"ingest_avro_from_kafka\\",\\n    \\"master\\": \\"spark://spark-master:7077\\",\\n    \\"duration\\": \\"10\\",\\n    \\"groupId\\": \\"ingest_avro_from_kafka\\",\\n    \\"zookeeper.hosts\\": \\"zookeeper:2181\\",\\n    \\"checkpoint\\": \\"./spark_checkpoint/ingest_avro_from_kafka\\",\\n    \\"zookeeper.timeout\\": \\"40000\\",\\n    \\"spark.sql.shuffle.partitions\\": \\"10\\",\\n    \\"spark.sql.sources.partitionOverwriteMode\\": \\"dynamic\\",\\n    \\"spark.sql.hive.verifyPartitionPath\\": \\"true\\",\\n    \\"spark.streaming.kafka.maxRatePerPartition\\": 10000,\\n    \\"_kafka_.bootstrap.servers\\": \\"kafka:9092\\",\\n    \\"_kafka_.group.id\\": \\"ingest_avro_from_kafka\\",\\n    \\"_kafka_.auto.offset.reset\\": \\"earliest\\",\\n    \\"_kafka_.max.poll.interval.ms\\": 5000000,\\n    \\"_kafka_.max.poll.records\\": 10000,\\n    \\"_kafka_.schema.registry.url\\": \\"http://schema-registry:8081\\",\\n    \\"_kafka_.auto.commit\\": \\"false\\",\\n    \\"_kafka_.session.timeout.ms\\": \\"50000\\",\\n    \\"_kafka_.heartbeat.interval.ms\\": \\"25000\\",\\n    \\"_kafka_.request.timeout.ms\\": \\"50000\\"\\n    }\', \'2022-04-12 09:35:27.511\', \'2022-04-12 09:35:27.511\');\\n```\\n* B\u1ea3ng c\u1ea5u h\xecnh ti\xeau th\u1ee5 topic\\n```sql\\nCREATE TABLE spark_ingest_config (\\n    id serial primary key,\\n    app_name varchar(255) not null unique,\\n    type varchar(255)  NULL,\\n    \\"order\\" int NULL,\\n    topic varchar(255) not null unique,\\n    status int not null DEFAULT 0,\\n    fields text,\\n    temp_view_first varchar(255)  NULL,\\n    sql_parser text,\\n    prd_id varchar(255)  NULL,\\n    keys varchar(255)  NULL,\\n    path_hdfs varchar(255) NOT NULL,\\n    table_dest varchar(255) NOT NULL,\\n    impala_driver varchar(255) null DEFAULT \'\',\\n    impala_url varchar(255) null DEFAULT \'\',\\n    kafka_msg_type kkmt DEFAULT \'avro_flat\',\\n    json_schema text,\\n    repartition_des int not null DEFAULT 1,\\n    msg_type mst DEFAULT \'NOT_DEFINE\',\\n    created timestamp without time zone DEFAULT (now() at time zone \'Asia/Ho_Chi_Minh\'),\\n    modified timestamp without time zone DEFAULT (now() at time zone \'Asia/Ho_Chi_Minh\')\\n)\\n\\nINSERT INTO public.spark_ingest_config\\n(id, app_name, \\"type\\", \\"order\\", topic, status, fields, temp_view_first, sql_parser, prd_id, keys, path_hdfs, table_dest, impala_driver, impala_url, kafka_msg_type, json_schema, repartition_des, msg_type, created, modified)\\nVALUES(1, \'ingest_avro_from_kafka\', \'insert\', 0, \'personinformation\', 1, \'firstName,\\nnickName,\\nlastName,\\nage,\\nemails,\\nphoneNumber,\\nstatus\', \'ingest_avro_from_kafka_personinformation\', \'select \\n\\tcast(firstName as STRING) as firstName,\\n\\tcast(nickName as STRING) as nickName,\\n\\tcast(lastName as STRING) as lastName,\\n\\tcast(age as INT) as age,\\n\\tcast(emails as STRING) as emails,\\n\\tcast(concat(phoneNumber.countryCode, \\"-\\", phoneNumber.areaCode, \\"-\\", phoneNumber.prefix, \\"-\\", phoneNumber.number) as STRING) as phoneNumber,\\n\\tcast(status as STRING) as status\\nfrom ingest_avro_from_kafka_personinformation\', \'\', \'\', \'\', \'personinformation\', \'\', \'\', \'avro_flat\'::public.\\"kkmt\\", \'\', 1, \'NOT_DEFINE\'::public.\\"mst\\", \'2022-04-06 19:59:41.745\', \'2022-04-06 19:59:41.745\');\\n```\\n* B\u1ea3ng l\u01b0u d\u1eef li\u1ec7u streaming\\n```sql\\ncreate table personinformation (\\n\\tfirstName varchar(250) not null,\\n\\tnickName varchar(250) not null,\\n\\tlastName varchar(250) not null,\\n\\tage integer not null,\\n\\temails varchar(250) not null,\\n\\tphoneNumber varchar(250) not null,\\n\\tstatus varchar(10) not null\\n);\\n```\\n#### 4.2. C\u1ea5u h\xecnh Spark\\nCode Spark Streaming \u0111\u1ea7y \u0111\u1ee7 b\u1ea1n c\xf3 th\u1ec3 t\xecm th\u1ea5y **[t\u1ea1i \u0111\xe2y](https://github.com/lam1051999/spark_kafka_docker/tree/main/spark_ex)**. C\xe1c b\u1ea1n compile project b\u1eb1ng vi\u1ec7c ch\u1ea1y\\n```bash\\nsh run.sh\\n```\\nKhi m\u1ecdi container \u0111\xe3 ch\u1ea1y \u1ed5n \u0111\u1ecbnh, Kafka \u0111\xe3 c\xf3 d\u1eef li\u1ec7u, ta truy c\u1eadp v\xe0o shell c\u1ee7a container Spark master\\n```bash\\ndocker exec -it spark-master bash\\n```\\nSau khi \u0111\xe3 v\xe0o shell, b\u1ea1n ti\u1ebfp t\u1ee5c ch\u1ea1y l\u1ec7nh d\u01b0\u1edbi \u0111\xe2y \u0111\u1ec3 submit job Spark\\n```bash\\n$SPARK_HOME/bin/spark-submit --jars $(echo /execution_files/dependency/*.jar | tr \' \' \',\') --class com.tranlam.App /execution_files/spark_ex-1.0-SNAPSHOT.jar --app-name ingest_avro_from_kafka --jdbc-url \\"jdbc:postgresql://db:5432/postgres?user=postgres&password=postgres\\"\\n```\\nNh\u01b0 v\u1eady l\xe0 \u0111\xe3 c\xf3 1 job Spark ti\xeau th\u1ee5 d\u1eef li\u1ec7u Kafka r\u1ed3i. Sau \u0111\xf3 b\u1ea1n truy c\u1eadp **[http://localhost:4040/streaming](http://localhost:4040/streaming)** \u0111\u1ec3 xem c\xe1c batch \u0111ang ch\u1ea1y\\n\\n![Architecture](./images/spark-ui.PNG)\\n\\nV\xe0o Postgres query b\u1ea3ng ```personinformation``` ta th\u1ea5y c\xf3 d\u1eef li\u1ec7u nh\u01b0 mong mu\u1ed1n\\n\\n![Postgres](./images/postgres.PNG)\\n\\nTr\xean \u0111\xe2y l\xe0 t\u1ea5t c\u1ea3 n\u1ed9i dung \u0111\u1ec3 d\u1ef1ng m\u1ed9t lu\u1ed3ng streaming c\u01a1 b\u1ea3n t\u1eeb Kafka. C\xf2n m\u1ed9t \u0111i\u1ec1u l\u01b0u \xfd n\u1eefa l\xe0 thay v\xec b\u1ea1n commit offset c\u1ee7a c\xe1c l\u1ea7n ti\xeau th\u1ee5 l\xean 1 topic c\u1ee7a Kafka nh\u01b0 trong code Spark, b\u1ea1n c\xf3 th\u1ec3 commit n\xf3 m\u1ed9t c\xe1ch th\u1ee7 c\xf4ng v\xe0o m\u1ed9t \u0111\u01b0\u1eddng d\u1eabn \u1edf Zookeeper \u0111\u1ec3 ch\u1ee7 \u0111\u1ed9ng h\u01a1n trong vi\u1ec7c ki\u1ec3m so\xe1t.\\n\\nCode c\u1ee7a c\u1ea3 b\xe0i vi\u1ebft b\u1ea1n \u0111\u1ecdc c\xf3 th\u1ec3 t\xecm th\u1ea5y \u1edf \u0111\xe2y: **[https://github.com/lam1051999/spark_kafka_docker](https://github.com/lam1051999/spark_kafka_docker)**"},{"id":"spark-cluster-docker","metadata":{"permalink":"/blogs/blog/spark-cluster-docker","editUrl":"https://github.com/lam1051999/blogs/edit/main/blog/2022-01-01-spark-cluster-docker/index.md","source":"@site/blog/2022-01-01-spark-cluster-docker/index.md","title":"T\u1ea1o 1 Standalone Spark Cluster v\u1edbi Docker","description":"Cluster Overview","date":"2022-01-01T00:00:00.000Z","formattedDate":"January 1, 2022","tags":[{"label":"Bigdata","permalink":"/blogs/blog/tags/bigdata"},{"label":"Spark","permalink":"/blogs/blog/tags/spark"},{"label":"Apache","permalink":"/blogs/blog/tags/apache"},{"label":"Docker","permalink":"/blogs/blog/tags/docker"}],"readingTime":7.24,"truncated":true,"authors":[{"name":"Tr\u1ea7n L\xe2m","title":"Data Engineer","url":"https://github.com/lam1051999","imageURL":"https://github.com/lam1051999.png","key":"tranlam"}],"frontMatter":{"slug":"spark-cluster-docker","title":"T\u1ea1o 1 Standalone Spark Cluster v\u1edbi Docker","authors":"tranlam","tags":["Bigdata","Spark","Apache","Docker"],"image":"./images/cluster-overview.PNG"},"prevItem":{"title":"T\u1ea1o lu\u1ed3ng streaming d\u1eef li\u1ec7u v\u1edbi Spark Streaming, Kafka, Docker","permalink":"/blogs/blog/spark-kafka-docker"},"nextItem":{"title":"M\u1ed9t s\u1ed1 c\xe2u h\u1ecfi ph\u1ecfng v\u1ea5n AI/ML","permalink":"/blogs/blog/ai-interview-questions"}},"content":"![Cluster Overview](./images/cluster-overview.PNG)\\n\\nTh\u1eddi gian v\u1eeba qua, m\xecnh \u0111\xe3 d\xe0nh nhi\u1ec1u th\u1eddi gian t\u1ef1 h\u1ecdc v\u1ec1 c\xe1ch x\xe2y d\u1ef1ng c\xe1c cluster Hadoop, Spark, t\xedch h\u1ee3p Hive v\xe0 m\u1ed9t s\u1ed1 th\u1ee9 n\u1eefa. B\xe0i vi\u1ebft n\xe0y s\u1ebd vi\u1ebft v\u1ec1 c\xe1ch b\u1ea1n c\xf3 th\u1ec3 x\xe2y d\u1ef1ng m\u1ed9t Spark cluster cho vi\u1ec7c x\u1eed l\xfd d\u1eef li\u1ec7u b\u1eb1ng Docker, bao g\u1ed3m 1 master node v\xe0 2 worker node, lo\u1ea1i cluster l\xe0 standalone cluster (c\xf3 th\u1ec3 c\xe1c b\xe0i vi\u1ebft s\u1eafp t\u1edbi m\xecnh s\u1ebd l\xe0m v\u1ec1 Hadoop cluster v\xe0 t\xedch h\u1ee3p resource manager l\xe0 Yarn). C\xf9ng \u0111i v\xe0o b\xe0i vi\u1ebft n\xe0o.\\n\\n\x3c!--truncate--\x3e\\n\\n### 1. T\u1ed5ng quan v\u1ec1 c\u1ea5u tr\xfac v\xe0 c\xe1ch ho\u1ea1t \u0111\u1ed9ng c\u1ee7a m\u1ed9t Spark cluster\\n\\nSpark l\xe0 c\xf4ng c\u1ee5 x\u1eed l\xfd d\u1eef li\u1ec7u nhanh, m\u1ea1nh m\u1ebd cho ph\xe9p b\u1ea1n x\u1eed l\xfd d\u1eef gi\u1ea3i quy\u1ebft v\u1ea5n \u0111\u1ec1 d\u1eef li\u1ec7u l\u1edbn \u0111\u1ed1i v\u1edbi c\u1ea3 d\u1eef li\u1ec7u c\xf3 c\u1ea5u tr\xfac, b\xe1n c\u1ea5u tr\xfac v\xe0 kh\xf4ng c\xf3 c\u1ea5u tr\xfac. N\xf3 cung c\u1ea5p t\xednh linh ho\u1ea1t v\xe0 kh\u1ea3 n\u0103ng m\u1edf r\u1ed9ng, \u0111\u01b0\u1ee3c t\u1ea1o ra \u0111\u1ec3 c\u1ea3i thi\u1ec7n hi\u1ec7u n\u0103ng c\u1ee7a MapReduce nh\u01b0ng \u1edf m\u1ed9t t\u1ed1c \u0111\u1ed9 cao h\u01a1n nhi\u1ec1u: 100 l\u1ea7n nhanh h\u01a1n Hadoop khi d\u1eef li\u1ec7u \u0111\u01b0\u1ee3c l\u01b0u trong b\u1ed9 nh\u1edb v\xe0 10 l\u1ea7n khi truy c\u1eadp \u1ed5 \u0111\u0129a. N\xf3 \u0111\u01b0\u1ee3c thi\u1ebft k\u1ebf cho c\xe1c hi\u1ec7u su\u1ea5t nhanh v\xe0 s\u1eed d\u1ee5ng RAM \u0111\u1ec3 caching v\xe0 x\u1eed l\xfd d\u1eef li\u1ec7u. Spark kh\xf4ng c\xf3 m\u1ed9t file system ri\xeang, nh\u01b0ng n\xf3 c\xf3 th\u1ec3 t\u01b0\u01a1ng t\xe1c v\u1edbi nhi\u1ec1u lo\u1ea1i h\u1ec7 th\u1ed1ng l\u01b0u tr\u1eef, c\xf3 th\u1ec3 s\u1eed d\u1ee5ng t\xedch h\u1ee3p v\u1edbi Hadoop. D\u01b0\u1edbi \u0111\xe2y l\xe0 t\u1ed5ng quan c\u1ea5u tr\xfac c\u1ee7a m\u1ed9t \u1ee9ng d\u1ee5ng Spark.\\n\\n![Cluster Overview](./images/cluster-overview.PNG)\\n\\nC\xe1c \u1ee9ng d\u1ee5ng Spark sinh ra m\u1ed9t ch\u01b0\u01a1ng tr\xecnh driver \u1edf master node, v\xe0 t\u1ea1o ra 1 SparkContext. \u0110\u1ec3 ch\u1ea1y tr\xean 1 cluster, SparkContext c\u1ea7n k\u1ebft n\u1ed1i \u0111\u1ebfn m\u1ed9t trong nhi\u1ec1u lo\u1ea1i cluster managers (standalone cluster, Mesos ho\u1eb7c YARN). M\u1ed9t khi \u0111\u01b0\u1ee3c k\u1ebft n\u1ed1i, Spark c\xf3 \u0111\u01b0\u1ee3c k\u1ebft n\u1ed1i t\u1edbi c\xe1c worker nodes \u1edf cluster. Nh\u1eefng node \u0111\xf3 th\u1ef1c hi\u1ec7n ti\u1ebfn tr\xecnh l\xe0m c\xe1c c\xf4ng vi\u1ec7c t\xednh to\xe1n v\xe0 l\u01b0u tr\u1eef d\u1eef li\u1ec7u cho \u1ee9ng d\u1ee5ng. Sau \u0111\xf3, n\xf3 g\u1eedi c\xe1c code \u0111\u1ebfn c\xe1c executor. Cu\u1ed1i c\xf9ng, SparkContext s\u1ebd g\u1eedi c\xe1c tasks cho c\xe1c executors \u0111\u1ec3 ch\u1ea1y.\\n\\nM\u1ed7i \u1ee9ng d\u1ee5ng \u0111\u1ec1u c\xf3 c\xe1c ti\u1ebfn tr\xecnh executors ri\xeang c\u1ee7a n\xf3, n\u1eb1m \u1edf \u0111\xf3 su\u1ed1t th\u1eddi gian \u1ee9ng d\u1ee5ng ch\u1ea1y v\xe0 ch\u1ea1y c\xe1c task \u1edf nhi\u1ec1u threads, c\xf4 l\u1eadp \u1ee9ng d\u1ee5ng n\xe0y v\u1edbi \u1ee9ng d\u1ee5ng kh\xe1c. \u0110i\u1ec1u \u0111\xf3 c\u0169ng c\xf3 ngh\u0129a l\xe0 d\u1eef li\u1ec7u kh\xf4ng th\u1ec3 \u0111\u01b0\u1ee3c chia s\u1ebb qua l\u1ea1i gi\u1eefa c\xe1c \u1ee9ng d\u1ee5ng n\u1ebfu m\xe0 kh\xf4ng ghi d\u1eef li\u1ec7u ra m\u1ed9t h\u1ec7 th\u1ed1ng l\u01b0u tr\u1eef ngo\xe0i.\\n\\nV\xec driver \u0111\u1eb7t l\u1ecbch tr\xecnh cho c\xe1c task tr\xean cluster, n\xf3 c\u1ea7n ph\u1ea3i ch\u1ea1y g\u1ea7n v\u1edbi c\xe1c worker node, s\u1ebd l\xe0 l\xfd t\u01b0\u1edfng n\u1ebfu n\xf3 ch\u1ea1y c\xf9ng m\u1ed9t m\u1ea1ng LAN. N\u1ebfu b\u1ea1n mu\u1ed1n g\u1eedi c\xe1c request \u0111\u1ebfn cluster t\u1eeb xa, n\xf3 s\u1ebd t\u1ed1t h\u01a1n n\u1ebfu nh\u01b0 b\u1ea1n t\u1ea1o 1 RPC, ch\u1ea1y driver v\xe0 submit c\xe1c ho\u1ea1t \u0111\u1ed9ng t\u1eeb ph\u1ea1m vi g\u1ea7n h\u01a1n l\xe0 ch\u1ea1y driver \u1edf kho\u1ea3ng c\xe1ch xa c\xe1c node worker.\\n\\n### 2. T\u1ea1o m\u1ed9t base image\\n\\nB\u1edfi v\xec c\xe1c image c\xe1c node trong 1 cluster c\u1ea7n c\xe0i \u0111\u1eb7t c\xe1c ph\u1ea7n m\u1ec1m kh\xe1 gi\u1ed1ng nhau n\xean ch\xfang ta s\u1ebd x\xe2y d\u1ef1ng m\u1ed9t base image cho t\u1ed5ng th\u1ec3 cluster tr\u01b0\u1edbc, sau \u0111\xf3 th\xec c\xe1c image sau s\u1ebd import t\u1eeb image n\xe0y v\xe0 th\xeam v\xe0o \u0111\xf3 l\xe0 c\xe1c dependencies c\u1ea7n thi\u1ebft kh\xe1c.\\n\\n```bash\\nARG debian_buster_image_tag=8-jre-slim\\nFROM openjdk:${debian_buster_image_tag}\\n\\nARG shared_workspace=/opt/workspace\\n\\nRUN mkdir -p ${shared_workspace} && \\\\\\n    apt-get update -y && \\\\\\n    apt-get install -y python3 && \\\\\\n    ln -s /usr/bin/python3 /usr/bin/python && \\\\\\n    rm -rf /var/lib/apt/lists/*\\n\\nENV SHARED_WORKSPACE=${shared_workspace}\\n\\nVOLUME ${shared_workspace}\\n```\\n\\n\u1ede \u0111\xe2y, v\xec Spark y\xeau c\u1ea7u java phi\xean b\u1ea3n 8 ho\u1eb7c 11, n\xean ch\xfang ta s\u1ebd t\u1ea1o m\u1ed9t image ch\u1ea1y jdk 8, ch\xfang ta s\u1ebd l\u1ea5y bi\u1ebfn `shared_workspace` l\xe0 \u0111\u01b0\u1eddng d\u1eabn m\xf4i tr\u01b0\u1eddng l\xe0m vi\u1ec7c c\u1ee7a Jupyterlab (\u1edf ph\u1ea7n sau). Th\xeam v\xe0o \u0111\xf3, ch\xfang ta s\u1ebd c\xe0i `python3` cho vi\u1ec7c ch\u1ea1y Jupyterlab.\\n\\n### 3. T\u1ea1o m\u1ed9t spark base image\\n\\nTa \u0111\u1ebfn v\u1edbi t\u1ea1o m\u1ed9t spark base image v\u1edbi c\xe1c package chung cho master node v\xe0 workder node.\\n\\n```bash\\nFROM spark-cluster-base\\n\\nARG spark_version=3.2.0\\nARG hadoop_version=3.2\\n\\nRUN apt-get update -y && \\\\\\n    apt-get install -y curl && \\\\\\n    curl https://archive.apache.org/dist/spark/spark-${spark_version}/spark-${spark_version}-bin-hadoop${hadoop_version}.tgz -o spark.tgz && \\\\\\n    tar -xf spark.tgz && \\\\\\n    mv spark-${spark_version}-bin-hadoop${hadoop_version} /usr/bin/ && \\\\\\n    mkdir /usr/bin/spark-${spark_version}-bin-hadoop${hadoop_version}/logs && \\\\\\n    rm spark.tgz\\n\\nENV SPARK_HOME /usr/bin/spark-${spark_version}-bin-hadoop${hadoop_version}\\nENV SPARK_MASTER_HOST spark-master\\nENV SPARK_MASTER_PORT 7077\\nENV PYSPARK_PYTHON python3\\n\\nWORKDIR ${SPARK_HOME}\\n```\\n\\n\u0110\u1ea7u ti\xean, ta s\u1ebd import image t\u1eeb base image b\xean tr\xean (l\xe0 `spark-cluster-base`, c\xe1i t\xean n\xe0y s\u1ebd \u0111\u01b0\u1ee3c g\xe1n v\xe0o th\u1eddi gian build image), li\u1ec7t k\xea c\xe1c phi\xean b\u1ea3n Spark v\xe0 Hadoop t\u01b0\u01a1ng th\xedch v\u1edbi nhau. C\xe1c b\u1ea1n c\xf3 th\u1ec3 ki\u1ec3m tra t\u01b0\u01a1ng th\xedch phi\xean b\u1ea3n tr\xean trang ch\u1ee7 c\u1ee7a Spark.\\n\\n![Spark Version](./images/spark-version.PNG)\\n\\nSau \u0111\xf3 s\u1ebd l\xe0 t\u1ea3i v\xe0 gi\u1ea3i n\xe9n Spark, c\xf9ng v\u1edbi \u0111\xf3 l\xe0 t\u1ea1o c\xe1c bi\u1ebfn m\xf4i tr\u01b0\u1eddng c\u1ea7n thi\u1ebft \u0111\u1ec3 h\u1ed7 tr\u1ee3 ch\u1ea1y command line v\u1ec1 sau. \u1ede \u0111\xe2y, `SPARK_MASTER_HOST` v\xe0 `SPARK_MASTER_PORT` \u0111\u01b0\u1ee3c c\xe1c worker node d\xf9ng \u0111\u1ec3 register v\u1edbi master node \u0111\u1ecba ch\u1ec9 t\u01b0\u01a1ng \u1ee9ng.\\n\\n### 4. T\u1ea1o m\u1ed9t master node image\\n\\nC\xf3 m\u1ed9t spark base image, ta b\u1eaft \u0111\u1ea7u t\u1ea1o master node b\u1eb1ng vi\u1ec7c import base image \u0111\xf3 v\xe0 th\xeam c\xe1c bi\u1ebfn ph\xf9 h\u1ee3p v\u1edbi master node nh\u01b0 l\xe0 port c\u1ee7a giao di\u1ec7n web ui \u0111\u1ec3 l\xe1t n\u1eefa c\xf3 th\u1ec3 t\u01b0\u01a1ng t\xe1c v\u1edbi spark tr\xean giao di\u1ec7n.\\n\\n```bash\\nFROM spark-base\\n\\nARG spark_master_web_ui=8080\\n\\nEXPOSE ${spark_master_web_ui} ${SPARK_MASTER_PORT}\\nCMD bin/spark-class org.apache.spark.deploy.master.Master >> logs/spark-master.out\\n```\\n\\nCommand tr\xean l\xe0 \u0111\u1ec3 ch\u1ea1y master node.\\n\\n### 5. T\u1ea1o m\u1ed9t worker node image\\n\\nTi\u1ebfp \u0111\u1ebfn l\xe0 t\u1ea1o worker node\\n\\n```bash\\nFROM spark-base\\n\\nARG spark_worker_web_ui=8081\\n\\nEXPOSE ${spark_worker_web_ui}\\nCMD bin/spark-class org.apache.spark.deploy.worker.Worker spark://${SPARK_MASTER_HOST}:${SPARK_MASTER_PORT} >> logs/spark-worker.out\\n```\\n\\nCommand tr\xean l\xe0 \u0111\u1ec3 ch\u1ea1y worker node v\xe0 tr\u1ecf t\u1edbi \u0111\u1ecba ch\u1ec9 c\u1ee7a master node \u0111\u1ec3 register.\\n\\n### 6. T\u1ea1o m\u1ed9t Jupyterlab image cho vi\u1ec7c ki\u1ec3m th\u1eed\\n\\nCu\u1ed1i c\xf9ng, \u0111\u1ec3 ki\u1ec3m tra ho\u1ea1t \u0111\u1ed9ng c\u1ee7a spark cluster, ta s\u1ebd c\xe1i Jupyterlab v\xe0 d\xf9ng pyspark \u0111\u1ec3 ch\u1ea1y code.\\n\\n```bash\\nFROM spark-cluster-base\\n\\nARG spark_version=3.2.0\\nARG jupyterlab_version=3.2.5\\n\\nRUN apt-get update -y && \\\\\\n    apt-get install -y python3-pip && \\\\\\n    pip3 install wget pyspark==${spark_version} jupyterlab==${jupyterlab_version}\\n\\nEXPOSE 8888\\nWORKDIR ${SHARED_WORKSPACE}\\nCMD jupyter lab --ip=0.0.0.0 --port=8888 --no-browser --allow-root --NotebookApp.token=\\n```\\n\\nC\xf9ng v\u1edbi \u0111\xf3 l\xe0 li\u1ec7t k\xea command ch\u1ea1y Jupyter \u1edf port 8888.\\n\\n### 7. K\u1ebft h\u1ee3p c\xe1c image v\xe0 t\u1ea1o c\xe1c container\\n\\nSau khi t\u1ea1o \u0111\u1ea7y \u0111\u1ee7 c\xe1c Dockerfile, ta ti\u1ebfn h\xe0nh build c\xe1c image ph\xf9 h\u1ee3p.\\n\\n![Folder Structure](./images/folder-structure.PNG)\\n\\n**Li\u1ec7t k\xea c\xe1c phi\xean b\u1ea3n**\\n\\n```bash\\nSPARK_VERSION=\\"3.2.0\\"\\nHADOOP_VERSION=\\"3.2\\"\\nJUPYTERLAB_VERSION=\\"3.2.5\\"\\n```\\n\\n**Build base image**\\n\\n```bash\\ndocker build \\\\\\n  --platform=linux/arm64 \\\\\\n  -f cluster_base/Dockerfile \\\\\\n  -t spark-cluster-base .\\n```\\n\\n**Build spark base image**\\n\\n```bash\\ndocker build \\\\\\n  --build-arg spark_version=\\"${SPARK_VERSION}\\" \\\\\\n  --build-arg hadoop_version=\\"${HADOOP_VERSION}\\" \\\\\\n  -f spark_base/Dockerfile \\\\\\n  -t spark-base .\\n```\\n\\n**Build master node image**\\n\\n```bash\\ndocker build \\\\\\n  -f master_node/Dockerfile \\\\\\n  -t spark-master .\\n```\\n\\n**Build worker node image**\\n\\n```bash\\ndocker build \\\\\\n  -f worker_node/Dockerfile \\\\\\n  -t spark-worker .\\n```\\n\\n**Build Jupyterlab image**\\n\\n```bash\\ndocker build \\\\\\n  --build-arg spark_version=\\"${SPARK_VERSION}\\" \\\\\\n  --build-arg jupyterlab_version=\\"${JUPYTERLAB_VERSION}\\" \\\\\\n  -f jupyter_lab/Dockerfile \\\\\\n  -t spark-jupyterlab .\\n```\\n\\nCu\u1ed1i c\xf9ng, \u0111\u1ec3 t\u1ea1o c\xe1c container c\u1ea7n thi\u1ebft, ta t\u1ea1o m\u1ed9t file `docker-compose.yml` v\u1edbi n\u1ed9i dung nh\u01b0 sau\\n\\n```bash\\nversion: \\"3.6\\"\\nvolumes:\\n  shared-workspace:\\n    name: \\"hadoop-distributed-file-system\\"\\n    driver: local\\nservices:\\n  jupyterlab:\\n    image: spark-jupyterlab\\n    container_name: jupyterlab\\n    ports:\\n      - 8888:8888\\n    volumes:\\n      - shared-workspace:/opt/workspace\\n  spark-master:\\n    image: spark-master\\n    container_name: spark-master\\n    ports:\\n      - 8080:8080\\n      - 7077:7077\\n    volumes:\\n      - shared-workspace:/opt/workspace\\n  spark-worker-1:\\n    image: spark-worker\\n    container_name: spark-worker-1\\n    environment:\\n      - SPARK_WORKER_CORES=1\\n      - SPARK_WORKER_MEMORY=512m\\n    ports:\\n      - 8081:8081\\n    volumes:\\n      - shared-workspace:/opt/workspace\\n    depends_on:\\n      - spark-master\\n  spark-worker-2:\\n    image: spark-worker\\n    container_name: spark-worker-2\\n    environment:\\n      - SPARK_WORKER_CORES=1\\n      - SPARK_WORKER_MEMORY=512m\\n    ports:\\n      - 8082:8081\\n    volumes:\\n      - shared-workspace:/opt/workspace\\n    depends_on:\\n      - spark-master\\n```\\n\\nBao g\u1ed3m volume m\xe0 ta s\u1ebd l\u01b0u d\u1eef li\u1ec7u \u0111\u1ec3 khi xo\xe1 c\xe1c container kh\xf4ng b\u1ecb m\u1ea5t d\u1eef li\u1ec7u, c\xf9ng v\u1edbi \u0111\xf3 l\xe0 c\xe1c container (service) c\u1ea7n thi\u1ebft. \u1ede m\u1ed7i container c\xe1c bi\u1ebfn m\xf4i tr\u01b0\u1eddng ph\xf9 h\u1ee3p \u0111\u01b0\u1ee3c th\xeam v\xe0o, c\xe1c port \u0111\u1ec3 map ra m\xe1y host, v\xe0 th\u1ee9 t\u1ef1 ch\u1ea1y c\xe1c container. \u1ede \u0111\xe2y, master node ph\u1ea3i ch\u1ea1y l\xean tr\u01b0\u1edbc \u0111\u1ec3 l\u1ea5y hostname n\xean worker node s\u1ebd depend v\xe0o master node container. Sau \u0111\xf3, ta ch\u1ea1y `docker-compose up`, nh\u01b0 th\u1ebf l\xe0 \u0111\xe3 kh\u1edfi ch\u1ea1y h\u1ebft c\xe1c container c\u1ea7n thi\u1ebft r\u1ed3i.\\n\\n### 8. Ch\u1ea1y Jupyterlab \u0111\u1ec3 ki\u1ec3m tra ho\u1ea1t \u0111\u1ed9ng c\u1ee7a cluster\\n\\nSau khi \u0111\xe3 ch\u1ea1y `docker-compose up` v\xe0 th\u1ea5y \u1edf terminal c\xe1c logs th\u1ec3 hi\u1ec7n \u0111\xe3 kh\u1edfi \u0111\u1ed9ng th\xe0nh c\xf4ng master node v\xe0 worker node, c\xf9ng v\u1edbi tr\u1ea1ng th\xe1i register th\xe0nh c\xf4ng c\u1ee7a c\xe1c node, ta v\xe0o `localhost:8080` \u0111\u1ec3 xem spark ui.\\n\\n![Spark UI](./images/spark-ui.PNG)\\n\\n\u1ede giao di\u1ec7n, ta th\u1ea5y \u0111\u01b0\u1ee3c c\xf3 2 worker \u0111ang ho\u1ea1t \u0111\u1ed9ng nh\u01b0 v\xf9ng khoanh \u0111\u1ecf.\\n\\nV\xe0o `localhost:8888` \u0111\u1ec3 v\xe0o giao di\u1ec7n Jupyterlab, th\u1ef1c hi\u1ec7n code sau\\n\\n![Jupyter Lab](./images/jupyterlab.PNG)\\n\\nCh\u1ea1y code, r\u1ed3i quay l\u1ea1i spark ui, ta th\u1ea5y \u0111\u01b0\u1ee3c \u1ee9ng d\u1ee5ng c\u1ee7a ta \u0111ang ch\u1ea1y\\n\\n![Application](./images/application.PNG)\\n\\n\u1ea4n v\xe0o \u1ee9ng d\u1ee5ng, ta th\u1ea5y c\xe1c worker c\u1ee7a ta \u0111ang x\u1eed l\xfd job\\n\\n![Application Workers](./images/application-workers.PNG)"},{"id":"ai-interview-questions","metadata":{"permalink":"/blogs/blog/ai-interview-questions","editUrl":"https://github.com/lam1051999/blogs/edit/main/blog/2021-07-24-ai-interview-questions/index.md","source":"@site/blog/2021-07-24-ai-interview-questions/index.md","title":"M\u1ed9t s\u1ed1 c\xe2u h\u1ecfi ph\u1ecfng v\u1ea5n AI/ML","description":"Intro","date":"2021-07-24T00:00:00.000Z","formattedDate":"July 24, 2021","tags":[{"label":"AI","permalink":"/blogs/blog/tags/ai"},{"label":"ML","permalink":"/blogs/blog/tags/ml"},{"label":"Machine Learning","permalink":"/blogs/blog/tags/machine-learning"},{"label":"Artificial Intelligence","permalink":"/blogs/blog/tags/artificial-intelligence"}],"readingTime":8.065,"truncated":true,"authors":[{"name":"Tr\u1ea7n L\xe2m","title":"Data Engineer","url":"https://github.com/lam1051999","imageURL":"https://github.com/lam1051999.png","key":"tranlam"}],"frontMatter":{"slug":"ai-interview-questions","title":"M\u1ed9t s\u1ed1 c\xe2u h\u1ecfi ph\u1ecfng v\u1ea5n AI/ML","authors":"tranlam","tags":["AI","ML","Machine Learning","Artificial Intelligence"],"image":"./images/intro.JPEG"},"prevItem":{"title":"T\u1ea1o 1 Standalone Spark Cluster v\u1edbi Docker","permalink":"/blogs/blog/spark-cluster-docker"},"nextItem":{"title":"Receptive field trong th\u1ecb gi\xe1c m\xe1y t\xednh","permalink":"/blogs/blog/receptive-field"}},"content":"![Intro](./images/intro.JPEG)\\n\\nG\u1ea7n \u0111\xe2y, AI/ML l\xe0 m\u1ed9t c\xe1i trend, ng\u01b0\u1eddi ng\u01b0\u1eddi AI, nh\xe0 nh\xe0 AI. Sinh vi\xean \u0111\u1ed5 x\xf4 \u0111i h\u1ecdc AI h\u1ebft, c\xe1c tr\u01b0\u1eddng \u0111\u1ea1i h\u1ecdc c\u0169ng d\u1ea7n m\u1edf c\xe1c m\xf4n v\u1ec1 h\u1ecdc m\xe1y, tr\xed tu\u1ec7 nh\xe2n t\u1ea1o, r\u1ed3i th\u1ecb gi\xe1c m\xe1y t\xednh \u0111\u1ec3 \\"b\u1eaft k\u1ecbp\\". \x3c!--truncate--\x3eD\u01b0\u1edbi \u0111\xe2y, m\xecnh s\u1ebd tr\xecnh b\xe0y v\u1ec1 c\xe1c c\xe2u h\u1ecfi ph\u1ecfng v\u1ea5n c\u01a1 b\u1ea3n, d\xe0nh cho c\xe1c b\u1ea1n mu\u1ed1n t\xecm c\xe1c v\u1ecb tr\xed th\u1ef1c t\u1eadp trong l\u0129nh v\u1ef1c n\xe0y.\\n\\n### 1. Bias, variance\\n**C\xe1c c\xe2u h\u1ecfi m\u1ee5c n\xe0y s\u1ebd xung quanh c\xe1c th\xf4ng s\u1ed1 tr\xean l\xe0 g\xec, n\xf3 cao n\xf3 th\u1ea5p th\xec \u1ea3nh h\u01b0\u1edfng nh\u01b0 n\xe0o, x\u1eed l\xfd th\u1ebf n\xe0o?**\\n- Bias l\xe0 sai s\u1ed1 gi\u1eefa k\u1ebft qu\u1ea3 d\u1ef1 \u0111o\xe1n c\u1ee7a model v\xe0 c\xe1c nh\xe3n th\u1ef1c s\u1ef1 c\u1ee7a ch\xfang ta. Bias th\u1ec3 hi\u1ec7n n\u0103ng l\u1ef1c c\u1ee7a model trong vi\u1ec7c d\u1ef1 \u0111o\xe1n. Bias cao n\xf3i l\xean r\u1eb1ng model c\u1ee7a ch\xfang ta kh\xf4ng quan t\xe2m \u0111\u1ebfn d\u1eef li\u1ec7u, model qu\xe1 \u0111\u01a1n gi\u1ea3n \u0111\u1ec3 m\xe0 c\xf3 th\u1ec3 h\u1ecdc \u0111\u01b0\u1ee3c c\xe1c \u0111\u1eb7c tr\u01b0ng t\u1eeb d\u1eef li\u1ec7u. Bias cao th\u01b0\u1eddng cho k\u1ebft qu\u1ea3 l\u1ed7i cao tr\xean c\u1ea3 t\u1eadp hu\u1ea5n luy\u1ec7n v\xe0 t\u1eadp ki\u1ec3m th\u1eed. Hi\u1ec7n t\u01b0\u1ee3ng n\xe0y g\u1ecdi l\xe0 underfitting.\\n- Variance l\xe0 \u0111\u1ed9 ph\xe2n t\xe1n c\u1ee7a k\u1ebft qu\u1ea3 d\u1ef1 \u0111o\xe1n c\u1ee7a model ch\xfang ta. Variance cao n\xf3i l\xean r\u1eb1ng model c\u1ee7a ch\xfang ta qu\xe1 t\u1eadp trung v\xe0o t\u1eadp d\u1eef li\u1ec7u hu\u1ea5n luy\u1ec7n, c\xf3 th\u1ec3 ph\xe2n lo\u1ea1i c\xe1c \u0111i\u1ec3m d\u1eef li\u1ec7u hu\u1ea5n luy\u1ec7n t\u1ed1t m\xe0 kh\xf4ng t\u1ed5ng qu\xe1t t\u1ed1t, th\xedch \u1ee9ng t\u1ed1t v\u1edbi c\xe1c \u0111i\u1ec3m d\u1eef li\u1ec7u m\u1edbi, model c\u1ee7a ch\xfang ta qu\xe1 ph\u1ee9c t\u1ea1p nh\u01b0ng l\u01b0\u1ee3ng d\u1eef li\u1ec7u c\u1ee7a ch\xfang ta l\u1ea1i kh\xf4ng \u0111\u1ee7 l\u1edbn. Hi\u1ec7n t\u01b0\u1ee3ng n\xe0y g\u1ecdi l\xe0 overfitting.\\n\\nD\u01b0\u1edbi \u0111\xe2y l\xe0 h\xecnh \u1ea3nh minh h\u1ecda cho bias v\xe0 variance\\n![Bias Variance Tradeoff](./images/bias_variance_tradeoff.PNG)\\n\\nG\u1ecdi ground truth (c\xf3 ngh\u0129a l\xe0 gi\xe1 tr\u1ecb nh\xe3n th\u1ef1c s\u1ef1 c\u1ee7a d\u1eef li\u1ec7u \u0111\u1ea7u v\xe0o) l\xe0 \u0111i\u1ec3m m\xe0 n\u1eb1m \u1edf t\xe2m c\xe1c h\xecnh tr\xf2n \u1edf tr\xean, c\xf2n c\xe1c prediction (l\xe0 c\xe1c gi\xe1 tr\u1ecb nh\xe3n d\u1ef1 \u0111o\xe1n c\u1ee7a ta), l\xe0 c\xe1c ch\u1ea5m tr\xf2n m\xe0u xanh n\u01b0\u1edbc bi\u1ec3n. V\u1edbi tr\u01b0\u1eddng h\u1ee3p low bias v\xe0 low variance, c\xe1c \u0111i\u1ec3m nh\xe3n d\u1ef1 \u0111o\xe1n s\u1ebd r\u1ea5t s\xe1t nhau v\xe0 s\xe1t v\u1edbi t\xe2m c\u1ee7a bia tr\xf2n, th\u1ec3 hi\u1ec7n r\u1eb1ng \u0111\u1ed9 ph\xe2n t\xe1n c\xe1c k\u1ebft qu\u1ea3 d\u1ef1 \u0111o\xe1n th\u1ea5p v\xe0 kho\u1ea3ng c\xe1ch gi\u1eefa nh\xe3n d\u1ef1 \u0111o\xe1n v\xe0 nh\xe3n th\u1ef1c t\u1ebf th\u1ea5p, t\u01b0\u1ee3ng t\u1ef1 c\xe1c tr\u01b0\u1eddng h\u1ee3p kh\xe1c.\\n\\nC\xe1c ph\u01b0\u01a1ng ph\xe1p gi\u1ea3m thi\u1ec3u overfitting\\n- Ki\u1ebfm nhi\u1ec1u d\u1eef li\u1ec7u h\u01a1n cho m\xf4 h\xecnh.\\n- C\xe1c k\u1ef9 thu\u1eadt regularization, drop out, early stopping, batch normalization (c\xe1i n\xe0y gi\u1ea3m thi\u1ec3u m\u1ed9t \xedt th\xf4i).\\n- Ch\u1ec9nh s\u1eeda c\xe1c si\xeau tham s\u1ed1 c\u1ee7a m\xf4 h\xecnh \u0111\u1ec3 ki\u1ec3m so\xe1t qu\xe1 tr\xecnh hu\u1ea5n luy\u1ec7n.\\n\\nC\xe1c ph\u01b0\u01a1ng ph\xe1p gi\u1ea3m thi\u1ec3u underfitting\\n- Hu\u1ea5n luy\u1ec7n nhi\u1ec1u epoch h\u01a1n.\\n- X\xe2y m\u1ea1ng to h\u01a1n, t\u0103ng s\u1ed1 \u0111\u1eb7c tr\u01b0ng \u0111\u1ea7u v\xe0o l\xean.\\n- Lo\u1ea1i b\u1ecf c\xe1c \u0111i\u1ec3m d\u1eef li\u1ec7u g\xe2y nhi\u1ec5u.\\n\\n### 2. Batch normalization\\nL\xe0 m\u1ed9t k\u1ef9 thu\u1eadt gi\xfap m\xf4 h\xecnh \u1ed5n \u0111\u1ecbnh h\u01a1n trong qu\xe1 tr\xecnh hu\u1ea5n luy\u1ec7n (\u1edf \u0111\xe2y m\xecnh s\u1ebd kh\xf4ng tr\xecnh b\xe0y v\u1ec1 to\xe1n c\u1ee7a batch normalization). M\u1ed9t s\u1ed1 t\xednh ch\u1ea5t c\u1ee7a batch normalization nh\u01b0 sau\\n- Batchnorm khi\u1ebfn qu\xe1 tr\xecnh hu\u1ea5n luy\u1ec7n \u1ed5n \u0111\u1ecbnh h\u01a1n, m\u1ea1ng h\u1ed9i t\u1ee5 nhanh h\u01a1n.\\n- Batchnorm cho ph\xe9p ta s\u1eed d\u1ee5ng learning rate l\u1edbn h\u01a1n.\\n- Batchnorm khi\u1ebfn vi\u1ec7c kh\u1edfi t\u1ea1o c\xe1c ma tr\u1eadn tr\u1ecdng s\u1ed1 d\u1ec5 d\xe0ng h\u01a1n v\xec n\xf3 gi\xfap gi\u1ea3m thi\u1ec3u \u0111\u1ed9 nh\u1ea1y c\u1ee7a m\xf4 h\xecnh v\u1edbi c\xe1c v\u1ea5n \u0111\u1ec1 gradient vanishing/exploding. T\u1eeb \u0111\xf3, vi\u1ec7c t\u1ea1o d\u1ef1ng m\u1ea1ng c\u1ee7a ch\xfang ta d\u1ec5 th\u1edf h\u01a1n.\\n- Batchnorm cho ta nhi\u1ec1u l\u1ef1a ch\u1ecdn c\xe1c h\xe0m k\xedch ho\u1ea1t, b\u1edfi v\xec m\u1ed9t s\u1ed1 h\xe0m k\xedch ho\u1ea1t c\xf3 \u0111\u1ea1o h\xe0m th\u01b0\u1eddng co v\u1ec1 ${0}$ nhanh trong qu\xe1 tr\xecnh backpropagation nh\u01b0 sigmoid,\u2026 Batchnorm \u0111i\u1ec1u ti\u1ebft d\u1eef li\u1ec7u c\u1ee7a ch\xfang ta v\u1ec1 1 ph\xe2n b\u1ed1 nh\u1ea5t \u0111\u1ecbnh \u0111\u1ec3 trong kho\u1ea3ng gi\xe1 tr\u1ecb \u0111\xf3, \u0111\u1ea1o h\xe0m c\xe1c h\xe0m k\xedch ho\u1ea1t c\xf3 \u0111\u1ed9 l\u1edbn t\u01b0\u01a1ng \u0111\u1ed1i.\\n- Batchnorm cho m\u1ed9t s\u1ed1 hi\u1ec7u \u1ee9ng ph\u1ee5 c\u1ee7a regularization, b\u1edfi v\xec Batchnorm khi\u1ebfn c\xe1c \u0111i\u1ec3m d\u1eef li\u1ec7u c\xf3 k\u1ef3 v\u1ecdng l\xe0 ${0}$, \u0111\u1ed9 l\u1ec7ch chu\u1ea9n nh\u1ecf, \u1edf \u0111\xf3, c\xe1c h\xe0m k\xedch ho\u1ea1t th\u01b0\u1eddng c\xf3 d\u1ea1ng g\u1ea7n v\u1edbi tuy\u1ebfn t\xednh, n\xean m\xf4 h\xecnh c\u1ee7a ta n\xf3 \u0111\u1ee1 \u0111\u1ed9 phi tuy\u1ebfn h\u01a1n.\\n\\n**T\u1ea1i sao Batchnorm gi\xfap thu\u1eadt to\xe1n h\u1ed9i t\u1ee5 nhanh h\u01a1n?**\\n\\n- Batchnorm khi\u1ebfn cho c\xe1c \u0111\u1ea7u v\xe0o tr\u01b0\u1edbc c\xe1c h\xe0m k\xedch ho\u1ea1t c\u1ee7a ch\xfang ta v\u1ec1 kho\u1ea3ng gi\xe1 tr\u1ecb nh\u1ea5t \u0111\u1ecbnh v\xe0 c\xf3 k\u1ef3 v\u1ecdng l\xe0 ${0}$. \u0110\u1ea7u v\xe0o l\xfac \u0111\xf3 kh\xf4ng qu\xe1 to hay c\u0169ng kh\xf4ng qu\xe1 nh\u1ecf, n\xean \u0111\u1ea1o h\xe0m c\u1ee7a h\xe0m k\xedch ho\u1ea1t s\u1ebd kh\xf4ng g\u1ea7n \u0111\u1ebfn ${0}$, do \u0111\xf3 h\u1ed9i t\u1ee5 nhanh h\u01a1n.\\n- Batchnorm khi\u1ebfn cho c\xe1c \u0111\u1ea7u v\xe0o n\u1eb1m trong 1 kho\u1ea3ng gi\xe1 tr\u1ecb nh\u1ecf, khi \u0111\xf3 th\xec h\xe0m m\u1ea5t m\xe1t c\u1ee7a ta c\xf3 \u0111\u1ed3 th\u1ecb tr\xf2n h\u01a1n, do v\u1eady, kho\u1ea3ng c\xe1ch t\u1eeb 1 \u0111i\u1ec3m b\u1ea5t k\u1ef3 tr\xean \u0111\u1ed3 th\u1ecb t\u1edbi m\u1ed9t \u0111i\u1ec3m c\u1ef1c ti\u1ec3u b\u1ea5t k\u1ef3 s\u1ebd ng\u1eafn h\u01a1n, model c\u1ee7a ch\xfang ta s\u1ebd t\xecm \u0111\u01b0\u1ee3c \u0111i\u1ec3m c\u1ef1c ti\u1ec3u nhanh h\u01a1n.\\n\\n**S\u1ef1 kh\xe1c nhau c\u1ee7a train v\xe0 test khi th\u1ef1c hi\u1ec7n Batchnorm?**\\n\\nKhi train, Batchnorm c\xf3 th\u1ec3 \u0111\u01b0\u1ee3c \xe1p d\u1ee5ng tr\xean c\xe1c minibatch, 1 mini-batch c\xf3 N \u0111i\u1ec3m d\u1eef li\u1ec7u. Trong qu\xe1 tr\xecnh train, ta Batchnorm tr\xean $N$ \u0111i\u1ec3m d\u1eef li\u1ec7u \u0111\xf3. Nh\u01b0ng \u1edf test time, ta ch\u1ec9 c\xf3 1 d\u1eef li\u1ec7u 1 l\u1ea7n v\xe0 ph\u1ea3i \u0111\u01b0a d\u1ef1 \u0111o\xe1n v\u1edbi 1 \u0111i\u1ec3m d\u1eef li\u1ec7u \u0111\xf3. C\xf3 1 c\xe1ch l\xe0 ta \u01b0\u1edbc l\u01b0\u1ee3ng $\\\\mu$ v\xe0 $\\\\sigma$ b\u1eb1ng Exponentially Weighted Average \u0111\u1ec3 s\u1eed d\u1ee5ng v\xe0o test time.\\n\\nV\xed d\u1ee5: Trong qu\xe1 tr\xecnh train, t\u1ea1i layer $L$, n\xf3 cho $\\\\mu$ v\xe0 $\\\\sigma$ nh\u1ea5t \u0111\u1ecbnh, ta l\u01b0u n\xf3,\u2026 Khi ho\xe0n t\u1ea5t qu\xe1 tr\xecnh train, m\u1ed7i layer $L$ \u0111\u1ec1u s\u1ed1 c\u1eb7p $\\\\mu$ v\xe0 $\\\\sigma$ b\u1eb1ng s\u1ed1 mini-batch. V\xe0 ta s\u1eed d\u1ee5ng k\u1ef9 thu\u1eadt Exponentially Weighted Average \u0111\u1ec3 t\xednh $\\\\mu$ v\xe0 $\\\\sigma$ cho layer $L$ cho \u0111i\u1ec3m d\u1eef li\u1ec7u \u1edf test time \u0111\xf3.\\n\\n### 3. Mini-batch nh\u1ecf hay l\u1edbn \u1ea3nh h\u01b0\u1edfng th\u1ebf n\xe0o?\\n- Mini-batch nh\u1ecf th\xec tr\xean \u0111\u1ed3 th\u1ecb h\xe0m loss, \u0111\u01b0\u1eddng \u0111i t\u1eeb 1 \u0111i\u1ec3m b\u1ea5t k\u1ef3 \u0111\u1ebfn 1 \u0111i\u1ec3m c\u1ef1c tr\u1ecb local minimum s\u1ebd r\u1ea5t g\u1ed3 gh\u1ec1 v\xe0 c\xf3 th\u1ec3 c\u1ea7n nhi\u1ec1u epoch h\u01a1n \u0111\u1ec3 c\xf3 \u0111\u01b0\u1ee3c 1 local minimum t\u1ed1t. Nh\u01b0ng vi\u1ec7c t\xednh to\xe1n s\u1ebd nhanh h\u01a1n, b\u1ed9 nh\u1edb n\u1ea1p d\u1eef li\u1ec7u t\u1ed1n \xedt h\u01a1n.\\n- Mini-batch l\u1edbn th\xec \u0111\u01b0\u1eddng \u0111i th\u1eb3ng v\u1ec1 \u0111\xedch h\u01a1n nh\u01b0ng vi\u1ec7c t\xednh to\xe1n \u0111\u1eaft \u0111\u1ecf h\u01a1n s\u1ebd l\xe0m qu\xe1 tr\xecnh hu\u1ea5n luy\u1ec7n ch\u1ea1y l\xe2u h\u01a1n.\\n\\n### 4. Hi\u1ec7n t\u01b0\u1ee3ng Imbalanced Data\\nL\xe0 hi\u1ec7n t\u01b0\u1ee3ng m\xe0 t\u1eadp d\u1eef li\u1ec7u c\u1ee7a ta c\xf3 c\xe1c l\u1edbp ph\xe2n lo\u1ea1i c\xf3 s\u1ef1 sai kh\xe1c l\u1edbn v\u1ec1 s\u1ed1 l\u01b0\u1ee3ng d\u1eef li\u1ec7u.\\nV\xed d\u1ee5: trong chu\u1ea9n \u0111o\xe1n b\u1ec7nh ung th\u01b0, t\u1eadp d\u1eef li\u1ec7u cho th\u1ea5y, c\xf3 $95\\\\%$ \u0111\u01b0\u1ee3c \u0111\xe1nh nh\xe3n l\xe0 kh\xf4ng c\xf3 d\u1ea5u hi\u1ec7u b\u1ecb ung th\u01b0, $5\\\\%$ c\xf2n l\u1ea1i l\xe0 c\xf3 d\u1ea5u hi\u1ec7u b\u1ecb ung th\u01b0. Khi \u0111\xf3 m\xf4 h\xecnh c\u1ee7a ta s\u1ebd r\u1ea5t kh\xf3 kh\u0103n \u0111\u1ec3 \u0111\u01b0a ra d\u1ef1 \u0111o\xe1n, th\u1eadm ch\xed trong tr\u01b0\u1eddng h\u1ee3p \u0111\u01b0a ra d\u1ef1 \u0111o\xe1n \xe2m t\xednh h\u1ebft th\xec c\u0169ng \u0111\xe3 c\xf3 accuracy l\xe0 $\\\\sim95\\\\%$. Khi n\xe0y accuracy kh\xf4ng c\xf2n l\xe0 1 metric t\u1ed1t \u0111\u1ec3 m\xe0 \u0111\xe1nh gi\xe1 m\xf4 h\xecnh n\u1eefa, ta s\u1ebd d\xf9ng precision, recall, hay F2-score.\\n\\n\u0110\u1ec3 gi\u1ea3i quy\u1ebft, d\xf9ng c\xe1c k\u1ef9 thu\u1eadt sau\\n- Ta c\xf3 th\u1ec3 data augmentation l\u1edbp ph\xe2n lo\u1ea1i m\xe0 c\xf3 s\u1ed1 l\u01b0\u1ee3ng \xedt d\u1eef li\u1ec7u, nh\u01b0 crop, xoay h\xecnh, l\xe0m m\xe9o,\u2026\\n- S\u1eed d\u1ee5ng metric ph\xf9 h\u1ee3p \u0111\u1ec3 \u0111\xe1nh gi\xe1.\\n- Oversampling v\xe0 Undersampling.\\n- Thay \u0111\u1ed5i h\xe0m m\u1ea5t m\xe1t c\u1ee7a ta, b\u1eb1ng vi\u1ec7c t\u0103ng tr\u1ecdng s\u1ed1 cho ph\u1ea7n h\xe0m m\u1ea5t m\xe1t t\u1ea1i c\xe1c \u0111i\u1ec3m \u1edf l\u1edbp ph\xe2n lo\u1ea1i c\xf3 l\u01b0\u1ee3ng d\u1eef li\u1ec7u th\u1ea5p, tr\u1eebng ph\u1ea1t n\u1eb7ng n\u1ebfu m\xf4 h\xecnh d\u1ef1 \u0111o\xe1n sai c\xe1c \u0111i\u1ec3m d\u1eef li\u1ec7u \u0111\xf3.\\n\\n### 5. Gradient vanishing/exploding\\nTheo l\xfd thuy\u1ebft, m\u1ea1ng c\u1ee7a ta c\xe0ng s\xe2u, th\xec \u0111\u1ed9 ch\xednh x\xe1c trong qu\xe1 tr\xecnh d\u1ef1 \u0111o\xe1n c\xe0ng cao h\u01a1n, b\u1edfi v\xec khi \u0111\xf3 m\u1ea1ng c\u1ee7a ta s\u1ebd h\u1ecdc \u0111\u01b0\u1ee3c nhi\u1ec1u \u0111\u1eb7c tr\u01b0ng ph\u1ee9c t\u1ea1p. Nh\u01b0ng th\u1ef1c t\u1ebf, \u0111\u1ed9 ch\xednh x\xe1c c\u1ee7a m\u1ea1ng s\u1ebd b\xe3o h\xf2a \u0111\u1ebfn m\u1ed9t m\u1ee9c s\xe2u n\xe0o \u0111\xf3 c\u1ee7a m\u1ea1ng, th\u1eadm ch\xed c\xf2n gi\u1ea3m khi m\u1ea1ng ta qu\xe1 s\xe2u. Nguy\xean nh\xe2n l\xe0 b\u1edfi c\xe1c hi\u1ec7n t\u01b0\u1ee3ng gradient vanishing/exploding.\\n\\n**Hi\u1ec7n t\u01b0\u1ee3ng Gradient vanishing/exploding l\xe0 g\xec?**\\n\\nQu\xe1 tr\xecnh kh\u1edfi t\u1ea1o ma tr\u1eadn tr\u1ecdng s\u1ed1, c\xe1c gi\xe1 tr\u1ecb th\u01b0\u1eddng c\xf3 k\u1ef3 v\u1ecdng l\xe0 ${0}$, \u0111\u1ed9 l\u1ec7ch chu\u1ea9n l\xe0 $1$, do v\u1eady c\xe1c gi\xe1 tr\u1ecb \u0111\xf3 th\u01b0\u1eddng n\u1eb1m trong kho\u1ea3ng $[-1, 1]$. C\xe1c h\xe0m k\xedch ho\u1ea1t th\u01b0\u1eddng c\xf3 gi\xe1 tr\u1ecb \u0111\u1ea7u ra n\u1eb1m trong kho\u1ea3ng $(0, 1)$ \u0111\u1ec3 bi\u1ec3u di\u1ec5n x\xe1c su\u1ea5t c\u1ee7a qu\xe1 tr\xecnh ph\xe2n lo\u1ea1i.\\n- Gradient vanishing: hi\u1ec7n t\u01b0\u1ee3ng m\xe0 khi trong qu\xe1 tr\xecnh th\u1ef1c hi\u1ec7n thu\u1eadt to\xe1n lan truy\u1ec1n ng\u01b0\u1ee3c backpropagation, gradient c\xe0ng v\u1ec1 c\xe1c l\u1edbp n\xf4ng h\u01a1n s\u1ebd c\xe0ng co d\u1ea7n v\u1ec1 ${0}$, l\xe0m cho c\xe1c l\u1edbp \u1edf \u0111\u1ea7u \u0111\xf3 kh\xf4ng th\u1ec3 c\u1eadp nh\u1eadt, kh\xf4ng th\u1ec3 \u201ch\u1ecdc\u201d \u0111\u01b0\u1ee3c n\u1eefa. C\xe1c gi\xe1 tr\u1ecb gradient \u1edf t\u1ea7ng $L - 1$ s\u1ebd ph\u1ee5 thu\u1ed9c v\xe0o gi\xe1 tr\u1ecb gradient \u1edf t\u1ea7ng $L$, gi\xe1 tr\u1ecb \u0111\u1ea7u ra h\xe0m k\xedch ho\u1ea1t t\u1ea1i t\u1ea7ng $L - 1$ v\xe0 gi\xe1 tr\u1ecb ma tr\u1eadn tr\u1ecdng s\u1ed1 t\u1ea1i t\u1ea7ng $L - 1$. Do v\u1eady, gi\xe1 tr\u1ecb s\u1ebd co v\u1ec1 ${0}$ r\u1ea5t nhanh v\xec n\xf3 bao g\u1ed3m nhi\u1ec1u s\u1ed1 nh\u1ecf h\u01a1n $1$ nh\xe2n v\u1edbi nhau.\\n- Gradient exploding: t\u01b0\u01a1ng t\u1ef1 nh\u01b0 tr\xean nh\u01b0ng ng\u01b0\u1ee3c l\u1ea1i.\\n\\n**C\xe1c ph\u01b0\u01a1ng ph\xe1p ch\u1ed1ng Gradient vanishing/exploding?**\\n\\n- Kh\u1edfi t\u1ea1o ma tr\u1eadn tr\u1ecdng s\u1ed1 b\u1eb1ng c\xe1ch kh\u1edfi t\u1ea1o kh\xe1c: Xavier initialization,\u2026\\n- Ch\u1ecdn h\xe0m k\xedch ho\u1ea1t ph\xf9 h\u1ee3p: nh\u1eefng bi\u1ebfn th\u1ec3 c\u1ee7a Relu (ELU, SELU)\u2026\\n- S\u1eed d\u1ee5ng Batchnorm. Tuy nhi\xean s\u1eed d\u1ee5ng Batchnorm s\u1ebd khi\u1ebfn m\u1ea1ng ph\u1ee9c t\u1ea1p h\u01a1n, t\xednh to\xe1n l\xe2u h\u01a1n, ta n\xean c\xe2n nh\u1eafc gi\u1ea3i ph\xe1p s\u1eed d\u1ee5ng c\xe1c h\xe0m k\xedch ho\u1ea1t ph\xf9 h\u1ee3p tr\u01b0\u1edbc khi \xe1p d\u1ee5ng Batchnorm.\\n- Gradient clipping (x\u1eed l\xfd gradient exploding).\\n![Gradient Clipping](./images/gradient_clipping.PNG)"},{"id":"receptive-field","metadata":{"permalink":"/blogs/blog/receptive-field","editUrl":"https://github.com/lam1051999/blogs/edit/main/blog/2021-07-24-receptive-field/index.md","source":"@site/blog/2021-07-24-receptive-field/index.md","title":"Receptive field trong th\u1ecb gi\xe1c m\xe1y t\xednh","description":"Convolution","date":"2021-07-24T00:00:00.000Z","formattedDate":"July 24, 2021","tags":[{"label":"Computer Vision","permalink":"/blogs/blog/tags/computer-vision"},{"label":"Receptive Field","permalink":"/blogs/blog/tags/receptive-field"},{"label":"Artificial Intelligence","permalink":"/blogs/blog/tags/artificial-intelligence"},{"label":"AI","permalink":"/blogs/blog/tags/ai"}],"readingTime":3.295,"truncated":true,"authors":[{"name":"Tr\u1ea7n L\xe2m","title":"Data Engineer","url":"https://github.com/lam1051999","imageURL":"https://github.com/lam1051999.png","key":"tranlam"}],"frontMatter":{"slug":"receptive-field","title":"Receptive field trong th\u1ecb gi\xe1c m\xe1y t\xednh","authors":"tranlam","tags":["Computer Vision","Receptive Field","Artificial Intelligence","AI"],"image":"./images/convolution.PNG"},"prevItem":{"title":"M\u1ed9t s\u1ed1 c\xe2u h\u1ecfi ph\u1ecfng v\u1ea5n AI/ML","permalink":"/blogs/blog/ai-interview-questions"},"nextItem":{"title":"\u0110\u1ea1i s\u1ed1 tuy\u1ebfn t\xednh c\u01a1 b\u1ea3n - Ph\u1ea7n 1","permalink":"/blogs/blog/linear-algebra-part-1"}},"content":"![Convolution](./images/convolution.PNG)\\n\\nTrong b\xe0i vi\u1ebft n\xe0y, m\xecnh mu\u1ed1n n\xf3i v\u1ec1 receptive field, m\u1ed9t kh\xe1i ni\u1ec7m r\u1ea5t quan tr\u1ecdng trong c\xe1c b\xe0i to\xe1n th\u1ecb gi\xe1c m\xe1y t\xednh m\xe0 b\u1ea1n n\xe0o h\u1ecdc c\u0169ng c\u1ea7n ph\u1ea3i bi\u1ebft \u0111\u1ec3 gi\u1ea3i th\xedch t\u1ea1i sao ng\u01b0\u1eddi ta l\u1ea1i mu\u1ed1n x\xe2y m\u1ea1ng s\xe2u h\u01a1n. C\xf9ng \u0111i v\xe0o b\xe0i vi\u1ebft th\xf4i.\\n\\n\x3c!--truncate--\x3e\\n\\n### 1. Th\u1ebf n\xe0o l\xe0 receptive field?\\nReceptive field l\xe0 k\xedch th\u01b0\u1edbc c\u1ee7a m\u1ed9t v\xf9ng c\u1ee7a \u0111\u1ea7u v\xe0o m\xe0 c\xf3 \u1ea3nh h\u01b0\u1edfng l\xean m\u1ed9t neuron t\u1ea1i m\u1ed9t layer n\xe0o \u0111\xf3. N\xf3 c\xf3 th\u1ec3 \u0111\u01b0\u1ee3c mi\xeau t\u1ea3 b\u1eb1ng \u0111i\u1ec3m trung t\xe2m v\xe0 k\xedch th\u01b0\u1edbc. Tuy v\u1eady th\xec kh\xf4ng ph\u1ea3i pixel n\xe0o trong receptive field \u0111\u1ec1u c\xf3 \u0111\u1ed9 quan tr\u1ecdng nh\u01b0 nhau \u0111\u1ed1i v\u1edbi neuron m\xe0 n\xf3 \u1ea3nh h\u01b0\u1edfng t\u1edbi. C\xe1c pixel g\u1ea7n trung t\xe2m c\u1ee7a receptive field s\u1ebd \u0111\xf3ng g\xf3p nhi\u1ec1u vai tr\xf2 trong vi\u1ec7c t\xednh to\xe1n neuron tham chi\u1ec1u t\u1edbi h\u01a1n l\xe0 c\xe1c pixel \u1edf r\xeca receptive field.\\n\\n### 2. C\xe1ch t\xednh to\xe1n receptive field\\nGi\u1ea3 s\u1eed, ta c\xf3 \u1ea3nh \u0111\u1ea7u v\xe0o c\xf3 k\xedch th\u01b0\u1edbc chi\u1ec1u d\xe0i, chi\u1ec1u r\u1ed9ng l\xe0 ${n = W = H}$.\\n\\nTa c\xf3 hai c\xe1ch \u0111\u1ec3 m\xf4 t\u1ea3 feature map \u1edf c\xe1c layer trong m\u1ea1ng, v\u1edbi k\xedch th\u01b0\u1edbc c\u1eeda s\u1ed5 t\xedch ch\u1eadp l\xe0 ${3 \\\\times 3}$, padding l\xe0 ${1 \\\\times 1}$, b\u01b0\u1edbc nh\u1ea3y l\xe0 ${2 \\\\times 2}$ nh\u01b0 sau\\n\\n![Convolution 2 Way](./images/conv_2_ways.PNG)\\n\\nT\u1eeb \u0111\xf3, v\u1edbi ${r}$ l\xe0 k\xedch th\u01b0\u1edbc receptive field t\u1ea1i l\u1edbp hi\u1ec7n t\u1ea1i, ${j}$ l\xe0 kho\u1ea3ng c\xe1ch gi\u1eefa 2 \u0111i\u1ec3m \u0111\u1eb7c tr\u01b0ng li\u1ec1n k\u1ec1, ${start}$ l\xe0 t\u1ecda \u0111\u1ed9 \u0111i\u1ec3m ch\xednh gi\u1eefa c\u1ee7a \u0111i\u1ec3m \u0111\u1eb7c tr\u01b0ng tr\xean c\xf9ng g\xf3c tr\xe1i, ${k}$ l\xe0 k\xedch th\u01b0\u1edbc c\u1eeda s\u1ed5 b\u1ed9 l\u1ecdc, ${p}$ l\xe0 padding m\xe0 ta mu\u1ed1n ch\xeam th\xeam \u0111\u1ec3 mu\u1ed1n b\u1ea3o to\xe0n k\xedch th\u01b0\u1edbc \u0111\u1ea7u ra hay kh\xf4ng, ${s}$ l\xe0 b\u01b0\u1edbc nh\u1ea3y c\u1eeda s\u1ed5 t\xedch ch\u1eadp. Ta c\xf3 c\xe1c c\xf4ng th\u1ee9c t\xednh c\xe1c th\xf4ng s\u1ed1 \u0111\u1ea7u ra khi cho m\u1ed9t \u0111\u1ea7u v\xe0o qua c\u1eeda s\u1ed5 t\xedch ch\u1eadp nh\u01b0 sau\\n\\n![Output](./images/output.PNG)\\n\\nD\u01b0\u1edbi \u0111\xe2y l\xe0 minh h\u1ecda v\u1ec1 \xe1p d\u1ee5ng c\xe1ch t\xednh to\xe1n receptive field khi cho \u1ea3nh \u0111\u1ea7u v\xe0o qua m\u1ed9t s\u1ed1 c\u1eeda s\u1ed5 t\xedch ch\u1eadp \u0111\u01a1n gi\u1ea3n\\n\\n![Math](./images/math.PNG)\\n\\n### 3. M\u1ed9t s\u1ed1 nh\u1eadn x\xe9t\\nV\u1ec1 c\xe1ch t\xednh to\xe1n receptive field \u1edf tr\xean, m\xecnh c\xf3 m\u1ed9t s\u1ed1 nh\u1eadn x\xe9t sau\\n- 2 l\u1edbp c\u1eeda s\u1ed5 t\xedch ch\u1eadp v\u1edbi k\xedch th\u01b0\u1edbc ${3 \\\\times 3}$ s\u1ebd c\xf3 receptive field t\u01b0\u01a1ng \u0111\u01b0\u01a1ng v\u1edbi l\u1edbp c\u1eeda s\u1ed5 t\xedch ch\u1eadp k\xedch th\u01b0\u1edbc ${5 \\\\times 5}$.\\n- 3 l\u1edbp c\u1eeda s\u1ed5 t\xedch ch\u1eadp v\u1edbi k\xedch th\u01b0\u1edbc ${3 \\\\times 3}$ s\u1ebd c\xf3 receptive field t\u01b0\u01a1ng \u0111\u01b0\u01a1ng v\u1edbi l\u1edbp c\u1eeda s\u1ed5 t\xedch ch\u1eadp k\xedch th\u01b0\u1edbc ${7 \\\\times 7}$.\\n- 5 l\u1edbp c\u1eeda s\u1ed5 t\xedch ch\u1eadp v\u1edbi k\xedch th\u01b0\u1edbc ${3 \\\\times 3}$ s\u1ebd c\xf3 receptive field t\u01b0\u01a1ng \u0111\u01b0\u01a1ng v\u1edbi l\u1edbp c\u1eeda s\u1ed5 t\xedch ch\u1eadp k\xedch th\u01b0\u1edbc ${11 \\\\times 11}$.\\n\\nV\xe0 t\u01b0\u01a1ng t\u1ef1 nh\u01b0 v\u1eady, ta c\xf3 th\u1ec3 thay th\u1ebf c\xe1c l\u1edbp c\u1eeda s\u1ed5 t\xedch ch\u1eadp k\xedch th\u01b0\u1edbc l\u1edbn b\u1eb1ng nhi\u1ec1u c\u1eeda s\u1ed5 t\xedch ch\u1eadp c\xf3 k\xedch th\u01b0\u1edbc nh\u1ecf h\u01a1n trong m\u1ed9t m\u1ea1ng n\u01a1-ron t\xedch ch\u1eadp. \u0110i\u1ec1u n\xe0y c\xf3 2 l\u1ee3i \xedch l\xe0 \\n- T\u0103ng \u0111\u1ed9 phi tuy\u1ebfn cho m\u1ea1ng, b\u1edfi v\xec khi ch\xfang ta c\xe0ng s\u1eed d\u1ee5ng nhi\u1ec1u l\u1edbp c\u1eeda s\u1ed5 t\xedch ch\u1eadp, ta c\xe0ng s\u1eed d\u1ee5ng nhi\u1ec1u h\u01a1n c\xe1c h\xe0m k\xedch ho\u1ea1t cho c\xe1c l\u1edbp \u0111\xf3.\\n- Gi\u1ea3m thi\u1ec3u l\u01b0\u1ee3ng bi\u1ebfn s\u1ed1 m\xf4 h\xecnh c\u1ea7n h\u1ecdc. V\xed d\u1ee5: ${N}$ b\u1ed9 l\u1ecdc t\xedch ch\u1eadp ${5 \\\\times 5 \\\\times D}$ s\u1ebd t\u1ea1o ra ${5 \\\\times 5 \\\\times D \\\\times N = 25 \\\\times D \\\\times N}$ bi\u1ebfn s\u1ed1 c\u1ea7n h\u1ecdc, trong khi \u0111\xf3, ${2N}$ b\u1ed9 l\u1ecdc t\xedch ch\u1eadp k\xedch th\u01b0\u1edbc ${3 \\\\times 3 \\\\times D}$ s\u1ebd t\u1ea1o ra ${3 \\\\times 3 \\\\times D \\\\times 2N = 18 \\\\times D \\\\times N}$ bi\u1ebfn s\u1ed1. \u0110i\u1ec1u n\xe0y t\u01b0\u1ee3ng t\u1ef1 v\u1edbi c\xe1c tr\u01b0\u1eddng h\u1ee3p kh\xe1c, c\xe0ng nhi\u1ec1u c\u1eeda s\u1ed5 t\xedch ch\u1eadp nh\u1ecf \u0111\u01b0\u1ee3c d\xf9ng \u0111\u1ec3 thay th\u1ebf c\xe1c c\u1eeda s\u1ed5 k\xedch th\u01b0\u1edbc l\u1edbn h\u01a1n th\xec l\u01b0\u1ee3ng bi\u1ebfn s\u1ed1 c\xe0ng gi\u1ea3m xu\u1ed1ng.\\n\\n### 4. T\xe0i li\u1ec7u tham kh\u1ea3o\\n\\n[A guide to receptive field arithmetic for Convolutional Neural Networks](https://blog.mlreview.com/a-guide-to-receptive-field-arithmetic-for-convolutional-neural-networks-e0f514068807)"},{"id":"linear-algebra-part-1","metadata":{"permalink":"/blogs/blog/linear-algebra-part-1","editUrl":"https://github.com/lam1051999/blogs/edit/main/blog/2021-07-10-linear-algebra-p1/index.md","source":"@site/blog/2021-07-10-linear-algebra-p1/index.md","title":"\u0110\u1ea1i s\u1ed1 tuy\u1ebfn t\xednh c\u01a1 b\u1ea3n - Ph\u1ea7n 1","description":"Linear Algebra","date":"2021-07-10T00:00:00.000Z","formattedDate":"July 10, 2021","tags":[{"label":"Math","permalink":"/blogs/blog/tags/math"},{"label":"Linear Algebra","permalink":"/blogs/blog/tags/linear-algebra"}],"readingTime":25.31,"truncated":true,"authors":[{"name":"Tr\u1ea7n L\xe2m","title":"Data Engineer","url":"https://github.com/lam1051999","imageURL":"https://github.com/lam1051999.png","key":"tranlam"}],"frontMatter":{"slug":"linear-algebra-part-1","title":"\u0110\u1ea1i s\u1ed1 tuy\u1ebfn t\xednh c\u01a1 b\u1ea3n - Ph\u1ea7n 1","authors":"tranlam","tags":["Math","Linear Algebra"],"image":"./images/linear-algebra.JPEG"},"prevItem":{"title":"Receptive field trong th\u1ecb gi\xe1c m\xe1y t\xednh","permalink":"/blogs/blog/receptive-field"},"nextItem":{"title":"X\xe1c su\u1ea5t th\u1ed1ng k\xea c\u01a1 b\u1ea3n","permalink":"/blogs/blog/probability"}},"content":"![Linear Algebra](./images/linear-algebra.JPEG)\\n\\nTi\u1ebfp \u0111\xe2y s\u1ebd l\xe0 lo\u1ea1t b\xe0i vi\u1ebft v\u1ec1 \u0111\u1ea1i s\u1ed1 tuy\u1ebfn t\xednh m\xecnh \u0111\xe3 h\u1ecdc l\u1ea1i khi \u0111\u1ecdc quy\u1ec3n **[Mathematics for Machine Learning](https://mml-book.github.io/book/mml-book.pdf)** trong th\u1eddi gian h\u1ecdc v\u1ec1 Machine Learning v\xe0 AI. \u0110\xe2y l\xe0 ph\u1ea7n th\u1ee9 nh\u1ea5t trong lo\u1ea1t b\xe0i n\xe0y.\\n\\n\x3c!--truncate--\x3e\\n\\n### 1. Gi\u1ea3i h\u1ec7 ph\u01b0\u01a1ng tr\xecnh tuy\u1ebfn t\xednh\\nH\u1ec7 ph\u01b0\u01a1ng tr\xecnh tuy\u1ebfn t\xednh l\xe0 t\u1eadp c\xe1c ph\u01b0\u01a1ng tr\xecnh tuy\u1ebfn t\xednh v\u1edbi c\xf9ng nh\u1eefng bi\u1ebfn s\u1ed1, c\u1ea5p 2 ch\xfang ta \u0111\xe3 gi\u1ea3i ch\xe1n ch\xea ph\u01b0\u01a1ng tr\xecnh n\xe0y, th\u1eadm ch\xed c\xf2n ph\u1ea3i l\xe0m c\xe1c h\u1ec7 ph\u01b0\u01a1ng tr\xecnh kh\xf3 nh\u1eb1n h\u01a1n ch\u1ee9a c\u1ea3 bi\u1ebfn b\u1eadc 2, b\u1eadc 3,... Gi\u1edd \u0111\xe2y, tr\u1edf l\u1ea1i v\u1edbi \u0111\u1ea1i s\u1ed1 tuy\u1ebfn t\xednh, ta c\xf3 th\u1ec3 m\xf4 h\xecnh h\u1ec7 ph\u01b0\u01a1ng tr\xecnh tuy\u1ebfn t\xednh b\u1eadc m\u1ed9t v\u1edbi t\xedch c\u1ee7a ma tr\u1eadn v\xe0 v\xe9c-t\u01a1 t\u01b0\u01a1ng \u1ee9ng.\\nV\xed d\u1ee5 ta c\xf3 m\u1ed9t h\u1ec7 ph\u01b0\u01a1ng tr\xecnh \u0111\u01a1n gi\u1ea3n sau\\n<p style={{textAlign: \\"center\\"}}>\\n\\n${\\n\\\\begin{cases} x_{1} + 8x_{3} - 4x_{4} = 42 \\\\\\\\\\\\\\\\ x_{2} + 2x_{3} + 12x_{4} = 8 \\\\end{cases}    \\n}$ \\n\\n</p>\\n\\nS\u1ebd \u0111\u01b0\u1ee3c vi\u1ebft d\u01b0\u1edbi d\u1ea1ng t\xedch ma tr\u1eadn v\xe0 v\xe9c-t\u01a1 bi\u1ebfn s\u1ed1 nh\u01b0 sau\\n<p style={{textAlign: \\"center\\"}}>\\n\\n${\\n\\\\begin{bmatrix} 1 & 0 & 8 & -4 \\\\\\\\\\\\\\\\ 0 & 1 & 2 & 12 \\\\end{bmatrix} * \\\\begin{bmatrix} x_{1} \\\\\\\\\\\\\\\\ x_{2} \\\\\\\\\\\\\\\\ x_{3} \\\\\\\\\\\\\\\\ x_{4} \\\\end{bmatrix} = \\\\begin{bmatrix} 42 \\\\\\\\\\\\\\\\ 8 \\\\end{bmatrix}\\n}$\\n\\n${\\n\\\\Leftrightarrow \\\\begin{bmatrix} 1 \\\\\\\\\\\\\\\\ 0 \\\\end{bmatrix} x_{1} + \\\\begin{bmatrix} 0 \\\\\\\\\\\\\\\\ 1 \\\\end{bmatrix} x_{2} + \\\\begin{bmatrix} 8 \\\\\\\\\\\\\\\\ 2 \\\\end{bmatrix} x_{3} + \\\\begin{bmatrix} -4 \\\\\\\\\\\\\\\\ 12 \\\\end{bmatrix} x_{4} = \\\\begin{bmatrix} 42 \\\\\\\\\\\\\\\\ 8 \\\\end{bmatrix} \\\\\\\\\\\\;\\\\\\\\\\\\;\\\\\\\\\\\\;\\\\\\\\\\\\;(1)\\n}$\\n\\n</p>\\n\\n#### 1.1. Nghi\u1ec7m chung v\xe0 nghi\u1ec7m ri\xeang c\u1ee7a ph\u01b0\u01a1ng tr\xecnh\\nNh\xecn v\xe0o bi\u1ec3u th\u1ee9c b\xean tr\xean ${(1)}$, ta c\xf3\\n- M\u1ed9t nghi\u1ec7m ri\xeang c\u1ee7a h\u1ec7 ph\u01b0\u01a1ng tr\xecnh l\xe0 ${\\\\begin{bmatrix} 42 & 8 & 0 & 0 \\\\end{bmatrix}^T}$.\\n- \u0110\u1ec3 c\xf3 th\u1ec3 thu \u0111\u01b0\u1ee3c t\u1ea5t c\u1ea3 nghi\u1ec7m th\u1ecfa m\xe3n, ta c\u1ea7n ph\u1ea3i \u0111i gi\u1ea3i ph\u01b0\u01a1ng tr\xecnh ${\\\\boldsymbol{Ax} = \\\\boldsymbol{0}}$ n\u1eefa. Ta ti\u1ebfn h\xe0nh ph\xe2n t\xedch ph\u01b0\u01a1ng tr\xecnh ${(1)}$ ra nh\u01b0 sau\\n\\n<p style={{textAlign: \\"center\\"}}>\\n\\n${\\n\\\\begin{bmatrix} 1 \\\\\\\\\\\\\\\\ 0 \\\\end{bmatrix} x_{1} + \\\\begin{bmatrix} 0 \\\\\\\\\\\\\\\\ 1 \\\\end{bmatrix} x_{2} + 8\\\\begin{bmatrix} 1 \\\\\\\\\\\\\\\\ 0 \\\\end{bmatrix} x_{3} + 2\\\\begin{bmatrix} 0 \\\\\\\\\\\\\\\\ 1 \\\\end{bmatrix} x_{3} + \\\\begin{bmatrix} -4 \\\\\\\\\\\\\\\\ 12 \\\\end{bmatrix} x_{4} = \\\\boldsymbol{0} \\n}$\\n\\n</p>\\n\\nNh\xecn v\xe0o ph\u01b0\u01a1ng tr\xecnh tr\xean, ta c\xf3 \u0111\u01b0\u1ee3c m\u1ed9t nghi\u1ec7m cho ${\\\\boldsymbol{Ax} = \\\\boldsymbol{0}}$ l\xe0 ${\\\\lambda_{1}\\\\begin{bmatrix} 8 & 2 & -1 & 0 \\\\end{bmatrix}^T}$.\\nT\u01b0\u01a1ng t\u1ef1 nh\u01b0 tr\xean, ta t\xecm th\xeam \u0111\u01b0\u1ee3c m\u1ed9t nghi\u1ec7m cho ${\\\\boldsymbol{Ax} = \\\\boldsymbol{0}}$ n\u1eefa l\xe0 ${\\\\lambda_{2}\\\\begin{bmatrix} -4 & 12 & 0 & -1 \\\\end{bmatrix}^T}$.\\nPh\u01b0\u01a1ng tr\xecnh ${\\\\boldsymbol{Ax} = \\\\boldsymbol{0}}$ ch\u1ec9 c\xf3 2 nghi\u1ec7m, t\u1ea1i sao l\u1ea1i nh\u01b0 v\u1eady th\xec b\xean d\u01b0\u1edbi m\xecnh s\u1ebd n\xf3i sau.\\nNh\u01b0 v\u1eady, h\u1ec7 ph\u01b0\u01a1ng tr\xecnh c\xf3 nghi\u1ec7m chung l\xe0 \\n\\n<p style={{textAlign: \\"center\\"}}>\\n\\n${\\n    \\\\\\\\{ x \\\\in \\\\Bbb R^4: x = \\\\begin{bmatrix} 42 \\\\\\\\\\\\\\\\ 8 \\\\\\\\\\\\\\\\ 0 \\\\\\\\\\\\\\\\ 0 \\\\end{bmatrix} + \\\\lambda_{1}\\\\begin{bmatrix} 8 \\\\\\\\\\\\\\\\ 2 \\\\\\\\\\\\\\\\ -1 \\\\\\\\\\\\\\\\ 0 \\\\end{bmatrix} + \\\\lambda_{2}\\\\begin{bmatrix} -4 \\\\\\\\\\\\\\\\ 12 \\\\\\\\\\\\\\\\ 0 \\\\\\\\\\\\\\\\ -1 \\\\end{bmatrix}, \\\\lambda_{1}, \\\\lambda_{2} \\\\in \\\\Bbb R \\\\\\\\}\\n}$\\n\\n</p>\\n\\n#### 1.2. Bi\u1ebfn \u0111\u1ed5i ma tr\u1eadn\\n##### 1.2.1. V\xed d\u1ee5\\nM\xecnh s\u1ebd \u0111em m\u1ed9t v\xed d\u1ee5 cho ph\u01b0\u01a1ng ph\xe1p n\xe0y\\n<p style={{textAlign: \\"center\\"}}>\\n\\n${\\n\\\\begin{cases} \\n-2x_{1} + 4x_{2} - 2x_{3} - x_{4} + 4x_{5} = -3 \\\\\\\\\\\\\\\\\\n4x_{1} - 8x_{2} + 3x_{3} - 3x_{4} + x_{5} = 2 \\\\\\\\\\\\\\\\\\nx_{1} - 2x_{2} + x_{3} - x_{4} + x_{5} = 0 \\\\\\\\\\\\\\\\\\nx_{1} - 2x_{2} - 3x_{4} + x_{5} = a \\\\\\\\\\\\\\\\\\n\\\\end{cases}    \\n}$ \\n\\n</p>\\n\\nVi\u1ebft th\xe0nh d\u1ea1ng\\n<p style={{textAlign: \\"center\\"}}>\\n\\n${\\n\\\\left[\\n  \\\\begin{matrix}\\n    -2 & 4 & -2 & -1 & 4 \\\\\\\\\\\\\\\\\\n    4 & -8 & 3 & -3 & 1 \\\\\\\\\\\\\\\\\\n    1 & -2 & 1 & -1 & 1 \\\\\\\\\\\\\\\\\\n    1 & -2 & 0 & -3 & 1 \\\\\\\\\\\\\\\\\\n  \\\\end{matrix}\\n\\\\left|\\n\\\\begin{matrix}\\n    -3  \\\\\\\\\\\\\\\\\\n    2  \\\\\\\\\\\\\\\\\\n    0  \\\\\\\\\\\\\\\\\\n    a  \\\\\\\\\\\\\\\\\\n\\\\end{matrix}\\n\\\\right.\\n\\\\right]\\n}$\\n\\n${\\n\\\\rightsquigarrow ... \\\\rightsquigarrow\\n\\\\left[\\n  \\\\begin{matrix}\\n    1 & -2 & 1 & -1 & 1 \\\\\\\\\\\\\\\\\\n    0 & 0 & 1 & -1 & 3 \\\\\\\\\\\\\\\\\\n    0 & 0 & 0 & 1 & -2 \\\\\\\\\\\\\\\\\\n    0 & 0 & 0 & 0 & 0 \\\\\\\\\\\\\\\\\\n  \\\\end{matrix}\\n\\\\left|\\n\\\\begin{matrix}\\n    0  \\\\\\\\\\\\\\\\\\n    -2  \\\\\\\\\\\\\\\\\\n    1  \\\\\\\\\\\\\\\\\\n    a+1  \\\\\\\\\\\\\\\\\\n\\\\end{matrix}\\n\\\\right.\\n\\\\right]\\n}$\\n\\n</p>\\n\\nDo v\u1eady, h\u1ec7 ph\u01b0\u01a1ng tr\xecnh \u0111\u01b0\u1ee3c gi\u1ea3i khi ${a = -1}$.\\n- Nghi\u1ec7m ri\xeang c\u1ee7a ph\u01b0\u01a1ng tr\xecnh l\xe0 ${\\\\begin{bmatrix} 2 & 0 & -1 & 1 & 0 \\\\end{bmatrix}^T}$.\\n- Nghi\u1ec7m c\u1ee7a ph\u01b0\u01a1ng tr\xecnh ${\\\\boldsymbol{Ax} = \\\\boldsymbol{0}}$ l\xe0 ${\\\\lambda_{1}\\\\begin{bmatrix} 2 & 1 & 0 & 0 & 0 \\\\end{bmatrix}^T}$ v\xe0 ${\\\\lambda_{2}\\\\begin{bmatrix} -2 & 0 & 1 & -2 & -1 \\\\end{bmatrix}^T}$.\\n\\nNh\u01b0 v\u1eady, nghi\u1ec7m chung c\u1ee7a ph\u01b0\u01a1ng tr\xecnh l\xe0 \\n<p style={{textAlign: \\"center\\"}}>\\n\\n${\\n    \\\\\\\\{ x \\\\in \\\\Bbb R^5: x = \\\\begin{bmatrix} 2 \\\\\\\\\\\\\\\\ 0 \\\\\\\\\\\\\\\\ -1 \\\\\\\\\\\\\\\\ 1 \\\\\\\\\\\\\\\\ 0 \\\\end{bmatrix} + \\\\lambda_{1}\\\\begin{bmatrix} 2 \\\\\\\\\\\\\\\\ 1 \\\\\\\\\\\\\\\\ 0 \\\\\\\\\\\\\\\\ 0 \\\\\\\\\\\\\\\\ 0 \\\\end{bmatrix} + \\\\lambda_{2}\\\\begin{bmatrix} -2 \\\\\\\\\\\\\\\\ 0 \\\\\\\\\\\\\\\\ 1 \\\\\\\\\\\\\\\\ -2 \\\\\\\\\\\\\\\\ -1 \\\\end{bmatrix}, \\\\lambda_{1}, \\\\lambda_{2} \\\\in \\\\Bbb R \\\\\\\\}\\n}$\\n\\n</p>\\n\\n\\n##### 1.2.2. Ma tr\u1eadn b\u1eadc thang\\nM\u1ed9t ma tr\u1eadn \u1edf d\u1ea1ng b\u1eadc thang n\u1ebfu\\n- Nh\u1eefng h\xe0ng ch\u1ec9 ch\u1ee9a 0 s\u1ebd \u1edf \u0111\xe1y ma tr\u1eadn. Nh\u1eefng h\xe0ng ch\u1ee9a \xedt nh\u1ea5t 1 s\u1ed1 kh\xe1c kh\xf4ng s\u1ebd n\u1eb1m tr\xean c\xe1c h\xe0ng ch\u1ee9a to\xe0n 0.\\n- C\xe1c ph\u1ea7n t\u1eed pivot c\u1ee7a m\u1ed7i h\xe0ng lu\xf4n \u1edf ph\xeda b\xean ph\u1ea3i c\u1ee7a c\xe1c ph\u1ea7n t\u1eed pivot \u1edf c\xe1c h\xe0ng b\xean tr\xean.\\n\\nC\xe1c bi\u1ebfn \u1ee9ng v\u1edbi c\xe1c ph\u1ea7n t\u1eed pivot l\xe0 c\xe1c basic variables, c\xe1c bi\u1ebfn c\xf2n l\u1ea1i l\xe0 free variables. Do v\u1eady m\xe0 \u1edf **M\u1ee5c 1.1** ph\u01b0\u01a1ng tr\xecnh ${\\\\boldsymbol{Ax} = \\\\boldsymbol{0}}$ ch\u1ec9 c\xf3 hai nghi\u1ec7m, t\u1ea1i ch\u1ec9 c\xf3 2 bi\u1ebfn l\xe0 free variables (t\u1ee9c l\xe0 c\xe1c bi\u1ebfn \u1ee9ng v\u1edbi c\xe1c ph\u1ea7n t\u1eed kh\xf4ng l\xe0 ph\u1ea7n t\u1eed pivot).\\n\\nV\u1edbi h\u1ec7 ph\u01b0\u01a1ng tr\xecnh tuy\u1ebfn t\xednh ${\\\\boldsymbol{Ax} = \\\\boldsymbol{b}}$, \u0111\u1ec3 t\xednh to\xe1n m\u1ed9t nghi\u1ec7m ri\xeang, ta bi\u1ec3u di\u1ec5n c\xe1c ${\\\\boldsymbol{b} = \\\\sum_{i = 1}^p \\\\lambda_{i}\\\\boldsymbol{p_{i}}}$ v\u1edbi ${\\\\boldsymbol{p_{i}}}$ l\xe0 c\xe1c pivot columns, ch\xfang ta th\u01b0\u1eddng b\u1eaft \u0111\u1ea7u \u01b0\u1edbc l\u01b0\u1ee3ng c\xe1c gi\xe1 tr\u1ecb ${\\\\lambda_{i}}$ v\u1edbi c\xe1c pivot columns t\u1eeb ph\u1ea3i sang tr\xe1i.\\n\\nM\u1ed9t ma tr\u1eadn \u1edf d\u1ea1ng b\u1eadc thang t\u1ed1i gi\u1ea3n n\u1ebfu\\n- N\xf3 l\xe0 m\u1ed9t ma tr\u1eadn b\u1eadc thang.\\n- C\xe1c ph\u1ea7n t\u1eed pivot \u0111\u1ec1u b\u1eb1ng 1.\\n- Ph\u1ea7n t\u1eed pivot l\xe0 ph\u1ea7n t\u1eed duy nh\u1ea5t kh\xe1c 0 t\u1ea1i pivot column \u0111\xf3.\\n\\nVi\u1ec7c t\xednh to\xe1n nghi\u1ec7m ${\\\\boldsymbol{Ax} = \\\\boldsymbol{0}}$ s\u1ebd d\u1ec5 d\xe0ng h\u01a1n r\u1ea5t nhi\u1ec1u n\u1ebfu ma tr\u1eadn bi\u1ec3u di\u1ec5n h\u1ec7 ph\u01b0\u01a1ng tr\xecnh tuy\u1ebfn t\xednh \u1edf d\u1ea1ng b\u1eadc thang t\u1ed1i gi\u1ea3n \\n\\n##### 1.2.3. Ph\xe9p kh\u1eed Gaussian\\nL\xe0 m\u1ed9t thu\u1eadt to\xe1n bi\u1ec3u di\u1ec5n c\xe1c ph\xe9p bi\u1ebfn \u0111\u1ed5i tri\u1ec7t ti\xeau gi\u1eefa c\xe1c h\xe0ng \u0111\u1ec3 \u0111\u01b0a ma tr\u1eadn bi\u1ec3u di\u1ec5n h\u1ec7 ph\u01b0\u01a1ng tr\xecnh tuy\u1ebfn t\xednh v\u1ec1 d\u1ea1ng ma tr\u1eadn b\u1eadc thang t\u1ed1i gi\u1ea3n.\\n\\n\u0110\u1ec3 t\xednh to\xe1n nghi\u1ec7m c\u1ee7a ${\\\\boldsymbol{Ax} = \\\\boldsymbol{0}}$ trong ma tr\u1eadn b\u1eadc thang t\u1ed1i gi\u1ea3n, ta bi\u1ec3u di\u1ec5n c\xe1c pivot column b\u1eb1ng t\u1ed5ng c\xe1c c\u1ea5p s\u1ed1 c\u1ee7a c\xe1c pivot columns \u1edf b\xean tr\xe1i c\u1ee7a ch\xfang.\\n\\nV\xed d\u1ee5 v\u1edbi ma tr\u1eadn b\u1eadc thang sau\\n<p style={{textAlign: \\"center\\"}}>\\n\\n${\\n\\\\boldsymbol{A} = \\n\\\\begin{bmatrix} \\n1 & 3 & 0 & -4 & 0 \\\\\\\\\\\\\\\\ \\n0 & 0 & 1 & -3 & 0 \\\\\\\\\\\\\\\\\\n0 & 0 & 0 & 0 & 1 \\\\\\\\\\\\\\\\\\n0 & 0 & 0 & 0 & 0 \\\\\\\\\\\\\\\\\\n\\\\end{bmatrix}\\n}$\\n\\n</p>\\n\\nNghi\u1ec7m c\u1ee7a ph\u01b0\u01a1ng tr\xecnh ${\\\\boldsymbol{Ax} = \\\\boldsymbol{0}}$ l\xe0\\n<p style={{textAlign: \\"center\\"}}>\\n\\n${\\n    \\\\\\\\{ x \\\\in \\\\Bbb R^5: x = \\\\lambda_{1}\\\\begin{bmatrix} 3 \\\\\\\\\\\\\\\\ -1 \\\\\\\\\\\\\\\\ 0 \\\\\\\\\\\\\\\\ 0 \\\\\\\\\\\\\\\\ 0 \\\\end{bmatrix} + \\\\lambda_{2}\\\\begin{bmatrix} -4 \\\\\\\\\\\\\\\\ 0 \\\\\\\\\\\\\\\\ -3 \\\\\\\\\\\\\\\\ -1 \\\\\\\\\\\\\\\\ 0 \\\\end{bmatrix}, \\\\lambda_{1}, \\\\lambda_{2} \\\\in \\\\Bbb R \\\\\\\\}\\n}$\\n\\n</p>\\n\\n#### 1.3. The -1 trick\\nV\u1edbi ma tr\u1eadn ${\\\\boldsymbol{A}}$ \u1edf tr\xean, ta s\u1ebd ch\xeam c\xe1c h\xe0ng g\u1ed3m to\xe0n ${0}$ v\xe0 ch\u1ec9 m\u1ed9t s\u1ed1 ${-1}$ v\xe0o gi\u1eefa c\xe1c h\xe0ng c\u1ee7a ma tr\u1eadn b\u1eadc thang t\u1ed1i gi\u1ea3n, \u0111\u1ec3 t\u1ea1o n\xean ma tr\u1eadn m\u1edbi c\xf3 \u0111\u01b0\u1eddng ch\xe9o ch\xednh g\u1ed3m to\xe0n ${-1}$ v\xe0 ${1}$ nh\u01b0 d\u01b0\u1edbi \u0111\xe2y.\\n\\n<p style={{textAlign: \\"center\\"}}>\\n\\n${ \\n\\\\boldsymbol{A} \\\\rightsquigarrow\\n\\\\begin{bmatrix} \\n1 & 3 & 0 & -4 & 0 \\\\\\\\\\\\\\\\ \\n0 & -1 & 0 & 0 & 0 \\\\\\\\\\\\\\\\\\n0 & 0 & 1 & -3 & 0 \\\\\\\\\\\\\\\\\\n0 & 0 & 0 & -1 & 0 \\\\\\\\\\\\\\\\\\n0 & 0 & 0 & 0 & 1 \\\\\\\\\\\\\\\\\\n\\\\end{bmatrix}\\n}$\\n\\n</p>\\n\\nT\u1eeb \u0111\xf3, c\xe1c c\u1ed9t ch\u1ee9a gi\xe1 tr\u1ecb ${-1}$ t\u1ea1i c\xe1c v\u1ecb tr\xed tr\xean \u0111\u01b0\u1eddng ch\xe9o ch\xednh c\u1ee7a ma tr\u1eadn s\u1ebd l\xe0 nghi\u1ec7m c\u1ee7a ph\u01b0\u01a1ng tr\xecnh ${\\\\boldsymbol{Ax} = \\\\boldsymbol{0}}$.\\n\\n\\n#### 1.4. M\u1ed9t s\u1ed1 thu\u1eadt to\xe1n \u0111\u1ec3 gi\u1ea3i h\u1ec7 ph\u01b0\u01a1ng tr\xecnh n\xe0y\\nC\xf3 m\u1ed9t s\u1ed1 thu\u1eadt to\xe1n th\xf4ng d\u1ee5ng \u0111\u1ec3 gi\u1ea3i h\u1ec7 ph\u01b0\u01a1ng tr\xecnh tuy\u1ebfn t\xednh ph\u1ee9c t\u1ea1p\\n- S\u1eed d\u1ee5ng thu\u1eadt to\xe1n h\u1ed3i quy tuy\u1ebfn t\xednh (linear regression), thu\u1eadt to\xe1n n\xe0y th\u01b0\u1eddng \xe1p d\u1ee5ng v\xe0o c\xe1c b\xe0i to\xe1n m\xe0 ta ch\u1ec9 c\xf3 th\u1ec3 t\xednh x\u1ea5p x\u1ec9 nghi\u1ec7m c\u1ee7a ph\u01b0\u01a1ng tr\xecnh.\\n- Normal equation, thu\u1eadt to\xe1n n\xe0y t\xednh ch\xednh x\xe1c nghi\u1ec7m c\u1ee7a h\u1ec7 ph\u01b0\u01a1ng tr\xecnh, nh\u01b0ng s\u1ed1 l\u01b0\u1ee3ng t\xednh to\xe1n r\u1ea5t nhi\u1ec1u n\xean kh\xf4ng th\u1ec3 s\u1eed d\u1ee5ng v\u1edbi c\xe1c tr\u01b0\u1eddng h\u1ee3p s\u1ed1 l\u01b0\u1ee3ng bi\u1ebfn nhi\u1ec1u. Ph\u01b0\u01a1ng ph\xe1p n\xe0y \u0111\u01b0\u1ee3c th\u1ec3 hi\u1ec7n d\u01b0\u1edbi \u0111\xe2y\\n\\n<p style={{textAlign: \\"center\\"}}>\\n\\n${\\n    \\\\boldsymbol{Ax} = \\\\boldsymbol{b} \\\\Leftrightarrow \\\\boldsymbol{A^TAx} = \\\\boldsymbol{A^Tb} \\\\Leftrightarrow \\\\boldsymbol{x} = \\\\boldsymbol{(A^TA)^{-1}A^Tb}\\n}$\\n\\n</p>\\n\\nVi\u1ec7c ph\u1ea3i nh\xe2n ma tr\u1eadn v\xe0 t\xednh to\xe1n ngh\u1ecbch \u0111\u1ea3o khi\u1ebfn ph\u01b0\u01a1ng ph\xe1p n\xe0y c\xf3 \u0111\u1ed9 ph\u1ee9c t\u1eadp l\xe0 ${\\\\Theta(n^3)}$.\\n\\n### 2. Kh\xf4ng gian v\xe9c-t\u01a1\\n\\n#### 2.1. Nh\xf3m\\nCho m\u1ed9t t\u1eadp ${\\\\mathcal{G}}$ v\u1edbi ph\xe9p to\xe1n ${\\\\otimes: \\\\mathcal{G} \\\\times \\\\mathcal{G} \\\\to \\\\mathcal{G}}$ \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a tr\xean ${\\\\mathcal{G}}$ th\xec ${\\\\mathcal{G} := (\\\\mathcal{G}, \\\\otimes)}$ \u0111\u01b0\u1ee3c g\u1ecdi l\xe0 m\u1ed9t nh\xf3m n\u1ebfu th\u1ecfa m\xe3n c\xe1c t\xednh ch\u1ea5t\\n- T\xednh \u0111\xf3ng g\xf3i c\u1ee7a ${\\\\mathcal{G}}$ trong ph\xe9p ${\\\\otimes}$: ${\\\\forall x, y \\\\in \\\\mathcal{G}}$ th\xec ${x \\\\otimes y \\\\in \\\\mathcal{G}}$.\\n- T\xednh k\u1ebft h\u1ee3p: ${\\\\forall x, y, z \\\\in \\\\mathcal{G}}$ th\xec ${(x \\\\otimes y) \\\\otimes z = x \\\\otimes (y \\\\otimes z)}$.\\n- T\u1ed3n t\u1ea1i ph\u1ea7n t\u1eed \u0111\u01a1n v\u1ecb: ${\\\\exists e \\\\in \\\\mathcal{G}, \\\\forall x \\\\in \\\\mathcal{G}}$ th\u1ecfa m\xe3n ${x \\\\otimes e = x}$ v\xe0 ${e \\\\otimes x = x}$.\\n- T\u1ed3n t\u1ea1i ph\u1ea7n t\u1eed ngh\u1ecbch \u0111\u1ea3o: ${\\\\forall x \\\\in \\\\mathcal{G}, \\\\exists y \\\\in \\\\mathcal{G}}$ th\u1ecfa m\xe3n ${x \\\\otimes y = e}$ v\xe0 ${y \\\\otimes x = e}$.\\n\\nN\u1ebfu nh\xf3m c\xf3 th\xeam t\xednh ch\u1ea5t giao ho\xe1n ${\\\\forall x, y \\\\in \\\\mathcal{G}: x \\\\otimes y = y \\\\otimes x}$ th\xec nh\xf3m \u0111\xf3 \u0111\u01b0\u1ee3c g\u1ecdi l\xe0 nh\xf3m Abelian.\\n\\nM\u1ed9t nh\xf3m c\xe1c ma tr\u1eadn kh\u1ea3 ngh\u1ecbch ${A \\\\in \\\\Bbb R^{n \\\\times n}}$ v\u1edbi ph\xe9p to\xe1n nh\xe2n ma tr\u1eadn \u0111\u01b0\u1ee3c g\u1ecdi l\xe0 m\u1ed9t General Linear Group. Tuy nhi\xean, ph\xe9p nh\xe2n ma tr\u1eadn kh\xf4ng c\xf3 t\xednh ch\u1ea5t giao ho\xe1n n\xean nh\xf3m n\xe0y kh\xf4ng ph\u1ea3i l\xe0 m\u1ed9t nh\xf3m Abelian. \\n\\n#### 2.2. Kh\xf4ng gian v\xe9c-t\u01a1\\nM\u1ed9t kh\xf4ng gian v\xe9c-t\u01a1 th\u1ef1c ${V = (\\\\mathcal{V}, + , \\\\cdot)}$ l\xe0 m\u1ed9t t\u1eadp ${V}$ v\u1edbi 2 ph\xe9p to\xe1n\\n<p style={{textAlign: \\"center\\"}}>\\n\\n${\\n  +: \\\\mathcal{V} \\\\times \\\\mathcal{V} \\\\to \\\\mathcal{V} }$\\n\\n${\\n  \\\\cdot: \\\\Bbb R \\\\times \\\\mathcal{V} \\\\to \\\\mathcal{V}\\n}$\\n\\n</p>\\n\\nTh\u1ecfa m\xe3n\\n- ${\\\\mathcal{V}, +}$ l\xe0 m\u1ed9t nh\xf3m Abelian.\\n- T\xednh ch\u1ea5t ph\xe2n ph\u1ed1i ${\\\\forall \\\\lambda \\\\in \\\\Bbb R, x, y \\\\in \\\\mathcal{V}: \\\\lambda \\\\cdot(x + y) = \\\\lambda \\\\cdot x  + \\\\lambda \\\\cdot y}$ v\xe0 ${\\\\forall \\\\lambda, \\\\psi \\\\in \\\\Bbb R, x \\\\in \\\\mathcal{V}: (\\\\lambda + \\\\psi)\\\\cdot x = \\\\lambda \\\\cdot x + \\\\psi \\\\cdot x}$\\n- T\xednh ch\u1ea5t k\u1ebft h\u01a1p ${\\\\forall \\\\lambda, \\\\psi \\\\in \\\\Bbb R, x \\\\in \\\\mathcal{V}: \\\\lambda \\\\cdot(\\\\psi \\\\cdot x) = (\\\\lambda \\\\cdot \\\\psi)\\\\cdot x}$\\n- T\u1ed3n t\u1ea1i ph\u1ea7n t\u1eed \u0111\u01a1n v\u1ecb ${\\\\forall x \\\\in \\\\mathcal{V}: 1 \\\\cdot x = x}$\\n\\n#### 2.3. Kh\xf4ng gian v\xe9c-t\u01a1 con\\nV\u1edbi ${V = (\\\\mathcal{V}, + , \\\\cdot)}$ l\xe0 m\u1ed9t kh\xf4ng gian v\xe9c-t\u01a1 v\xe0 ${\\\\mathcal{U} \\\\subseteq \\\\mathcal{V}, \\\\mathcal{U} \\\\ne \\\\emptyset}$ th\xec ${U = (\\\\mathcal{U}, + , \\\\cdot)}$ \u0111\u01b0\u1ee3c g\u1ecdi l\xe0 kh\xf4ng gian v\xe9c-t\u01a1 con c\u1ee7a ${V}$ n\u1ebfu ${U}$ l\xe0 m\u1ed9t kh\xf4ng gian v\xe9c-t\u01a1 c\xf9ng v\u1edbi c\xe1c ph\xe9p to\xe1n ${+}$ v\xe0 ${\\\\cdot}$ \u1ee9ng v\u1edbi ${\\\\mathcal{U} \\\\times \\\\mathcal{U}}$ v\xe0 ${\\\\Bbb R \\\\times \\\\mathcal{U}}$. K\xed hi\u1ec7u ${U \\\\subseteq V}$ th\u1ec3 hi\u1ec7n ${U}$ l\xe0 m\u1ed9t kh\xf4ng gian v\xe9c-t\u01a1 con c\u1ee7a ${V}$.\\n\\nN\u1ebfu ${U}$ l\xe0 m\u1ed9t kh\xf4ng gian v\xe9c-t\u01a1 con c\u1ee7a ${V}$, ${U}$ s\u1ebd th\u1eeba h\u01b0\u1edfng t\u1ea5t c\u1ea3 c\xe1c t\xednh ch\u1ea5t c\u1ee7a ${V}$. \u0110\u1ec3 ch\u1ee9ng minh ${U}$ l\xe0 m\u1ed9t kh\xf4ng gian v\xe9c-t\u01a1 con c\u1ee7a ${V}$, ch\xfang ta v\u1eabn ph\u1ea3i ch\u1ec9 ra \u0111\u01b0\u1ee3c\\n- ${\\\\mathcal{U} \\\\ne \\\\emptyset}$ hay ${0 \\\\in \\\\mathcal{U}}$.\\n- T\xednh \u0111\xf3ng g\xf3i c\u1ee7a ${U}$: ${\\\\forall \\\\lambda \\\\in \\\\Bbb R, \\\\forall x \\\\in \\\\mathcal{U}: \\\\lambda x \\\\in \\\\mathcal{U}}$ v\xe0 ${\\\\forall x, y \\\\in \\\\mathcal{U}: x + y \\\\in \\\\mathcal{U}}$.\\n\\n### 3. Ph\u1ee5 thu\u1ed9c tuy\u1ebfn t\xednh\\n\\n#### 3.1. T\u1ed5 h\u1ee3p tuy\u1ebfn t\xednh\\nCho m\u1ed9t kh\xf4ng gian v\xe9c-t\u01a1 ${V}$ v\xe0 m\u1ed9t s\u1ed1 h\u1eefu h\u1ea1n c\xe1c v\xe9c-t\u01a1 ${\\\\boldsymbol{x_{1}}, \\\\boldsymbol{x_{2}},..., \\\\boldsymbol{x_{k}} \\\\in V}$, m\u1ed7i ${\\\\boldsymbol{v} \\\\in V}$ \u0111\u01b0\u1ee3c bi\u1ec3u di\u1ec5n d\u01b0\u1edbi d\u1ea1ng\\n\\n<p style={{textAlign: \\"center\\"}}>\\n\\n${\\n  \\\\boldsymbol{v} = \\\\lambda_{1}\\\\boldsymbol{x_{1}} + \\\\lambda_{2}\\\\boldsymbol{x_{2}} + ... + \\\\lambda_{k}\\\\boldsymbol{x_{k}} = \\\\sum_{i=1}^{k} \\\\lambda_{i}\\\\boldsymbol{x_{i}} \\\\in V\\n}$\\n\\n</p>\\n\\nv\u1edbi ${\\\\lambda_{1}, \\\\lambda_{2},..., \\\\lambda_{k} \\\\in \\\\Bbb R}$, l\xe0 m\u1ed9t t\u1ed5 h\u1ee3p tuy\u1ebfn t\xednh c\u1ee7a c\xe1c v\xe9c-t\u01a1 ${\\\\boldsymbol{x_{1}}, \\\\boldsymbol{x_{2}},..., \\\\boldsymbol{x_{k}}}$.\\n\\nV\xe9c-t\u01a1 ${\\\\boldsymbol{0}}$ c\xf3 th\u1ec3 \u0111\u01b0\u1ee3c vi\u1ebft d\u01b0\u1edbi d\u1ea1ng ${\\\\boldsymbol{0} = \\\\sum_{i=1}^{k}0\\\\boldsymbol{x_{i}}}$ nh\u01b0ng ch\xfang ta quan t\xe2m nhi\u1ec1u h\u01a1n \u0111\u1ebfn c\xe1c t\u1ed5 h\u1ee3p tuy\u1ebfn t\xednh kh\xf4ng t\u1ea7m th\u01b0\u1eddng h\u01a1n.\\n\\n#### 3.2. Ph\u1ee5 thu\u1ed9c tuy\u1ebfn t\xednh\\nN\u1ebfu c\xf3 m\u1ed9t t\u1ed5 h\u1ee3p tuy\u1ebfn t\xednh kh\xf4ng t\u1ea7m th\u01b0\u1eddng th\u1ecfa m\xe3n ${0 = \\\\sum_{i=1}^{k} = \\\\lambda_{i}\\\\boldsymbol{x_{i}}}$ v\u1edbi \xedt nh\u1ea5t m\u1ed9t gi\xe1 tr\u1ecb ${\\\\lambda_{i} \\\\ne 0}$ th\xec c\xe1c v\xe9c-t\u01a1 ${\\\\boldsymbol{x_{1}}, \\\\boldsymbol{x_{2}},..., \\\\boldsymbol{x_{k}}}$ \u0111\u01b0\u1ee3c g\u1ecdi l\xe0 ***ph\u1ee5 thu\u1ed9c*** tuy\u1ebfn t\xednh.\\n\\nN\u1ebfu m\xe0 bi\u1ec3u th\u1ee9c tr\xean ch\u1ec9 t\u1ed3n t\u1ea1i nghi\u1ec7m t\u1ea7m th\u01b0\u1eddng ${\\\\lambda_{1} = \\\\lambda_{2} = ... = \\\\lambda_{k} = 0}$ th\xec c\xe1c v\xe9c-t\u01a1 ${\\\\boldsymbol{x_{1}}, \\\\boldsymbol{x_{2}},..., \\\\boldsymbol{x_{k}}}$ l\xe0 ***\u0111\u1ed9c l\u1eadp*** tuy\u1ebfn t\xednh.\\n\\nM\u1ed9t s\u1ed1 t\xednh ch\u1ea5t cho c\xe1c v\xe9c-t\u01a1 ki\u1ec3u n\xe0y l\xe0\\n- ${k}$ v\xe9c-t\u01a1 tr\xean ho\u1eb7c l\xe0 \u0111\u1ed9c l\u1eadp tuy\u1ebfn t\xednh, ho\u1eb7c l\xe0 ph\u1ee5 thu\u1ed9c tuy\u1ebfn t\xednh, ch\u1ee9 kh\xf4ng c\xf3 lo\u1ea1i kh\xe1c.\\n- N\u1ebfu \xedt nh\u1ea5t m\u1ed9t trong s\u1ed1 c\xe1c v\xe9c-t\u01a1 ${\\\\boldsymbol{x_{1}}, \\\\boldsymbol{x_{2}},..., \\\\boldsymbol{x_{k}}}$ l\xe0 v\xe9c-t\u01a1 ${\\\\boldsymbol{0}}$ th\xec ch\xfang s\u1ebd ph\u1ee5 thu\u1ed9c tuy\u1ebfn t\xednh. T\xednh ch\u1ea5t n\xe0y c\u0169ng t\u01b0\u01a1ng \u0111\u01b0\u01a1ng v\u1edbi vi\u1ec7c c\xf3 2 v\xe9c-t\u01a1 gi\u1ed1ng nhau trong t\u1eadp ${k}$ v\xe9c-t\u01a1 tr\xean.\\n- T\u1eadp c\xe1c v\xe9c-t\u01a1 tr\xean l\xe0 ph\u1ee5 thu\u1ed9c tuy\u1ebfn t\xednh n\u1ebfu nh\u01b0 m\u1ed9t trong s\u1ed1 c\xe1c v\xe9c-t\u01a1 \u0111\xf3 c\xf3 th\u1ec3 \u0111\u01b0\u1ee3c bi\u1ec3u di\u1ec5n d\u01b0\u1edbi d\u1ea1ng t\u1ed5 h\u1ee3p tuy\u1ebfn t\xednh c\u1ee7a c\xe1c v\xe9c-t\u01a1 c\xf2n l\u1ea1i.\\n- Ta vi\u1ebft t\u1ea5t c\u1ea3 v\xe9c-t\u01a1 th\xe0nh c\xe1c c\u1ed9t c\u1ee7a m\u1ed9t ma tr\u1eadn ${\\\\boldsymbol{A}}$, sau \u0111\xf3 bi\u1ec3u di\u1ec5n ph\xe9p kh\u1eed Gaussian, ta \u0111\u01b0\u1ee3c c\xe1c pivot columns s\u1ebd \u0111\u1ed9c l\u1eadp tuy\u1ebfn t\xednh v\u1edbi c\xe1c v\xe9c-t\u01a1 \u1edf b\xean tr\xe1i c\u1ee7a v\xe9c-t\u01a1 \u0111\xf3, c\xf2n c\xe1c c\u1ed9t kh\xf4ng ph\u1ea3i pivot columns s\u1ebd c\xf3 th\u1ec3 \u0111\u01b0\u1ee3c bi\u1ec3u di\u1ec5n d\u01b0\u1edbi d\u1ea1ng m\u1ed9t t\u1ed5 h\u1ee3p tuy\u1ebfn t\xednh c\u1ee7a c\xe1c pivot columns \u1edf b\xean tr\xe1i c\u1ee7a n\xf3. N\u1ebfu t\u1ea5t c\u1ea3 c\xe1c c\u1ed9t \u0111\u1ec1u l\xe0 pivot columns th\xec t\u1ea5t c\u1ea3 c\xe1c v\xe9c-t\u01a1 \u0111\xf3 l\xe0 \u0111\u1ed9c l\u1eadp tuy\u1ebfn t\xednh, c\xf2n kh\xf4ng th\xec ch\xfang s\u1ebd l\xe0 ph\u1ee5 thu\u1ed9c tuy\u1ebfn t\xednh.\\n\\n### 4. C\u01a1 s\u1edf v\xe0 rank\\n\\n#### 4.1. H\u1ec7 sinh c\u1ee7a m\u1ed9t kh\xf4ng gian v\xe9c-t\u01a1\\nCho m\u1ed9t kh\xf4ng gian v\xe9c-t\u01a1 ${V = (\\\\mathcal{V}, + , \\\\cdot)}$ v\xe0 m\u1ed9t t\u1eadp c\xe1c v\xe9c-t\u01a1 ${\\\\mathcal{A} = \\\\\\\\{\\\\boldsymbol{x_{1}}, \\\\boldsymbol{x_{2}},..., \\\\boldsymbol{x_{k}}\\\\\\\\} \\\\subseteq \\\\mathcal{V}}$ . N\u1ebfu m\u1ed7i v\xe9c-t\u01a1 ${\\\\boldsymbol{v} \\\\in \\\\mathcal{V}}$ \u0111\u1ec1u c\xf3 th\u1ec3 bi\u1ec3u di\u1ec5n l\xe0 m\u1ed9t t\u1ed5 h\u1ee3p tuy\u1ebfn t\xednh c\u1ee7a ${\\\\boldsymbol{x_{1}}, \\\\boldsymbol{x_{2}},..., \\\\boldsymbol{x_{k}}}$, th\xec ${\\\\mathcal{A}}$ \u0111\u01b0\u1ee3c g\u1ecdi l\xe0 h\u1ec7 sinh c\u1ee7a ${V}$. T\u1eadp t\u1ea5t c\u1ea3 t\u1ed5 h\u1ee3p tuy\u1ebfn t\xednh c\u1ee7a ${\\\\mathcal{A}}$ \u0111\u01b0\u1ee3c g\u1ecdi l\xe0 m\u1ed9t span c\u1ee7a ${\\\\mathcal{A}}$. N\u1ebfu ${\\\\mathcal{A}}$ span kh\xf4ng gian v\xe9c-t\u01a1 ${V}$, ch\xfang ta vi\u1ebft ${V = span[\\\\mathcal{A}]}$ ho\u1eb7c ${V = span[\\\\boldsymbol{x_{1}}, \\\\boldsymbol{x_{2}},..., \\\\boldsymbol{x_{k}}]}$.\\n\\n#### 4.2. C\u01a1 s\u1edf c\u1ee7a m\u1ed9t kh\xf4ng gian v\xe9c-t\u01a1\\nCho m\u1ed9t kh\xf4ng gian v\xe9c-t\u01a1 ${V = (\\\\mathcal{V}, + , \\\\cdot)}$ v\xe0 h\u1ec7 sinh ${\\\\mathcal{A} \\\\subseteq \\\\mathcal{V}}$, ${\\\\mathcal{A}}$ \u0111\u01b0\u1ee3c g\u1ecdi l\xe0 h\u1ec7 sinh nh\u1ecf nh\u1ea5t n\u1ebfu kh\xf4ng t\u1ed3n t\u1ea1i m\u1ed9t h\u1ec7 sinh nh\u1ecf h\u01a1n n\xe0o kh\xe1c m\xe0 ${\\\\tilde{\\\\mathcal{A}} \\\\subsetneq \\\\mathcal{A} \\\\subseteq \\\\mathcal{V}}$ span kh\xf4ng gian v\xe9c-t\u01a1 ${V}$. T\u1ea5t c\u1ea3 h\u1ec7 sinh \u0111\u1ed9c l\u1eadp tuy\u1ebfn t\xednh c\u1ee7a kh\xf4ng gian v\xe9c-t\u01a1 ${V}$ l\xe0 nh\u1ecf nh\u1ea5t v\xe0 \u0111\u01b0\u1ee3c g\u1ecdi l\xe0 c\u01a1 s\u1edf c\u1ee7a ${V}$.\\n\\nV\u1edbi ${V = (\\\\mathcal{V}, + , \\\\cdot)}$ l\xe0 m\u1ed9t kh\xf4ng gian v\xe9c-t\u01a1 v\xe0 ${\\\\mathcal{B} \\\\subseteq \\\\mathcal{V}}$ v\xe0 ${\\\\mathcal{B} \\\\ne \\\\emptyset}$. T\u1ea5t c\u1ea3 m\u1ec7nh \u0111\u1ec1 sau l\xe0 t\u01b0\u01a1ng \u0111\u01b0\u01a1ng\\n- ${\\\\mathcal{B}}$ l\xe0 m\u1ed9t c\u01a1 s\u1edf c\u1ee7a ${V}$.\\n- ${\\\\mathcal{B}}$ l\xe0 h\u1ec7 sinh nh\u1ecf nh\u1ea5t.\\n- ${\\\\mathcal{B}}$ l\xe0 m\u1ed9t t\u1eadp g\u1ed3m s\u1ed1 v\xe9c-t\u01a1 \u0111\u1ed9c l\u1eadp tuy\u1ebfn t\xednh l\u1edbn nh\u1ea5t c\u1ee7a ${V}$.\\n- T\u1ea5t c\u1ea3 ${\\\\boldsymbol{v} \\\\in \\\\mathcal{V}}$ l\xe0 m\u1ed9t t\u1ed5 h\u1ee3p tuy\u1ebfn t\xednh c\u1ee7a c\xe1c v\xe9c-t\u01a1 trong ${\\\\mathcal{B}}$ v\xe0 t\u1ea5t c\u1ea3 t\u1ed5 h\u1ee3p tuy\u1ebfn t\xednh l\xe0 duy nh\u1ea5t. N\u1ebfu ${\\\\boldsymbol{x} = \\\\sum_{i=1}^{k}\\\\lambda_{i}b_{i} = \\\\sum_{i=1}^{k}\\\\psi_{i}b_{i}}$ th\xec ${\\\\lambda_{i} = \\\\psi_{i}}$.\\n\\nTa c\xf3 v\xed d\u1ee5 v\u1ec1 h\u1ec7 sinh chu\u1ea9n t\u1eafc c\u1ee7a ${\\\\Bbb R^{3}}$ l\xe0\\n<p style={{textAlign: \\"center\\"}}>\\n\\n${\\n    \\\\mathcal{B} = \\\\\\\\{\\n\\\\begin{bmatrix} \\n1 \\\\\\\\\\\\\\\\ \\n0 \\\\\\\\\\\\\\\\\\n0 \\\\\\\\\\\\\\\\\\n\\\\end{bmatrix}, \\n\\\\begin{bmatrix} \\n0 \\\\\\\\\\\\\\\\ \\n1 \\\\\\\\\\\\\\\\\\n0 \\\\\\\\\\\\\\\\\\n\\\\end{bmatrix}, \\n\\\\begin{bmatrix} \\n0 \\\\\\\\\\\\\\\\ \\n0 \\\\\\\\\\\\\\\\\\n1 \\\\\\\\\\\\\\\\\\n\\\\end{bmatrix}\\n\\\\\\\\}\\n}$\\n\\n</p>\\n\\nM\u1ed9t s\u1ed1 k\u1ebft lu\u1eadn \u0111\u01b0\u1ee3c r\xfat ra nh\u01b0 sau\\n- T\u1ea5t c\u1ea3 c\u01a1 s\u1edf \u0111\u1ec1u c\xf3 s\u1ed1 c\xe1c ph\u1ea7n t\u1eed b\u1eb1ng nhau. S\u1ed1 chi\u1ec1u c\u1ee7a m\u1ed9t kh\xf4ng gian = s\u1ed1 c\xe1c h\u01b0\u1edbng \u0111\u1ed9c l\u1eadp nhau trong kh\xf4ng gian \u0111\xf3. S\u1ed1 chi\u1ec1u c\u1ee7a m\u1ed9t kh\xf4ng gian v\xe9c-t\u01a1 s\u1ebd l\xe0 s\u1ed1 v\xe9c-t\u01a1 trong h\u1ec7 c\u01a1 s\u1edf c\u1ee7a kh\xf4ng gian v\xe9c-t\u01a1 \u0111\xf3 dim(${V}$) = s\u1ed1 v\xe9c-t\u01a1 trong c\u01a1 s\u1edf c\u1ee7a n\xf3.\\n- N\u1ebfu ${U \\\\subseteq V}$ l\xe0 m\u1ed9t kh\xf4ng gian v\xe9c-t\u01a1 con c\u1ee7a ${V}$, th\xec dim(${U}$) ${\\\\le}$ dim(${V}$), dim(${U}$) ${=}$ dim(${V}$) khi v\xe0 ch\u1ec9 khi ${U = V}$.\\n- M\u1ed9t c\u01a1 s\u1edf c\u1ee7a kh\xf4ng gian v\xe9c-t\u01a1 con ${U = span[\\\\boldsymbol{x_{1}}, \\\\boldsymbol{x_{2}},..., \\\\boldsymbol{x_{k}}] \\\\subseteq \\\\Bbb R^{m}}$ c\xf3 th\u1ec3 \u0111\u01b0\u1ee3c t\xecm b\u1eb1ng c\xe1ch sau\\n  - Vi\u1ebft c\xe1c v\xe9c-t\u01a1 ${\\\\boldsymbol{x_{1}}, \\\\boldsymbol{x_{2}},..., \\\\boldsymbol{x_{k}}}$ d\u01b0\u1edbi d\u1ea1ng m\u1ed9t c\u1ed9t c\u1ee7a m\u1ed9t ma tr\u1eadn ${\\\\boldsymbol{A}}$.\\n  - Bi\u1ebfn \u0111\u1ed5i ${\\\\boldsymbol{A}}$ v\u1ec1 d\u1ea1ng ma tr\u1eadn b\u1eadc thang t\u1ed1i gi\u1ea3n.\\n  - C\xe1c v\xe9c-t\u01a1 li\xean k\u1ebft v\u1edbi c\xe1c pivot columns l\xe0 c\u01a1 s\u1edf c\u1ee7a kh\xf4ng gian v\xe9c-t\u01a1 con ${U}$.\\n\\n#### 4.3. Rank c\u1ee7a m\u1ed9t ma tr\u1eadn\\nH\u1ea1ng c\u1ee7a m\u1ed9t ma tr\u1eadn ${\\\\boldsymbol{A}}$ ${=}$ s\u1ed1 v\xe9c-t\u01a1 c\u1ed9t \u0111\u1ed9c l\u1eadp tuy\u1ebfn t\xednh c\u1ee7a ma tr\u1eadn ${\\\\boldsymbol{A}}$ ${=}$ s\u1ed1 v\xe9c-t\u01a1 h\xe0ng \u0111\u1ed9c l\u1eadp tuy\u1ebfn t\xednh c\u1ee7a ma tr\u1eadn ${\\\\boldsymbol{A}}$ ${=}$ rank(${\\\\boldsymbol{A}}$) ${=}$ rk(${\\\\boldsymbol{A}}$).\\n\\nDo v\u1eady, ta c\xf3 m\u1ed9t s\u1ed1 nh\u1eadn x\xe9t sau\\n- rk(${\\\\boldsymbol{A}}$) ${=}$ rk(${\\\\boldsymbol{A^{T}}}$).\\n- C\xe1c v\xe9c-t\u01a1 c\u1ed9t c\u1ee7a ${\\\\boldsymbol{A \\\\in \\\\Bbb R^{m \\\\times n}}}$ span m\u1ed9t kh\xf4ng gian v\xe9c-t\u01a1 ${U \\\\subseteq \\\\Bbb R^{m}}$ v\u1edbi dim(${U}$) ${=}$ rk(${\\\\boldsymbol{A}}$).\\n- C\xe1c v\xe9c-t\u01a1 h\xe0ng c\u1ee7a ${\\\\boldsymbol{A \\\\in \\\\Bbb R^{m \\\\times n}}}$ span m\u1ed9t kh\xf4ng gian v\xe9c-t\u01a1 ${W \\\\subseteq \\\\Bbb R^{n}}$ v\u1edbi dim(${W}$) ${=}$ rk(${\\\\boldsymbol{A}}$).\\n- V\u1edbi m\u1ecdi ${\\\\boldsymbol{A \\\\in \\\\Bbb R^{n \\\\times n}}}$, ${\\\\boldsymbol{A}}$ l\xe0 ma tr\u1eadn kh\u1ea3 ngh\u1ecbch khi v\xe0 ch\u1ec9 khi rk(${\\\\boldsymbol{A}}$) ${= n}$.\\n- H\u1ec7 ph\u01b0\u01a1ng tr\xecnh tuy\u1ebfn t\xednh ${\\\\boldsymbol{Ax} = \\\\boldsymbol{b}}$ c\xf3 nghi\u1ec7m n\u1ebfu rk(${\\\\boldsymbol{A}}$) ${=}$ rk(${\\\\boldsymbol{A|b}}$).\\n- V\u1edbi ${\\\\boldsymbol{A \\\\in \\\\Bbb R^{m \\\\times n}}}$, kh\xf4ng gian v\xe9c-t\u01a1 con c\u1ee7a b\u1ed9 nghi\u1ec7m ph\u01b0\u01a1ng tr\xecnh ${\\\\boldsymbol{Ax} = \\\\boldsymbol{0}}$ c\xf3 dim ${= n - }$ rk(${\\\\boldsymbol{A}}$).\\n- M\u1ed9t ma tr\u1eadn ${\\\\boldsymbol{A \\\\in \\\\Bbb R^{m \\\\times n}}}$ \u0111\u01b0\u1ee3c g\u1ecdi l\xe0 ma tr\u1eadn h\u1ea1ng \u0111\u1ea7y \u0111\u1ee7 n\u1ebfu rk(${\\\\boldsymbol{A}}$) ${= min(m, n)}$.\\n\\n### 5. \xc1nh x\u1ea1 tuy\u1ebfn t\xednh\\nHai kh\xf4ng gian v\xe9c-t\u01a1 th\u1ef1c ${V, W}$, m\u1ed9t \xe1nh x\u1ea1 ${\\\\Phi: V \\\\to W}$ b\u1ea3o to\xe0n c\u1ea5u tr\xfac c\xe1c kh\xf4ng gian v\xe9c-t\u01a1 n\u1ebfu\\n<p style={{textAlign: \\"center\\"}}>\\n\\n${\\n\\\\Phi(x+y) = \\\\Phi(x) + \\\\Phi(y) \\\\\\\\\\\\\\\\\\n\\\\Phi(\\\\lambda x) = \\\\lambda \\\\Phi(x)  \\n}$\\n\\n</p>\\n\\nV\u1edbi t\u1ea5t c\u1ea3 ${x, y \\\\in V}$ v\xe0 ${\\\\lambda \\\\in \\\\Bbb R}$.\\n\\n\xc1nh x\u1ea1 tuy\u1ebfn t\xednh: V\u1edbi c\xe1c kh\xf4ng gian v\xe9c-t\u01a1 ${V, W}$, m\u1ed9t \xe1nh x\u1ea1 ${\\\\Phi: V \\\\to W}$ \u0111\u01b0\u1ee3c g\u1ecdi l\xe0 m\u1ed9t \xe1nh x\u1ea1 tuy\u1ebfn t\xednh n\u1ebfu ${\\\\forall x, y \\\\in V, \\\\forall \\\\lambda, \\\\psi \\\\in \\\\Bbb R: \\\\Phi(\\\\lambda x+ \\\\psi y) = \\\\lambda \\\\Phi(x) + \\\\psi \\\\Phi(y)}$. \xc1nh x\u1ea1 tuy\u1ebfn t\xednh c\xf3 th\u1ec3 \u0111\u01b0\u1ee3c bi\u1ec3u di\u1ec5n d\u1ea1ng ma tr\u1eadn, v\u1ec1 ph\u1ea7n n\xe0y m\xecnh s\u1ebd n\xf3i \u1edf d\u01b0\u1edbi.\\n\\nHai kh\xf4ng gian v\xe9c-t\u01a1 ${V}$ v\xe0 ${W}$ c\xf3 chi\u1ec1u h\u1eefu h\u1ea1n \u0111\u01b0\u1ee3c g\u1ecdi l\xe0 \u0111\u1eb3ng c\u1ea5u khi v\xe0 ch\u1ec9 khi dim(${V}$) ${=}$ dim(${W}$). Do v\u1eady, t\u1ed3n t\u1ea1i m\u1ed9t song \xe1nh gi\u1eefa 2 kh\xf4ng gian v\xe9c-t\u01a1 c\xf9ng s\u1ed1 chi\u1ec1u. T\u1ee9c l\xe0, hai kh\xf4ng gian v\xe9c-t\u01a1 c\xf3 s\u1ed1 chi\u1ec1u b\u1eb1ng nhau l\xe0 hai th\u1ee9 gi\u1ed1ng nhau, khi m\xe0 n\xf3 c\xf3 th\u1ec3 \u0111\u01b0\u1ee3c bi\u1ebfn \u0111\u1ed5i sang nhau m\xe0 kh\xf4ng m\u1ea5t m\xe1t th\xf4ng tin g\xec.\\n\\nTa c\xf3 m\u1ed9t s\u1ed1 t\xednh ch\u1ea5t c\u1ee7a \xe1nh x\u1ea1 tuy\u1ebfn t\xednh\\n- N\u1ebfu \xe1nh x\u1ea1 tuy\u1ebfn t\xednh ${\\\\Phi: V \\\\to W}$ v\xe0 ${\\\\psi: W \\\\to X}$, ph\xe9p \xe1nh x\u1ea1 ${\\\\psi \\\\circ \\\\Phi: V \\\\to X}$ c\u0169ng l\xe0 m\u1ed9t \xe1nh x\u1ea1 tuy\u1ebfn t\xednh.\\n- N\u1ebfu ${\\\\Phi: V \\\\to W}$ l\xe0 m\u1ed9t \u0111\u1eb3ng c\u1ea5u th\xec ${\\\\Phi^{-1}: W \\\\to V}$ c\u0169ng l\xe0 m\u1ed9t \u0111\u1eb3ng c\u1ea5u.\\n- N\u1ebfu ${\\\\Phi: V \\\\to W}$, ${\\\\psi: V \\\\to W}$ l\xe0 \xe1nh x\u1ea1 tuy\u1ebfn t\xednh th\xec ${\\\\Phi + \\\\psi, \\\\lambda \\\\Phi}$ v\u1edbi ${\\\\lambda \\\\in \\\\Bbb R}$ c\u0169ng l\xe0 c\xe1c \xe1nh x\u1ea1 tuy\u1ebfn t\xednh.\\n\\n#### 5.1. Bi\u1ec3u di\u1ec5n \xe1nh x\u1ea1 tuy\u1ebfn t\xednh d\u01b0\u1edbi d\u1ea1ng ma tr\u1eadn\\nX\xe9t m\u1ed9t kh\xf4ng gian v\xe9c-t\u01a1 ${V}$ v\u1edbi c\u01a1 s\u1edf l\xe0  ${B = (\\\\boldsymbol{b_{1}}, \\\\boldsymbol{b_{2}},..., \\\\boldsymbol{b_{n}})}$. V\u1edbi m\u1ecdi v\xe9c-t\u01a1 ${\\\\boldsymbol{x} \\\\in V}$, ta c\xf3 m\u1ed9t t\u1ed5 h\u1ee3p tuy\u1ebfn t\xednh duy nh\u1ea5t l\xe0 \\n<p style={{textAlign: \\"center\\"}}>\\n\\n${\\n\\\\boldsymbol{x} = \\\\lambda_{1} \\\\boldsymbol{b_{1}} + \\\\lambda_{2} \\\\boldsymbol{b_{2}} +...+ \\\\lambda_{n} \\\\boldsymbol{b_{n}}\\n}$\\n\\n</p>\\n\\nTh\xec ${\\\\lambda_{1}, \\\\lambda_{2},..., \\\\lambda_{n}}$ \u0111\u01b0\u1ee3c g\u1ecdi l\xe0 t\u1ecda \u0111\u1ed9 c\u1ee7a ${\\\\boldsymbol{x}}$ \u0111\u1ed1i v\u1edbi c\u01a1 s\u1edf ${B}$.\\n\\n${\\\\boldsymbol{\\\\lambda} = \\\\begin{bmatrix} \\n\\\\lambda_{1} \\\\\\\\\\\\\\\\ \\n\\\\lambda_{2} \\\\\\\\\\\\\\\\\\n\\\\vdots \\\\\\\\\\\\\\\\\\n\\\\lambda_{n} \\\\\\\\\\\\\\\\\\n\\\\end{bmatrix} }$ \u0111\u01b0\u1ee3c g\xf3i l\xe0 v\xe9c-t\u01a1 t\u1ecda \u0111\u1ed9 c\u1ee7a ${\\\\boldsymbol{x}}$ \u0111\u1ed1i v\u1edbi c\u01a1 s\u1edf ${B}$. Do v\u1eady, v\u1edbi m\u1ed9t v\xe9c-t\u01a1 v\u1edbi c\xe1c c\u01a1 s\u1edf kh\xe1c nhau th\xec s\u1ebd c\xf3 t\u1ecda \u0111\u1ed9 l\xe0 kh\xe1c nhau.\\n\\nX\xe9t c\xe1c kh\xf4ng gian v\xe9c-t\u01a1 ${V}$ v\xe0 ${W}$ v\u1edbi c\xe1c c\u01a1 s\u1edf t\u01b0\u01a1ng \u1ee9ng l\xe0 ${B = (\\\\boldsymbol{b_{1}}, \\\\boldsymbol{b_{2}},..., \\\\boldsymbol{b_{n}})}$ v\xe0 ${C = (\\\\boldsymbol{c_{1}}, \\\\boldsymbol{c_{2}},..., \\\\boldsymbol{c_{m}})}$v\xe0 m\u1ed9t \xe1nh x\u1ea1 tuy\u1ebfn t\xednh ${\\\\Phi: V \\\\to W}$. V\u1edbi ${j \\\\in \\\\\\\\{1, 2,..., n\\\\\\\\}}$\\n<p style={{textAlign: \\"center\\"}}>\\n\\n${\\n\\\\Phi(\\\\boldsymbol{b_{j}}) = \\\\lambda_{1j}\\\\boldsymbol{c_{1}} + \\\\lambda_{1j}\\\\boldsymbol{c_{2}} +...+ \\\\lambda_{mj}\\\\boldsymbol{c_{m}} = \\\\sum_{i=1}^{m}\\\\lambda_{ij}\\\\boldsymbol{c_{i}}\\n}$\\n\\n</p>\\n\\nl\xe0 m\u1ed9t bi\u1ec3u di\u1ec5n duy nh\u1ea5t c\u1ee7a ${\\\\Phi(\\\\boldsymbol{b_{j}})}$ v\u1edbi c\u01a1 s\u1edf ${C}$. Ch\xfang ta g\u1ecdi ma tr\u1eadn ${\\\\boldsymbol{A_{\\\\Phi}}}$ k\xedch th\u01b0\u1edbc ${m \\\\times n}$ v\u1edbi ${\\\\boldsymbol{A_{\\\\Phi}(i, j)} = \\\\lambda_{ij}}$ l\xe0 ma tr\u1eadn bi\u1ebfn \u0111\u1ed5i c\u1ee7a ${\\\\Phi}$ \u1ee9ng v\u1edbi c\u01a1 s\u1edf ${B}$ c\u1ee7a kh\xf4ng gian v\xe9c-t\u01a1 ${V}$ v\xe0 c\u01a1 s\u1edf ${C}$ c\u1ee7a kh\xf4ng gian v\xe9c-t\u01a1 ${W}$.\\n\\nT\u1ecda \u0111\u1ed9 c\u1ee7a ${\\\\Phi(\\\\boldsymbol{b_{j}})}$ \u1ee9ng v\u1edbi c\u01a1 s\u1edf ${C}$ c\u1ee7a ${W}$ l\xe0 c\u1ed9t th\u1ee9 ${j_{th}}$ c\u1ee7a ma tr\u1eadn ${\\\\boldsymbol{A_{\\\\Phi}}}$.\\n\\nDo \u0111\xf3, n\u1ebfu ${\\\\boldsymbol{\\\\hat{x}}}$ l\xe0 v\xe9c-t\u01a1 t\u1ecda \u0111\u1ed9 c\u1ee7a ${\\\\boldsymbol{x} \\\\in V}$ \u1ee9ng v\u1edbi c\u01a1 s\u1edf ${B}$ v\xe0 ${\\\\boldsymbol{\\\\hat{y}}}$ l\xe0 v\xe9c-t\u01a1 t\u1ecda \u0111\u1ed9 c\u1ee7a ${\\\\boldsymbol{y} = \\\\Phi(\\\\boldsymbol{x}) \\\\in W}$ \u1ee9ng v\u1edbi c\u01a1 s\u1edf ${C}$. Ta c\xf3\\n<p style={{textAlign: \\"center\\"}}>\\n\\n${\\n\\\\boldsymbol{\\\\hat{y}} = \\\\boldsymbol{A_{\\\\Phi}} \\\\boldsymbol{\\\\hat{x}}\\n}$\\n\\n</p>\\n\\n#### 5.2. Chuy\u1ec3n \u0111\u1ed5i c\u01a1 s\u1edf\\nM\u1ed9t \xe1nh x\u1ea1 tuy\u1ebfn t\xednh ${\\\\Phi: V \\\\to W}$, x\xe9t 2 c\u01a1 s\u1edf sau\\n<p style={{textAlign: \\"center\\"}}>\\n\\n${B = (\\\\boldsymbol{b_{1}}, \\\\boldsymbol{b_{2}},..., \\\\boldsymbol{b_{n}})}$ v\xe0 ${\\\\tilde{B} = (\\\\boldsymbol{\\\\tilde{b_{1}}}, \\\\boldsymbol{\\\\tilde{b_{2}}},..., \\\\boldsymbol{\\\\tilde{b_{n}}})}$ c\u1ee7a ${V}$.\\n\\n${C = (\\\\boldsymbol{c_{1}}, \\\\boldsymbol{c_{2}},..., \\\\boldsymbol{c_{n}})}$ v\xe0 ${\\\\tilde{C} = (\\\\boldsymbol{\\\\tilde{c_{1}}}, \\\\boldsymbol{\\\\tilde{c_{2}}},..., \\\\boldsymbol{\\\\tilde{c_{n}}})}$ c\u1ee7a ${W}$.\\n\\n</p>\\n\\n${\\\\boldsymbol{A_{\\\\Phi}} \\\\in \\\\Bbb R^{m \\\\times n}}$ l\xe0 ma tr\u1eadn bi\u1ebfn \u0111\u1ed5i c\u1ee7a \xe1nh x\u1ea1 tuy\u1ebfn t\xednh ${\\\\Phi: V \\\\to W}$ \u1ee9ng v\u1edbi c\u01a1 s\u1edf ${B}$ v\xe0 ${C}$.\\n\\n${\\\\boldsymbol{\\\\tilde{A_{\\\\Phi}}} \\\\in \\\\Bbb R^{m \\\\times n}}$ l\xe0 ma tr\u1eadn bi\u1ebfn \u0111\u1ed5i c\u1ee7a \xe1nh x\u1ea1 tuy\u1ebfn t\xednh ${\\\\Phi: V \\\\to W}$ \u1ee9ng v\u1edbi c\u01a1 s\u1edf ${\\\\tilde{B}}$ v\xe0 ${\\\\tilde{C}}$.\\n\\nB\u1eb1ng vi\u1ec7c chuy\u1ec3n \u0111\u1ed5i c\u01a1 s\u1edf v\xe0 c\xe1c bi\u1ec3u di\u1ec5n c\u1ee7a c\xe1c v\xe9c-t\u01a1, c\xe1c ma tr\u1eadn bi\u1ebfn \u0111\u1ed5i \u1ee9ng v\u1edbi c\xe1c c\u01a1 s\u1edf m\u1edbi c\xf3 th\u1ec3 \u1edf d\u1ea1ng r\u1ea5t \u0111\u01a1n gi\u1ea3n v\xe0 d\u1ec5 d\xe0ng th\u1ef1c hi\u1ec7n c\xe1c b\u01b0\u1edbc t\xednh to\xe1n trung gian.\\n\\nV\u1edbi 2 ma tr\u1eadn bi\u1ebfn \u0111\u1ed5i nh\u01b0 \u1edf ph\u1ea7n tr\xean, t\u01b0\u01a1ng quan gi\u1eefa ch\xfang \u0111\u01b0\u1ee3c bi\u1ec3u di\u1ec5n nh\u01b0 sau\\n<p style={{textAlign: \\"center\\"}}>\\n\\n${\\\\boldsymbol{\\\\tilde{A_{\\\\Phi}}} = \\\\boldsymbol{T^{-1}}\\\\boldsymbol{A_{\\\\phi}}\\\\boldsymbol{S}}$\\n\\n</p>\\n\\nV\u1edbi ${\\\\boldsymbol{S} \\\\in \\\\Bbb R^{n \\\\times n}}$ l\xe0 ma tr\u1eadn bi\u1ebfn \u0111\u1ed5i c\u1ee7a ph\xe9p \xe1nh x\u1ea1 \u0111\u01a1n v\u1ecb li\xean k\u1ebft t\u1ecda \u0111\u1ed9 c\u1ee7a v\xe9c-t\u01a1 \u1ee9ng v\u1edbi c\u01a1 s\u1edf ${\\\\tilde{B}}$ l\xean t\u1ecda \u0111\u1ed9 \u1ee9ng v\u1edbi c\u01a1 s\u1edf ${B}$.\\nV\u1edbi ${\\\\boldsymbol{T} \\\\in \\\\Bbb R^{m \\\\times m}}$ l\xe0 ma tr\u1eadn bi\u1ebfn \u0111\u1ed5i c\u1ee7a ph\xe9p \xe1nh x\u1ea1 \u0111\u01a1n v\u1ecb li\xean k\u1ebft t\u1ecda \u0111\u1ed9 c\u1ee7a v\xe9c-t\u01a1 \u1ee9ng v\u1edbi c\u01a1 s\u1edf ${\\\\tilde{C}}$ l\xean t\u1ecda \u0111\u1ed9 \u1ee9ng v\u1edbi c\u01a1 s\u1edf ${C}$.\\n(Ph\u1ea7n ch\u1ee9ng minh chi ti\u1ebft b\u1ea1n c\xf3 th\u1ec3 truy c\u1eadp link s\xe1ch m\xe0 m\xecnh \u0111\u1ec3 \u1edf tr\xean)\\n\\nNh\u01b0 v\u1eady, m\u1ed9t ph\xe9p bi\u1ebfn \u0111\u1ed5i c\u01a1 s\u1edf trong ${V}$ (c\u01a1 s\u1edf ${B}$ \u0111\u01b0\u1ee3c thay th\u1ebf b\u1eb1ng c\u01a1 s\u1edf ${\\\\tilde{B}}$) v\xe0 ${W}$ (c\u01a1 s\u1edf ${C}$ \u0111\u01b0\u1ee3c thay th\u1ebf b\u1eb1ng c\u01a1 s\u1edf ${\\\\tilde{C}}$), ma tr\u1eadn bi\u1ebfn \u0111\u1ed5i ${\\\\boldsymbol{A_{\\\\Phi}}}$ c\u1ee7a ph\xe9p \xe1nh x\u1ea1 tuy\u1ebfn t\xednh ${\\\\Phi: V \\\\to W}$ \u0111\u01b0\u1ee3c thay th\u1ebf b\u1edfi ma tr\u1eadn bi\u1ebfn \u0111\u1ed5i t\u01b0\u01a1ng \u0111\u01b0\u01a1ng ${\\\\boldsymbol{\\\\tilde{A_{\\\\Phi}}}}$.\\n\\n![Basis Change](./images/basischange.PNG)\\n\\nNh\xecn v\xe0o h\xecnh tr\xean, ta th\u1ea5y \u0111\u01b0\u1ee3c\\n<p style={{textAlign: \\"center\\"}}>\\n\\n${\\\\Phi_{\\\\tilde{B}\\\\tilde{C}} = \\\\Xi_{\\\\tilde{C}C} \\\\circ \\\\Phi_{CB} \\\\circ \\\\psi_{B\\\\tilde{B}} = \\\\Xi_{C\\\\tilde{C}}^{-1} \\\\circ \\\\Phi_{CB} \\\\circ \\\\psi_{B\\\\tilde{B}}}$\\n\\n</p>\\n\\nV\u1edbi ${\\\\psi_{B\\\\tilde{B}} = id_{V}}$ v\xe0 ${\\\\Xi_{\\\\tilde{C}C} = id_{W}}$ l\xe0 c\xe1c \xe1nh x\u1ea1 \u0111\u01a1n v\u1ecb \xe1nh x\u1ea1 c\xe1c v\xe9c-t\u01a1 l\xean ch\xednh ch\xfang, nh\u01b0ng m\xe0 \u1ee9ng v\u1edbi c\xe1c c\u01a1 s\u1edf kh\xe1c nhau.\\n\\nSau \u0111\xe2y, m\xecnh \u0111\u01b0a ra 2 kh\xe1i ni\u1ec7m sau v\u1ec1 ma tr\u1eadn\\n- T\u01b0\u01a1ng \u0111\u01b0\u01a1ng: 2 ma tr\u1eadn ${\\\\boldsymbol{A}, \\\\boldsymbol{\\\\tilde{A}} \\\\in \\\\Bbb R^{m \\\\times n}}$ l\xe0 t\u01b0\u01a1ng \u0111\u01b0\u01a1ng n\u1ebfu t\u1ed3n t\u1ea1i hai ma tr\u1eadn kh\u1ea3 ng\u1ecbch ${\\\\boldsymbol{S} \\\\in \\\\Bbb R^{n \\\\times n}}$ v\xe0  ${\\\\boldsymbol{T} \\\\in \\\\Bbb R^{m \\\\times m}}$ th\u1ecfa m\xe3n ${\\\\boldsymbol{\\\\tilde{A}} = \\\\boldsymbol{T}^{-1}\\\\boldsymbol{A}\\\\boldsymbol{S}}$.\\n- \u0110\u1ed3ng d\u1ea1ng: 2 ma tr\u1eadn ${\\\\boldsymbol{A}, \\\\boldsymbol{\\\\tilde{A}} \\\\in \\\\Bbb R^{n \\\\times n}}$ l\xe0 \u0111\u1ed3ng d\u1ea1ng n\u1ebfu t\u1ed3n t\u1ea1i ma tr\u1eadn kh\u1ea3 ng\u1ecbch ${\\\\boldsymbol{S} \\\\in \\\\Bbb R^{n \\\\times n}}$ th\u1ecfa m\xe3n ${\\\\boldsymbol{\\\\tilde{A}} = \\\\boldsymbol{S}^{-1}\\\\boldsymbol{A}\\\\boldsymbol{S}}$.\\n\\nCu\u1ed1i c\xf9ng, x\xe9t c\xe1c kh\xf4ng gian v\xe9c-t\u01a1 ${V, W, X}$. C\xe1c \xe1nh x\u1ea1 tuy\u1ebfn t\xednh ${\\\\Phi: V \\\\to W}$ v\u1edbi ma tr\u1eadn bi\u1ebfn \u0111\u1ed5i l\xe0 ${\\\\boldsymbol{A_{\\\\Phi}}}$ v\xe0 ${\\\\psi: W \\\\to X}$ v\u1edbi ma tr\u1eadn bi\u1ebfn \u0111\u1ed5i l\xe0 ${\\\\boldsymbol{A_{\\\\psi}}}$, \xe1nh x\u1ea1 ${\\\\psi \\\\circ \\\\Phi: V \\\\to X}$ c\u0169ng l\xe0 \xe1nh x\u1ea1 tuy\u1ebfn t\xednh v\u1edbi ma tr\u1eadn bi\u1ebfn \u0111\u1ed5i l\xe0 ${\\\\boldsymbol{A_{\\\\psi \\\\circ \\\\Phi}} = \\\\boldsymbol{A_{\\\\psi}}\\\\boldsymbol{A_{\\\\Phi}}}$. Ch\u1ee9ng minh nh\u01b0 sau\\n<p style={{textAlign: \\"center\\"}}>\\n\\n${\\n\\\\boldsymbol{A_{\\\\Phi}}: B \\\\to C; \\\\boldsymbol{\\\\tilde{A_{\\\\Phi}}}: \\\\tilde{B} \\\\to \\\\tilde{C}; \\\\boldsymbol{S}: \\\\tilde{B} \\\\to B; \\\\boldsymbol{T}: \\\\tilde{C} \\\\to C\\n}$\\n\\n${\\n\\\\Rightarrow \\\\tilde{B} \\\\to \\\\tilde{C} = \\\\tilde{B} \\\\to B \\\\to C \\\\to \\\\tilde{C}\\n}$\\n\\n${\\n\\\\Rightarrow \\\\boldsymbol{\\\\tilde{A_{\\\\Phi}}} = \\\\boldsymbol{T}^{-1}\\\\boldsymbol{A_{\\\\Phi}}\\\\boldsymbol{S}\\n}$\\n\\n</p>\\n\\nB\u1edfi v\xec\\n\\n<p style={{textAlign: \\"center\\"}}>\\n\\n${\\n\\\\boldsymbol{x} \\\\longmapsto \\\\boldsymbol{Sx} \\\\longmapsto \\\\boldsymbol{A_{\\\\Phi}}(\\\\boldsymbol{Sx}) \\\\longmapsto \\\\boldsymbol{T}^{-1}(\\\\boldsymbol{A_{\\\\Phi}}(\\\\boldsymbol{Sx})) = \\\\boldsymbol{\\\\tilde{A_{\\\\Phi}}}(\\\\boldsymbol{x})\\n}$\\n\\n</p>\\n\\n#### 5.3. Image v\xe0 kernel\\nCho ${\\\\Phi: V \\\\to W}$, ch\xfang ta \u0111\u1ecbnh ngh\u0129a kernel/null space l\xe0\\n<p style={{textAlign: \\"center\\"}}> \\n\\n${Ker(\\\\Phi) := \\\\Phi^{-1}(\\\\boldsymbol{0_{W}}) = \\\\\\\\{\\\\boldsymbol{v} \\\\in V: \\\\Phi(\\\\boldsymbol{v}) = \\\\boldsymbol{0_{W}}\\\\\\\\}}$.\\n\\n</p>\\n\\nV\xe0 image/range l\xe0\\n<p style={{textAlign: \\"center\\"}}> \\n\\n${Im(\\\\Phi) := \\\\Phi(V) = \\\\\\\\{\\\\boldsymbol{w} \\\\in W | \\\\exists \\\\boldsymbol{v} \\\\in V: \\\\Phi(\\\\boldsymbol{v}) = \\\\boldsymbol{w}\\\\\\\\}}$.\\n\\n</p>\\n\\nCh\xfang ta g\u1ecdi V v\xe0 W l\u1ea7n l\u01b0\u1ee3t l\xe0 c\xe1c domain v\xe0 codomain c\u1ee7a ${\\\\Phi}$.\\nM\u1ed9t v\xe0i t\xednh ch\u1ea5t \u0111\u01b0\u1ee3c r\xfat ra nh\u01b0 sau\\n- Kernel kh\xf4ng bao gi\u1edd l\xe0 t\u1eadp r\u1ed7ng khi m\xe0 ta lu\xf4n c\xf3 ${\\\\Phi({\\\\boldsymbol{0_{V}}}) = \\\\boldsymbol{0_{W}}}$.\\n- ${Im(\\\\Phi) \\\\subseteq W }$ l\xe0 m\u1ed9t kh\xf4ng gian v\xe9c-t\u01a1 con c\u1ee7a ${W}$ v\xe0 ${Ker(\\\\Phi) \\\\subseteq V}$ l\xe0 m\u1ed9t kh\xf4ng gian v\xe9c-t\u01a1 con c\u1ee7a ${V}$.\\n- ${\\\\Phi}$ l\xe0 m\u1ed9t \u0111\u01a1n \xe1nh khi v\xe0 ch\u1ec9 khi ${Ker(\\\\Phi) = \\\\\\\\{\\\\boldsymbol{0}\\\\\\\\}}$.\\n\\nCho m\u1ed9t ma tr\u1eadn ${\\\\boldsymbol{A} \\\\in \\\\Bbb R^{m \\\\times n}}$ l\xe0 m\u1ed9t \xe1nh x\u1ea1 tuy\u1ebfn t\xednh ${\\\\Phi: \\\\Bbb R^{n} \\\\to \\\\Bbb R^{m}, \\\\boldsymbol{x} \\\\longmapsto \\\\boldsymbol{Ax}}$. V\u1edbi ${\\\\boldsymbol{A} = [\\\\boldsymbol{a_{1}}, \\\\boldsymbol{a_{2}},..., \\\\boldsymbol{a_{n}}]}$\\n<p style={{textAlign: \\"center\\"}}> \\n\\n${\\nIm(\\\\Phi) = \\\\\\\\{\\\\boldsymbol{Ax}: x \\\\in \\\\Bbb R^{n}\\\\\\\\} = \\\\\\\\{\\\\sum_{i=1}^{n}x_{i}\\\\boldsymbol{a_{i}}: x_{1},..., x_{n} \\\\in \\\\Bbb R\\\\\\\\} = span[\\\\boldsymbol{a_{1}}, \\\\boldsymbol{a_{2}},..., \\\\boldsymbol{a_{n}}] \\\\subseteq \\\\Bbb R^{m}\\n}$.\\n\\n</p>\\n\\nImage \u1edf \u0111\xe2y s\u1ebd l\xe0 span c\u1ee7a c\xe1c c\u1ed9t trong ma tr\u1eadn ${A}$, v\xe0 c\u0169ng \u0111\u01b0\u1ee3c g\u1ecdi l\xe0 column space. B\u1edfi v\u1eady, column space l\xe0 m\u1ed9t kh\xf4ng gian v\xe9c-t\u01a1 con c\u1ee7a ${\\\\Bbb R^{m}}$.\\n- rk(${A}$) ${=}$ dim(${Im(\\\\Phi)}$).\\n- Kernel ${Ker(\\\\Phi)}$ l\xe0 nghi\u1ec7m chung c\u1ee7a h\u1ec7 ph\u01b0\u01a1ng tr\xecnh tuy\u1ebfn t\xednh ${\\\\boldsymbol{Ax} = \\\\boldsymbol{0}}$ v\xe0 bao g\u1ed3m t\u1ea5t c\u1ea3 t\u1ed5 h\u1ee3p tuy\u1ebfn t\xednh c\u1ee7a c\xe1c ph\u1ea7n t\u1eed thu\u1ed9c ${\\\\Bbb R^{n}}$ m\xe0 cho ra k\u1ebft qu\u1ea3 ${\\\\boldsymbol{0} \\\\in \\\\Bbb R^{m}}$.\\n- Kernel l\xe0 m\u1ed9t kh\xf4ng gian v\xe9c-t\u01a1 con c\u1ee7a ${\\\\Bbb R^{n}}$ t\u1ea1i \u0111\xf3 ${n}$ l\xe0 chi\u1ec1u r\u1ed9ng c\u1ee7a ma tr\u1eadn.\\n- Kernel t\u1eadp trung v\xe0o c\xe1c m\u1ed1i quan h\u1ec7 c\u1ee7a c\xe1c v\xe9c-t\u01a1 c\u1ed9t.\\n\\nV\u1edbi c\xe1c kh\xf4ng gian v\xe9c-t\u01a1 ${V, W}$ v\xe0 m\u1ed9t \xe1nh x\u1ea1 tuy\u1ebfn t\xednh ${\\\\Phi: V \\\\to W}$\\n<p style={{textAlign: \\"center\\"}}> \\n\\ndim(${Ker(\\\\Phi)}$) + dim(${Im(\\\\Phi)}$) = dim(${V}$)\\n\\n</p>\\n\\n- N\u1ebfu dim(${Im(\\\\Phi)}$) < dim(${V}$) th\xec ${Ker(\\\\Phi)}$ l\xe0 m\u1ed9t t\u1eadp kh\xf4ng t\u1ea7m th\u01b0\u1eddng, n\xf3 s\u1ebd g\u1ed3m v\xe9c-t\u01a1 ${0_{V}}$ v\xe0 c\xe1c v\xe9c-t\u01a1 kh\xe1c n\u1eefa.\\n- N\u1ebfu ${\\\\boldsymbol{A_{\\\\Phi}}}$ v\xe0 dim(${Im(\\\\Phi)}$) < dim(${V}$), th\xec ${\\\\boldsymbol{A_{\\\\Phi}x} = 0}$ c\xf3 v\xf4 s\u1ed1 nghi\u1ec7m.\\n- N\u1ebfu dim(${V}$) = dim(${W}$) th\xec ${\\\\Phi}$ l\xe0 \u0111\u01a1n \xe1nh, to\xe0n \xe1nh, song \xe1nh, ${Im(\\\\Phi) \\\\subseteq W}$.\\n\\n### 6. Kh\xf4ng gian v\xe9c-t\u01a1 Affine\\n\\n#### 6.1. Kh\xf4ng gian v\xe9c-t\u01a1 Affine con\\nV\u1edbi V l\xe0 m\u1ed9t kh\xf4ng gian v\xe9c-t\u01a1, ${\\\\boldsymbol{x_{0}} \\\\in V}$ v\xe0 ${U \\\\subseteq V}$ l\xe0 m\u1ed9t kh\xf4ng gian v\xe9c-t\u01a1. N\u1ebfu t\u1eadp con\\n<p style={{textAlign: \\"center\\"}}> \\n\\n${\\nL = \\\\boldsymbol{x_{0}} + U := \\\\\\\\{\\\\boldsymbol{x_{0}} + \\\\boldsymbol{u}: \\\\boldsymbol{u} \\\\in U\\\\\\\\} = \\\\\\\\{\\\\boldsymbol{v} \\\\in V | \\\\exists \\\\boldsymbol{u} \\\\in U: \\\\boldsymbol{v} = \\\\boldsymbol{x_{0}} + \\\\boldsymbol{u}\\\\\\\\} \\\\subseteq V\\n}$\\n\\n</p>\\n\\n\u0111\u01b0\u1ee3c g\u1ecdi l\xe0 m\u1ed9t kh\xf4ng gian v\xe9c-t\u01a1 Affine con. ${U}$ \u0111\u01b0\u1ee3c g\u1ecdi l\xe0 kh\xf4ng gian h\u01b0\u1edbng v\xe0 ${\\\\boldsymbol{x_{0}}}$ \u0111\u01b0\u1ee3c g\u1ecdi l\xe0 support point.\\n- \u0110\u1ecbnh ngh\u0129a c\u1ee7a kh\xf4ng gian v\xe9c-t\u01a1 Affine s\u1ebd kh\xf4ng ch\u1ee9a ${0}$ n\u1ebfu ${\\\\boldsymbol{x_{0}} \\\\notin U}$. V\xec th\u1ebf m\xe0 kh\xf4ng gian v\xe9c-t\u01a1 Affine kh\xf4ng ph\u1ea3i l\xe0 m\u1ed9t kh\xf4ng gian v\xe9c-t\u01a1 con c\u1ee7a ${V}$ v\u1edbi ${\\\\boldsymbol{x_{0}} \\\\notin U}$.\\n\\nCho 2 kh\xf4ng gian v\xe9c-t\u01a1 Affine ${L = \\\\boldsymbol{x_{0}} + U}$ v\xe0 ${\\\\tilde{L} = \\\\boldsymbol{\\\\tilde{x_{0}}} + \\\\tilde{U}}$ c\u1ee7a kh\xf4ng gian v\xe9c-t\u01a1 ${V}$. ${L \\\\in \\\\tilde{L}}$ khi v\xe0 ch\u1ec9 khi ${U \\\\in \\\\tilde{U}}$ v\xe0 ${\\\\boldsymbol{x_{0}} - \\\\boldsymbol{\\\\tilde{x_{0}}} \\\\in \\\\tilde{U}}$.\\n\\nCho m\u1ed9t kh\xf4ng gian v\xe9c-t\u01a1 Affine ${k}$ chi\u1ec1u ${L = \\\\boldsymbol{x_{0}} + U}$ c\u1ee7a ${V}$. N\u1ebfu ${(\\\\boldsymbol{b_{1}}, \\\\boldsymbol{b_{2}},..., \\\\boldsymbol{b_{k}})}$ l\xe0 m\u1ed9t c\u01a1 s\u1edf c\u1ee7a ${U}$, th\xec m\u1ed7i ${\\\\boldsymbol{x} \\\\in L}$ c\xf3 th\u1ec3 \u0111\u01b0\u1ee3c bi\u1ec3u di\u1ec5n duy nh\u1ea5t d\u01b0\u1edbi d\u1ea1ng\\n<p style={{textAlign: \\"center\\"}}> \\n\\n${\\n\\\\boldsymbol{x} = \\\\boldsymbol{x_{0}} + \\\\lambda_{1}\\\\boldsymbol{b_{1}} + \\\\lambda_{2}\\\\boldsymbol{b_{2}} +...+ \\\\lambda_{k}\\\\boldsymbol{b_{k}}\\n}$\\n\\n</p>\\n\\nBi\u1ec3u di\u1ec5n n\xe0y \u0111\u01b0\u1ee3c g\u1ecdi l\xe0 ph\u01b0\u01a1ng tr\xecnh tham s\u1ed1 c\u1ee7a ${L}$ v\u1edbi c\xe1c v\xe9c-t\u01a1 h\u01b0\u1edbng ${\\\\boldsymbol{b_{1}}, \\\\boldsymbol{b_{2}},..., \\\\boldsymbol{b_{k}}}$ v\xe0 c\xe1c tham s\u1ed1 ${\\\\lambda_{1}, \\\\lambda_{2},..., \\\\lambda_{k}}$.\\n\\n#### 6.2. \xc1nh x\u1ea1 Affine\\nV\u1edbi c\xe1c kh\xf4ng gian v\xe9c-t\u01a1 ${V, W}$, m\u1ed9t \xe1nh x\u1ea1 tuy\u1ebfn t\xednh ${\\\\Phi: V \\\\to W}$ v\xe0 ${\\\\lambda \\\\in W}$, c\xe1c \xe1nh x\u1ea1\\n<p style={{textAlign: \\"center\\"}}> \\n\\n${\\\\phi: V \\\\to W \\\\\\\\\\\\\\\\\\n\\\\boldsymbol{x} \\\\longmapsto \\\\boldsymbol{\\\\lambda} + \\\\Phi(\\\\boldsymbol{x})}$\\n\\n</p>\\n\\nl\xe0 m\u1ed9t \xe1nh x\u1ea1 Affine t\u1eeb ${V}$ \u0111\u1ebfn ${W}$. V\xe9c-t\u01a1 ${\\\\boldsymbol{\\\\lambda}}$ \u0111\u01b0\u1ee3c g\u1ecdi l\xe0 v\xe9c-t\u01a1 d\u1ecbch c\u1ee7a ${\\\\phi}$.\\n- M\u1ed7i \xe1nh x\u1ea1 Affine ${\\\\phi: V \\\\to W}$ l\xe0 m\u1ed9t s\u1ef1 k\u1ebft h\u1ee3p c\u1ee7a m\u1ed9t \xe1nh x\u1ea1 tuy\u1ebfn t\xednh ${\\\\Phi: V \\\\to W}$ v\xe0 m\u1ed9t ph\xe9p d\u1ecbch ${\\\\tau: W \\\\to W}$ trong ${W}$, v\u1edbi ${\\\\phi = \\\\tau \\\\circ \\\\Phi}$. \xc1nh x\u1ea1 ${\\\\Phi}$ v\xe0 ${\\\\tau}$ l\xe0 duy nh\u1ea5t.\\n- S\u1ef1 k\u1ebft h\u1ee3p ${\\\\phi^{\'} \\\\circ \\\\phi}$ c\u1ee7a \xe1nh x\u1ea1 Affine ${\\\\phi: V \\\\to W, \\\\phi^{\'}: W \\\\to X}$ c\u0169ng l\xe0 m\u1ed9t \xe1nh x\u1ea1 Affine.\\n- C\xe1c \xe1nh x\u1ea1 Affine b\u1ea3o to\xe0n c\u1ea5u tr\xfac h\xecnh h\u1ecdc. N\xf3 c\u0169ng b\u1ea3o to\xe0n s\u1ed1 chi\u1ec1u v\xe0 t\xednh ch\u1ea5t song song."},{"id":"probability","metadata":{"permalink":"/blogs/blog/probability","editUrl":"https://github.com/lam1051999/blogs/edit/main/blog/2021-07-04-probability/index.md","source":"@site/blog/2021-07-04-probability/index.md","title":"X\xe1c su\u1ea5t th\u1ed1ng k\xea c\u01a1 b\u1ea3n","description":"Probability","date":"2021-07-04T00:00:00.000Z","formattedDate":"July 4, 2021","tags":[{"label":"Probability","permalink":"/blogs/blog/tags/probability"},{"label":"Math","permalink":"/blogs/blog/tags/math"}],"readingTime":9.625,"truncated":true,"authors":[{"name":"Tr\u1ea7n L\xe2m","title":"Data Engineer","url":"https://github.com/lam1051999","imageURL":"https://github.com/lam1051999.png","key":"tranlam"}],"frontMatter":{"slug":"probability","title":"X\xe1c su\u1ea5t th\u1ed1ng k\xea c\u01a1 b\u1ea3n","authors":"tranlam","tags":["Probability","Math"],"image":"./images/probability.JPEG"},"prevItem":{"title":"\u0110\u1ea1i s\u1ed1 tuy\u1ebfn t\xednh c\u01a1 b\u1ea3n - Ph\u1ea7n 1","permalink":"/blogs/blog/linear-algebra-part-1"},"nextItem":{"title":"C\xe2y AVL, thu\u1eadt to\xe1n s\u1eafp x\u1ebfp AVL","permalink":"/blogs/blog/avl-tree"}},"content":"![Probability](./images/probability.JPEG)\\n\\nB\xe0i vi\u1ebft n\xe0y nh\u1eb1m \xf4n l\u1ea1i m\u1ed9t s\u1ed1 kh\xe1i ni\u1ec7m trong to\xe1n x\xe1c su\u1ea5t c\u01a1 b\u1ea3n, s\u1ebd kh\xf4ng c\xf3 nh\u1eefng ph\u1ea7n to\xe1n r\u1ea5t ph\u1ee9c t\u1ea1p v\xe0 d\u1ed3n d\u1eadp nh\u01b0 trong l\xfac h\u1ecdc tr\xean tr\u01b0\u1eddng l\u1edbp. Thay v\xe0o \u0111\xf3, n\u1ed9i dung s\u1ebd t\u1eadp trung v\xe0o c\xe1c ki\u1ebfn th\u1ee9c x\xe1c su\u1ea5t ph\u1ee5 tr\u1ee3 cho tr\xed tu\u1ec7 nh\u1eadn t\u1ea1o hay l\xe0 th\u1ed1ng k\xea d\u1eef li\u1ec7u. \x3c!--truncate--\x3eB\xe0i vi\u1ebft n\xe0y tham chi\u1ebfu r\u1ea5t nhi\u1ec1u \u0111\u1ebfn m\u1ed9t b\xe0i trong blog c\u1ee7a anh Ph\u1ea1m \u0110\xecnh Kh\xe1nh, c\u1ea3m \u01a1n anh Kh\xe1nh v\u1edbi m\u1ed9t series x\xe1c su\u1ea5t r\u1ea5t chi ti\u1ebft.\\n\\n### 1. \u0110\xf4i ch\xfat v\u1ec1 \u0111\xe1nh gi\xe1 d\u1eef li\u1ec7u\\nKhi \u0111\xe1nh gi\xe1 d\u1eef li\u1ec7u, ta th\u01b0\u1eddng quan t\xe2m \u0111\u1ebfn c\xe1c ti\xeau ch\xed \u0111\u1ec3 \u0111o \u0111\u1ea1c \u0111\u1ed9 t\u1eadp trung (measure of central tendency) c\u0169ng nh\u01b0 \u0111\u1ed9 ph\xe2n t\xe1n (dispersion) c\u1ee7a d\u1eef li\u1ec7u.\\n\\nV\u1ec1 \u0111\u1ed9 t\u1eadp trung c\u1ee7a d\u1eef li\u1ec7u, c\xf3 3 th\xf4ng s\u1ed1 c\u1ea7n quan t\xe2m\\n\\n- K\u1ef3 v\u1ecdng (mean): \u0111\xe1nh gi\xe1 gi\xe1 tr\u1ecb trung b\xecnh c\u1ee7a m\u1ed9t bi\u1ebfn ng\u1eabu nhi\xean.\\n    - N\u1ebfu ${x}$ l\xe0 m\u1ed9t bi\u1ebfn ng\u1eabu nhi\xean r\u1eddi r\u1ea1c, gi\xe1 tr\u1ecb k\u1ef3 v\u1ecdng \u0111\u01b0\u1ee3c t\xednh nh\u01b0 sau\\n    <p style={{textAlign: \\"center\\"}}>\\n\\n    ${E(x) = \\\\sum_{i=1}^{n}x_ip(x_i) }$\\n\\n    </p>        \\n\\n    Trong \u0111\xf3, ${p(x_i)}$ l\xe0 x\xe1c su\u1ea5t khi m\xe0 bi\u1ebfn ng\u1eabu nhi\xean ${x}$ nh\u1eadn gi\xe1 tr\u1ecb ${x_i}$.\\n\\n    - N\u1ebfu ${x}$ l\xe0 m\u1ed9t bi\u1ebfn ng\u1eabu nhi\xean li\xean t\u1ee5c\\n    <p style={{textAlign: \\"center\\"}}>\\n\\n    ${E(x) = \\\\int xp(x)dx }$\\n\\n    </p>\\n\\n    T\u1eeb \u0111\xf3, ta c\xf3 m\u1ed9t s\u1ed1 t\xednh ch\u1ea5t c\u1ee7a k\u1ef3 v\u1ecdng nh\u01b0 sau\\n    <p style={{textAlign: \\"center\\"}}>\\n\\n    ${E(ax + by) = aE(x) + bE(y) }$\\n    \\n    </p>\\n    <p style={{textAlign: \\"center\\"}}>\\n    \\n    ${E(xy) = E(x)E(y)}$, n\u1ebfu hai bi\u1ebfn ${x}$ v\xe0 ${y}$ \u0111\u1ed9c l\u1eadp\\n    \\n    </p>\\n\\n- Trung v\u1ecb (median): l\xe0 gi\xe1 tr\u1ecb c\u1ee7a ph\u1ea7n t\u1eed n\u1eb1m \u1edf ch\xednh gi\u1eefa m\u1ed9t d\xe3y gi\xe1 tr\u1ecb \u0111\u01b0\u1ee3c s\u1eafp x\u1ebfp theo th\u1ee9 t\u1ef1. Tr\u01b0\u1eddng h\u1ee3p s\u1ed1 ph\u1ea7n t\u1eed l\xe0 ch\u1eb5n, gi\xe1 tr\u1ecb trung v\u1ecb b\u1eb1ng trung b\xecnh c\u1ed9ng 2 ph\u1ea7n t\u1eed \u1edf gi\u1eefa.\\n\\n- Mode: gi\xe1 tr\u1ecb ph\u1ea7n t\u1eed c\xf3 t\u1ea7n s\u1ed1 xu\u1ea5t hi\u1ec7n nhi\u1ec1u nh\u1ea5t trong d\xe3y gi\xe1 tr\u1ecb.\\n\\nV\xed d\u1ee5, ta c\xf3 d\xe3y gi\xe1 tr\u1ecb c\u1ee7a m\u1ed9t bi\u1ebfn ng\u1eabu nhi\xean qua c\xe1c s\u1ef1 ki\u1ec7n l\xe0 ${\\\\{1, 1, 2, 4, 6, 6, 6, 14\\\\}}$ v\u1edbi c\xe1c s\u1ef1 ki\u1ec7n c\xf3 x\xe1c su\u1ea5t x\u1ea3y ra nh\u01b0 nhau\\n<p style={{textAlign: \\"center\\"}}>\\n\\n${Mean = \\\\frac{1+1+2+4+6+6+6+14}{8} = 5}$, ${Median = \\\\frac{4+6}{2} = 5}$, ${Mode = 6}$       \\n\\n</p>\\n\\nN\u1ebfu th\xeam m\u1ed9t gi\xe1 tr\u1ecb n\u1eefa v\xe0o d\xe3y ${\\\\{1, 1, 2, 4, 6, 6, 6, 14, 500\\\\}}$\\n<p style={{textAlign: \\"center\\"}}>\\n\\n${Mean = \\\\frac{1+1+2+4+6+6+6+14+500}{9} = 60}$, ${Median = 6}$, ${Mode = 6}$\\n\\n</p>\\nTa nh\u1eadn th\u1ea5y r\u1eb1ng, gi\xe1 tr\u1ecb mean ch\u1ecbu \u1ea3nh h\u01b0\u1edfng n\u1eb7ng b\u1edfi c\xe1c outliers h\u01a1n l\xe0 median (c\xe1c outliers s\u1ebd \u0111\u01b0\u1ee3c gi\u1ea3i th\xedch \u1edf d\u01b0\u1edbi).\\n\\nV\u1ec1 \u0111\u1ed9 ph\xe2n t\xe1n c\u1ee7a d\u1eef li\u1ec7u, ta quan t\xe2m \u0111\u1ebfn c\xe1c \u0111\u1ea1i l\u01b0\u1ee3ng sau\\n\\n- Ph\u01b0\u01a1ng sai: th\u1ec3 hi\u1ec7n m\u1ee9c \u0111\u1ed9 bi\u1ebfn \u0111\u1ed9ng c\u1ee7a \u0111\u1ea1i l\u01b0\u1ee3ng xung quanh gi\xe1 tr\u1ecb k\u1ef3 v\u1ecdng.\\n\\n    - N\u1ebfu ${x}$ l\xe0 m\u1ed9t bi\u1ebfn ng\u1eabu nhi\xean r\u1eddi r\u1ea1c\\n    <p style={{textAlign: \\"center\\"}}>\\n\\n    ${Var(x) = \\\\sum_{i=1}^{n}(x_i - E(x))^2p(x_i) }$\\n\\n    </p>\\n\\n    - N\u1ebfu ${x}$ l\xe0 m\u1ed9t bi\u1ebfn ng\u1eabu nhi\xean li\xean t\u1ee5c\\n    <p style={{textAlign: \\"center\\"}}>\\n\\n    ${Var(x) = \\\\int(x - E(x))^2p(x)dx }$\\n\\n    </p>\\n\\n- \u0110\u1ed9 l\u1ec7ch chu\u1ea9n: b\u1eb1ng c\u0103n b\u1eadc hai c\u1ee7a ph\u01b0\u01a1ng sai\\n    <p style={{textAlign: \\"center\\"}}>\\n\\n    ${\\\\sigma_x = \\\\sqrt{Var(x)} }$\\n\\n    </p>\\n\\n    C\xe1c outliers l\xe0 nh\u1eefng gi\xe1 tr\u1ecb n\u1eb1m ngo\xe0i kho\u1ea3ng ${[\\\\mu - 3\\\\sigma_x, \\\\mu + 3\\\\sigma_x]}$ v\u1edbi ${\\\\mu = E(x)}$. Trong ch\u1ecdn l\u1ecdc c\xe1c \u0111\u1eb7c tr\u01b0ng t\u1ed1t cho h\u1ecdc m\xe1y, c\xe1c outliers th\u01b0\u1eddng b\u1ecb l\u1ecdc b\u1ecf b\u1edfi n\xf3 c\xf3 nguy c\u01a1 l\xe0 nh\u1eefng \u0111i\u1ec3m g\xe2y nhi\u1ec5u cao.\\n\\nT\xecm ra c\xe1c \u0111\u1eb7c tr\u01b0ng c\u1ee7a t\u1eadp d\u1eef li\u1ec7u, ng\u01b0\u1eddi ta c\xf2n hay quan t\xe2m \u0111\u1ebfn c\xe1c th\xf4ng s\u1ed1 tr\xean \u0111\u1ed3 th\u1ecb box plot\\n![Box Plot](./images/boxplot.PNG)\\n\\n\u1ede h\xecnh tr\xean, median l\xe0 gi\xe1 tr\u1ecb trung v\u1ecb, ${Q1}$ v\xe0 ${Q3}$ l\u1ea7n l\u01b0\u1ee3t l\xe0 c\xe1c gi\xe1 tr\u1ecb trung v\u1ecb ${25\\\\%}$ v\xe0 ${75\\\\%}$, \u0111\u1ed9 tr\u1ea3i gi\u1eefa (${IQR)}$ l\xe0 kho\u1ea3ng c\xe1c gi\u1eefa ch\xfang. C\xe1c \u0111i\u1ec3m n\u1eb1m ngo\xe0i kho\u1ea3ng ${[Q1 - 1.5IQR, Q3 + 1.5IQR]}$ \u0111\u01b0\u1ee3c coi l\xe0 c\xe1c mild outliers, n\u1eb1m ngo\xe0i kho\u1ea3ng ${[Q1 - 3IQR, Q3 + 3IQR]}$ \u0111\u01b0\u1ee3c coi l\xe0 c\xe1c extreme outliers. C\xe1c outliers th\u01b0\u1eddng \u0111\u01b0\u1ee3c lo\u1ea1i b\u1ecf kh\u1ecfi d\u1eef li\u1ec7u khi m\xe0 ta mu\u1ed1n ph\xe2n t\xedch th\xf4ng tin g\xec \u0111\xf3 t\u1eeb d\u1eef li\u1ec7u.\\n\\n\u0110\u1ec3 \u0111\xe1nh gi\xe1 t\u01b0\u01a1ng quan tuy\u1ebfn t\xednh gi\u1eefa 2 bi\u1ebfn ng\u1eabu nhi\xean, ta quan t\xe2m \u0111\u1ebfn \u0111\u1ea1i l\u01b0\u1ee3ng h\u1ec7 s\u1ed1 t\u01b0\u01a1ng quan. Gi\xe1 tr\u1ecb c\u1ee7a h\u1ec7 s\u1ed1 t\u01b0\u01a1ng quan th\u01b0\u1eddng tr\u1ea3i t\u1eeb kho\u1ea3ng ${[-1, 1]}$. C\xf4ng th\u1ee9c t\xednh h\u1ec7 s\u1ed1 t\u01b0\u01a1ng quan nh\u01b0 sau\\n<p style={{textAlign: \\"center\\"}}>\\n\\n${\\\\rho_{xy} = \\\\frac{cov(x, y)}{\\\\sigma_x\\\\sigma_y}}$, v\u1edbi ${cov(x, y) = E[(x - \\\\mu_x)(y - \\\\mu_y)] = \\\\frac{\\\\sum_{i = 1}^{n}(x_i - \\\\mu_x)(y_i - \\\\mu_y)}{n}}$, ${\\\\sigma}$ v\xe0 ${\\\\mu}$ l\u1ea7n l\u01b0\u1ee3t l\xe0 \u0111\u1ed9 l\u1ec7ch chu\u1ea9n v\xe0 k\u1ef3 v\u1ecdng c\u1ee7a bi\u1ebfn ng\u1eabu nhi\xean.\\n</p>\\n\\nTa c\xf3 m\u1ed9t v\xe0i nh\u1eadn x\xe9t nh\u01b0 sau\\n- Khi ${\\\\rho_{xy} = 0}$, hai bi\u1ebfn ng\u1eabu nhi\xean ho\xe0n to\xe0n \u0111\u1ed9c l\u1eadp tuy\u1ebfn t\xednh v\u1edbi nhau.\\n- Khi ${\\\\rho_{xy} > 0}$, ch\xfang \u0111\u1ed3ng bi\u1ebfn, bi\u1ebfn \u0111\u1ea7u ti\xean t\u0103ng th\xec bi\u1ebfn th\u1ee9 hai c\u0169ng t\u0103ng.\\n- Khi ${\\\\rho_{xy} < 0}$, ch\xfang ngh\u1ecbch bi\u1ebfn, bi\u1ebfn \u0111\u1ea7u ti\xean t\u0103ng th\xec bi\u1ebfn th\u1ee9 hai gi\u1ea3m.\\n- Khi ${\\\\rho_{xy}}$ b\u1eb1ng ${-1}$ ho\u1eb7c ${1}$, hai bi\u1ebfn ho\xe0n to\xe0n t\u01b0\u01a1ng quan tuy\u1ebfn t\xednh. \\n\\n### 2. C\xe1c ki\u1ec3u d\u1eef li\u1ec7u\\nC\xf3 nhi\u1ec1u lo\u1ea1i ki\u1ec3u d\u1eef li\u1ec7u m\xe0 m\u1ed9t bi\u1ebfn ng\u1eabu nhi\xean c\xf3 th\u1ec3 nh\u1eadn, t\xf9y v\xe0o b\xe0i to\xe1n nh\u1ea5t \u0111\u1ecbnh, ta c\xf3 th\u1ec3 gi\u1eef nguy\xean gi\xe1 tr\u1ecb c\xe1c bi\u1ebfn trong t\xednh to\xe1n, ho\u1eb7c m\xe3 h\xf3a n\xf3.\\n- Ki\u1ec3u d\u1eef li\u1ec7u \u0111\u1ecbnh t\xednh (quanlitative data): l\xe0 c\xe1c ki\u1ec3u d\u1eef li\u1ec7u mang th\xf4ng tin m\xf4 t\u1ea3 \u0111\u1eb7c tr\u01b0ng c\u1ee7a s\u1ef1 v\u1eadt, hi\u1ec7n t\u01b0\u1ee3ng.\\n    - C\xe1c ki\u1ec3u d\u1eef li\u1ec7u \u0111\u1ecbnh t\xednh kh\xf4ng c\xf3 th\u1ee9 t\u1ef1 (nominal data): m\xe0u s\u1eafc, gi\u1edbi t\xednh,... V\u1edbi lo\u1ea1i d\u1eef li\u1ec7u n\xe0y, ta th\u01b0\u1eddng d\xf9ng mode \u0111\u1ec3 \u0111\xe1nh gi\xe1 ch\xfang. V\xed d\u1ee5 nh\u01b0: \u0111\xe1nh gi\xe1 m\xe0u xe con n\xe0o xu\u1ea5t hi\u1ec7n nhi\u1ec1u nh\u1ea5t,...\\n    - C\xe1c ki\u1ec3u d\u1eef li\u1ec7u \u0111\u1ecbnh t\xednh c\xf3 th\u1ee9 t\u1ef1 (ordinal data): c\xe1c m\u1ee9c \u0111\u1ed9, c\xe1c c\u1ea5p h\u1ecdc nh\u01b0 ti\u1ec3u h\u1ecdc, trung h\u1ecdc c\u01a1 s\u1edf, trung h\u1ecdc ph\u1ed5 th\xf4ng,... V\u1edbi lo\u1ea1i d\u1eef li\u1ec7u n\xe0y, ta quan t\xe2m nhi\u1ec1u h\u01a1n \u0111\u1ebfn th\xf4ng s\u1ed1 median. V\xed d\u1ee5 nh\u01b0: \u0111\xe1nh g\xeda m\u1ee9c \u0111\u1ed9 trung b\xecnh trong t\u1eadp d\u1eef li\u1ec7u,...\\n- Ki\u1ec3u d\u1eef li\u1ec7u \u0111\u1ecbnh l\u01b0\u1ee3ng (quantitative data): l\xe0 c\xe1c th\xf4ng tin m\xf4 t\u1ea3 \u0111\u1ed1i t\u01b0\u1ee3ng d\u01b0\u1edbi d\u1ea1ng con s\u1ed1. V\u1edbi lo\u1ea1i d\u1eef li\u1ec7u n\xe0y, ta d\xf9ng c\xe1c gi\xe1 tr\u1ecb mean v\xe0 median \u0111\u1ec3 \u0111\xe1nh gi\xe1 ch\xfang.\\n    - D\u1eef li\u1ec7u li\xean t\u1ee5c (continous data): chi\u1ec1u cao, c\xe2n n\u1eb7ng,...\\n    - D\u1eef li\u1ec7u r\u1eddi r\u1ea1c (discrete data): s\u1ed1 chi\u1ebfc \xe1o, s\u1ed1 b\xe1nh xe,...\\n- Ki\u1ec3u d\u1eef li\u1ec7u k\xe8m theo y\u1ebfu t\u1ed1 th\u1eddi gian (temporal data): v\xed d\u1ee5 nh\u01b0 gi\xe1 c\u1ed5 phi\u1ebfu, khi b\xe1o c\xe1o c\u1ea7n ph\u1ea3i \u0111i k\xe8m v\u1edbi th\xf4ng tin l\xe0 ng\xe0y n\xe0o, th\u1eddi \u0111i\u1ec3m n\xe0o,...\\n- Ki\u1ec3u d\u1eef li\u1ec7u k\xe8m theo y\u1ebfu t\u1ed1 kh\xf4ng gian (spartial data): v\xed d\u1ee5 nh\u01b0 v\u1ecb tr\xed \u0111\u1ecba l\xfd tr\xean b\u1ea3n \u0111\u1ed3, gi\xe1 tr\u1ecb t\u1ecda \u0111\u1ed9 c\u1ee7a m\u1ed9t \u0111i\u1ec3m tr\xean tr\u1ee5c t\u1ecda \u0111\u1ed9,...\\n\\n### 3. C\xe1c h\xe0m x\xe1c su\u1ea5t\\nC\xe1c h\xe0m x\xe1c su\u1ea5t c\xe1c b\u1ea1n c\xf3 th\u1ec3 xem **[t\u1ea1i \u0111\xe2y](https://phamdinhkhanh.github.io/deepai-book/ch_probability/appendix_probability.html#ham-mat-do-pdf-va-ham-khoi-xac-suat-pmf)**, c\u1ea3m \u01a1n anh Ph\u1ea1m \u0110\xecnh Kh\xe1nh \u0111\xe3 vi\u1ebft r\u1ea5t chi ti\u1ebft v\u1ec1 c\xe1c h\xe0m n\xe0y.\\n\\n### 4. C\xe1c lo\u1ea1i bi\u1ec3u \u0111\u1ed3 th\u1ed1ng k\xea\\nT\xf9y theo m\u1ee5c \u0111\xedch th\xf4ng tin ta c\u1ea7n tr\xedch xu\u1ea5t t\u1eeb d\u1eef li\u1ec7u m\xe0 ta s\u1ebd s\u1eed d\u1ee5ng c\xe1c lo\u1ea1i bi\u1ec3u \u0111\u1ed3 ph\xf9 h\u1ee3p cho b\xe0i to\xe1n\\n<table id=\\"t01\\">\\n  <tr>\\n    <th>M\u1ee5c \u0111\xedch</th>\\n    <th>Bi\u1ec3u \u0111\u1ed3</th>\\n  </tr>\\n  <tr>\\n    <th colspan=\\"2\\">C\u1ea7n nh\xecn b\u1ee9c tranh t\u1ed5ng th\u1ec3 c\u1ee7a d\u1eef li\u1ec7u</th>\\n  </tr>\\n  <tr>\\n    <td>Bi\u1ec3u di\u1ec5n ph\xe2n b\u1ed1 d\u1eef li\u1ec7u, v\u1edbi tr\u1ee5c ho\xe0nh l\xe0 c\xe1c kho\u1ea3ng gi\xe1 tr\u1ecb bi\u1ebfn ng\u1eabu nhi\xean v\xe0 tr\u1ee5c tung l\xe0 gi\xe1 tr\u1ecb t\u1ea7n s\u1ed1 xu\u1ea5t hi\u1ec7n c\u1ee7a ch\xfang</td>\\n    <td>\\n        <p style={{textAlign: \\"center\\"}}>\\n            Histogram plot\\n        <img style={{width: \\"90%\\"}} src={require(\\"./images/histogramplot.PNG\\").default} />\\n        </p>\\n    </td>\\n  </tr>\\n  <tr>\\n    <td>\\n    Bi\u1ec3u di\u1ec5n c\xe1c gi\xe1 tr\u1ecb quan tr\u1ecdng nh\u01b0 min, max, trung v\u1ecb 25%, 50%, 75%, \u0111\u1ed9 tr\u1ea3i gi\u1eefa IQR,... T\u1eeb \u0111\xf3, ta \u0111\xe1nh gi\xe1 \u0111\u01b0\u1ee3c c\xe1c \u0111i\u1ec3m chia c\u1eaft d\u1eef li\u1ec7u hay c\xe1c \u0111i\u1ec3m d\u1eef li\u1ec7u g\xe2y nhi\u1ec5u,...</td>\\n    <td>\\n        <p style={{textAlign: \\"center\\"}}>\\n            Box plot \\n        <img style={{width: \\"90%\\"}} src={require(\\"./images/boxplot.PNG\\").default} />\\n        </p>\\n    </td>\\n  </tr>\\n  <tr>\\n    <td>Bi\u1ec3u di\u1ec5n d\u1eef li\u1ec7u theo th\u1eddi gian</td>\\n    <td>\\n        <p style={{textAlign: \\"center\\"}}>\\n            Time series plot\\n        <img style={{width: \\"90%\\"}} src={require(\\"./images/timeseriesplot.PNG\\").default} />\\n        </p>\\n    </td>\\n  </tr>\\n  <tr>\\n    <th colspan=\\"2\\">C\u1ea7n bi\u1ec3u di\u1ec5n s\u1ef1 so s\xe1nh gi\u1eefa c\xe1c bi\u1ebfn</th>\\n  </tr>\\n  <tr>\\n    <td>So s\xe1nh gi\xe1 tr\u1ecb c\u1ee7a nhi\u1ec1u bi\u1ebfn</td>\\n    <td>\\n        <p style={{textAlign: \\"center\\"}}>\\n            Bar chart\\n        <img style={{width: \\"90%\\"}} src={require(\\"./images/barchart.PNG\\").default} />\\n        </p>\\n    </td>\\n  </tr>\\n  <tr>\\n    <td>So s\xe1nh gi\xe1 tr\u1ecb m\u1ed9t bi\u1ebfn thay \u0111\u1ed5i theo th\u1eddi gian</td>\\n    <td>\\n        <p style={{textAlign: \\"center\\"}}>\\n            Line chart, gi\u1ed1ng v\u1edbi timeseriesplot\\n        </p>\\n    </td>\\n  </tr>\\n  <tr>\\n    <td>So s\xe1nh nhi\u1ec1u nh\xf3m</td>\\n    <td>\\n        <p style={{textAlign: \\"center\\"}}>\\n            Radar chart\\n        <img style={{width: \\"90%\\"}} src={require(\\"./images/radarchart.PNG\\").default} />\\n        </p>\\n    </td>\\n  </tr>\\n  <tr>\\n    <th colspan=\\"2\\">C\u1ea7n nh\u1eadn bi\u1ebft s\u1ef1 t\u01b0\u01a1ng quan gi\u1eefa hai ho\u1eb7c nhi\u1ec1u bi\u1ebfn</th>\\n  </tr>\\n  <tr>\\n    <td>T\u01b0\u01a1ng quan gi\u1eefa hai ho\u1eb7c nhi\u1ec1u bi\u1ebfn</td>\\n    <td>\\n        <p style={{textAlign: \\"center\\"}}>\\n            Scatter plot\\n        <img style={{width: \\"90%\\"}} src={require(\\"./images/scatterplot.JPG\\").default} />\\n        </p>\\n    </td>\\n  </tr>\\n</table> \\n\\n### 5. \u0110\u1ed9 l\u1ec7ch d\u01b0\u01a1ng, \u0111\u1ed9 l\u1ec7ch \xe2m\\n- \u0110\u1ed9 l\u1ec7ch d\u01b0\u01a1ng c\xf3 gi\xe1 tr\u1ecb trung b\xecnh (mean) l\u1edbn h\u01a1n gi\xe1 tr\u1ecb trung v\u1ecb (median) v\xe0 ph\xe2n b\u1ed1 c\xf3 ph\xeda kh\xf4ng \u0111\u1ed1i x\u1ee9ng m\u1edf r\u1ed9ng \u0111\u1ebfn nhi\u1ec1u c\xe1c gi\xe1 tr\u1ecb d\u01b0\u01a1ng h\u01a1n.\\n\\n![Positive Skewness](./images/positiveskewness.PNG)\\n\\n- \u0110\u1ed9 l\u1ec7ch \xe2m c\xf3 gi\xe1 tr\u1ecb trung b\xecnh (mean) nh\u1ecf h\u01a1n gi\xe1 tr\u1ecb trung v\u1ecb (median) v\xe0 ph\xe2n b\u1ed1 c\xf3 ph\xeda kh\xf4ng \u0111\u1ed1i x\u1ee9ng m\u1edf r\u1ed9ng \u0111\u1ebfn nhi\u1ec1u c\xe1c gi\xe1 tr\u1ecb \xe2m h\u01a1n.\\n\\n![Negative Skewness](./images/negativeskewness.JPG)\\n\\n\u0110\u1ed9 l\u1ec7ch k\u1ebft h\u1ee3p v\u1edbi \u0111\u1ed9 nh\u1ecdn \u0111\xe1nh gi\xe1 kh\u1ea3 n\u0103ng c\xe1c bi\u1ebfn c\u1ed1 r\u01a1i v\xe0o \u0111u\xf4i c\u1ee7a ph\xe2n ph\u1ed1i x\xe1c su\u1ea5t t\u1ed1t h\u01a1n.\\n\\n### 6. Quy lu\u1eadt s\u1ed1 l\u1edbn\\nPh\u1ea7n n\xe0y c\xe1c b\u1ea1n h\xe3y tham kh\u1ea3o **[t\u1ea1i \u0111\xe2y](https://phamdinhkhanh.github.io/deepai-book/ch_probability/appendix_probability.html#qui-luat-so-lon)** c\u1ee7a anh Ph\u1ea1m \u0110\xecnh Kh\xe1nh.\\n\\n- Kho\u1ea3ng tin c\u1eady (confidence interval)\\n\\nKhi m\xecnh l\u1ea5y m\u1eabu t\u1eeb m\u1ed9t qu\u1ea7n th\u1ec3, c\xe1c tham s\u1ed1 c\u1ee7a m\u1ed9t qu\u1ea7n th\u1ec3 c\xf3 th\u1ec3 \u0111\u01b0\u1ee3c \u0111\xe1nh gi\xe1 b\u1eb1ng m\u1eabu \u0111\xf3. Th\xf4ng th\u01b0\u1eddng, gi\xe1 tr\u1ecb k\u1ef3 v\u1ecdng c\u1ee7a m\u1eabu s\u1ebd \u0111\u01b0\u1ee3c \u01b0\u1edbc l\u01b0\u1ee3ng b\u1eb1ng gi\xe1 tr\u1ecb k\u1ef3 v\u1ecdng c\u1ee7a qu\u1ea7n th\u1ec3, tuy nhi\xean, nh\u1eefng l\u1ea7n l\u1ea5y m\u1eabu kh\xe1c nhau th\xec c\xf3 k\u1ef3 v\u1ecdng kh\xe1c nhau. Do v\u1eady, ta \u0111\u01b0a ra \u0111\u1ecbnh ngh\u0129a kho\u1ea3ng tin c\u1eady d\xf9ng \u0111\u1ec3 bi\u1ebfn c\xe1i tham s\u1ed1 k\u1ef3 v\u1ecdng \u0111\u01b0\u1ee3c \u01b0\u1edbc l\u01b0\u1ee3ng tr\u1edf th\xe0nh m\u1ed9t kho\u1ea3ng gi\xe1 tr\u1ecb \u01b0\u1edbc l\u01b0\u1ee3ng, \u0111\u1ea3m b\u1ea3o r\u1eb1ng k\u1ef3 v\u1ecdng c\u1ee7a qu\u1ea7n th\u1ec3 s\u1ebd n\u1eb1m trong kho\u1ea3ng gi\xe1 tr\u1ecb \u0111\xf3.\\n\\n${k\\\\%}$ m\u1ee9c tin c\u1eady s\u1ebd \u0111\u1ea3m b\u1ea3o ph\u1ee7 \u0111\u01b0\u1ee3c tham s\u1ed1 k\u1ef3 v\u1ecdng c\u1ea7n \u01b0\u1edbc l\u01b0\u1ee3ng c\u1ee7a qu\u1ea7n th\u1ec3 v\u1edbi x\xe1c su\u1ea5t l\xe0 ${k\\\\%}$.\\n\\nKho\u1ea3ng tin c\u1eady c\xe0ng nh\u1ecf th\xec c\xe0ng \u0111\u1ea3m b\u1ea3o \u0111\u01b0\u1ee3c \u0111\u1ed9 ch\xednh x\xe1c c\u1ee7a b\u1ed9 \u01b0\u1edbc l\u01b0\u1ee3ng, \u0111\u1ec3 \u0111\u1ea1t \u0111\u01b0\u1ee3c \u0111i\u1ec1u n\xe0y, ta c\xf3 th\u1ec3 gi\u1ea3m m\u1ee9c tin c\u1eady ho\u1eb7c t\u0103ng k\xedch th\u01b0\u1edbc c\u1ee7a m\u1eabu l\u1ea5y t\u1eeb qu\u1ea7n th\u1ec3. Kho\u1ea3ng tin c\u1eady \u0111\u01b0\u1ee3c bi\u1ec3u di\u1ec5n b\u1edfi ${(lower bound, upper bound)}$ v\u1edbi\\n\\n<p style={{textAlign: \\"center\\"}}>\\n\\n${lower bound = \\\\bar{x} - z\\\\frac{\\\\sigma}{\\\\sqrt{n}}}$\\n\\n${upper bound = \\\\bar{x} + z\\\\frac{\\\\sigma}{\\\\sqrt{n}}}$\\n\\n</p>\\n\\nV\u1edbi ${\\\\bar{x}}$ l\xe0 gi\xe1 tr\u1ecb k\u1ef3 v\u1ecdng c\u1ee7a m\u1eabu \u0111\u01b0\u1ee3c l\u1ea5y, ${\\\\sigma}$ l\xe0 gi\xe1 tr\u1ecb \u0111\u1ed9 l\u1ec7ch chu\u1ea9n gi\u1ea3 \u0111\u1ecbnh c\u1ee7a qu\u1ea7n th\u1ec3. ${n}$ l\xe0 k\xedch th\u01b0\u1edbc c\u1ee7a m\u1eabu v\xe0 ${z}$ l\xe0 h\u1ec7 s\u1ed1 tin c\u1eady.\\n\\nV\u1edbi ph\xe2n ph\u1ed1i chu\u1ea9n\\n- ${z = 1.645}$ \u1ee9ng v\u1edbi m\u1ee9c tin c\u1eady ${90\\\\%}$.\\n- ${z = 1.96}$ \u1ee9ng v\u1edbi m\u1ee9c tin c\u1eady ${95\\\\%}$.\\n- ${z = 2.576}$ \u1ee9ng v\u1edbi m\u1ee9c tin c\u1eady ${99\\\\%}$.\\n\\n### 7. C\xe1c ph\xe2n ph\u1ed1i x\xe1c su\u1ea5t\\nC\xe1c ph\xe2n ph\u1ed1i x\xe1c su\u1ea5t c\xe1c b\u1ea1n c\xf3 th\u1ec3 xem **[t\u1ea1i \u0111\xe2y](https://phamdinhkhanh.github.io/deepai-book/ch_probability/appendix_probability.html#phan-phoi-xac-suat)**.\\n\\n### 8. X\xe1c su\u1ea5t \u0111\u1ed3ng th\u1eddi, x\xe1c su\u1ea5t bi\xean, x\xe1c su\u1ea5t c\xf3 \u0111i\u1ec1u ki\u1ec7n v\xe0 \u0111\u1ecbnh l\u1ef9 Bayes\\nC\xe1c b\u1ea1n c\xf3 th\u1ec3 t\xecm th\u1ea5y th\xf4ng tin m\u1ee5c n\xe0y **[t\u1ea1i \u0111\xe2y](https://phamdinhkhanh.github.io/deepai-book/ch_probability/appendix_probability.html#xac-suat-dong-thoi-join-distribution)**, m\u1ed9t l\u1ea7n n\u1eefa c\u1ea3m \u01a1n anh Ph\u1ea1m \u0110\xecnh Kh\xe1nh \u0111\xe3 tr\xecnh b\xe0y chi ti\u1ebft v\u1ec1 ph\u1ea7n n\xe0y.\\n\\n### 9. T\xe0i li\u1ec7u tham kh\u1ea3o\\n\\n[https://phamdinhkhanh.github.io/deepai-book/ch_probability/appendix_probability.html#phan-phoi-xac-suat](https://phamdinhkhanh.github.io/deepai-book/ch_probability/appendix_probability.html#)"},{"id":"avl-tree","metadata":{"permalink":"/blogs/blog/avl-tree","editUrl":"https://github.com/lam1051999/blogs/edit/main/blog/2021-02-24-avl-tree/index.md","source":"@site/blog/2021-02-24-avl-tree/index.md","title":"C\xe2y AVL, thu\u1eadt to\xe1n s\u1eafp x\u1ebfp AVL","description":"Intuition","date":"2021-02-24T00:00:00.000Z","formattedDate":"February 24, 2021","tags":[{"label":"tree","permalink":"/blogs/blog/tags/tree"},{"label":"avl","permalink":"/blogs/blog/tags/avl"},{"label":"binary tree","permalink":"/blogs/blog/tags/binary-tree"},{"label":"algorithms","permalink":"/blogs/blog/tags/algorithms"}],"readingTime":8.155,"truncated":true,"authors":[{"name":"Tr\u1ea7n L\xe2m","title":"Data Engineer","url":"https://github.com/lam1051999","imageURL":"https://github.com/lam1051999.png","key":"tranlam"}],"frontMatter":{"slug":"avl-tree","title":"C\xe2y AVL, thu\u1eadt to\xe1n s\u1eafp x\u1ebfp AVL","authors":"tranlam","tags":["tree","avl","binary tree","algorithms"],"image":"./images/intuition.PNG"},"prevItem":{"title":"X\xe1c su\u1ea5t th\u1ed1ng k\xea c\u01a1 b\u1ea3n","permalink":"/blogs/blog/probability"},"nextItem":{"title":"C\xe2y t\xecm ki\u1ebfm nh\u1ecb ph\xe2n","permalink":"/blogs/blog/binarysearch-tree"}},"content":"![Intuition](./images/intuition.PNG)\\n\\n\u1ede b\xe0i vi\u1ebft tr\u01b0\u1edbc, m\xecnh \u0111\xe3 n\xf3i v\u1ec1 c\xe2y t\xecm ki\u1ebfm nh\u1ecb ph\xe2n, n\u1ebfu b\u1ea1n \u0111\u1ecdc ch\u01b0a xem qua, c\xf3 th\u1ec3 t\xecm th\u1ea5y **[t\u1ea1i \u0111\xe2y](/blog/2021-02-22-binarysearch-tree/index.md)**. V\u1edbi s\u1ef1 hi\u1ec7u qu\u1ea3 trong c\xe1c ho\u1ea1t \u0111\u1ed9ng t\xecm ki\u1ebfm, ch\xe8n, x\xf3a,... c\xe2y t\xecm ki\u1ebfm nh\u1ecb ph\xe2n c\xf3 th\u1ec3 th\u1ef1c hi\u1ec7n \u0111\u01b0\u1ee3c trong logrithmic time (${\\\\Theta(logn)}$) \u1edf average case. B\xe0i vi\u1ebft n\xe0y, m\xecnh s\u1ebd n\xf3i v\u1ec1 c\xe2y AVL, l\xe0 1 lo\u1ea1i c\u1ee7a c\xe2y t\xecm ki\u1ebfm nh\u1ecb ph\xe2n, \u0111\u1ea3m b\u1ea3o r\u1eb1ng trong t\u1ea5t c\u1ea3 c\xe1c case, time complexity c\u1ee7a c\xe1c ho\u1ea1t \u0111\u1ed9ng tr\xean \u0111\u1ec1u l\xe0 ${\\\\Theta(logn)}$.\\n\\n\x3c!--truncate--\x3e\\n\\n### 1. C\xe2y AVL\\nC\xe2y AVL l\xe0 m\u1ed9t c\xe2y t\xecm ki\u1ebfm nh\u1ecb ph\xe2n c\xe2n b\u1eb1ng, trong \u0111\xf3 chi\u1ec1u cao c\u1ee7a c\xe2y con tr\xe1i v\xe0 c\xe2y con ph\u1ea3i h\u01a1n k\xe9m nhau nhi\u1ec1u nh\u1ea5t 1 ${(1)}$. Trong qua tr\xecnh th\u1ef1c hi\u1ec7n c\xe1c ho\u1ea1t \u0111\u1ed9ng tr\xean c\xe2y khi\u1ebfn c\xe2y kh\xf4ng c\xe2n b\u1eb1ng, ta c\u1ea7n th\u1ef1c hi\u1ec7n c\xe2n b\u1eb1ng l\u1ea1i c\xe2y \u0111\u1ec3 \u0111\u1ea3m b\u1ea3o t\xednh ch\u1ea5t ${(1)}$.\\n\\n### 2. \u0110\xe1nh gi\xe1 chi\u1ec1u cao c\u1ee7a c\xe2y\\nChi\u1ec1u cao c\u1ee7a c\xe2y\\n\\n<p style={{textAlign: \\"center\\"}}>\\n\\n${h}$ = max{ chi\u1ec1u cao c\xe2y con tr\xe1i, chi\u1ec1u cao c\xe2y con ph\u1ea3i } + 1\\n\\n</p>\\n\\nChi\u1ec1u cao c\u1ee7a c\xe1c node \u0111\u01b0\u1ee3c \u0111\xe1nh s\u1ed1 nh\u01b0 h\xecnh \u1edf b\xean tr\xean.\\n\\nV\u1edbi t\xednh ch\u1ea5t ${(1)}$, worst case c\u1ee7a c\xe2y AVL x\u1ea3y ra khi c\xe2y con ph\u1ea3i c\xf3 chi\u1ec1u cao l\u1edbn h\u01a1n c\xe2y con tr\xe1i 1 \u0111\u01a1n v\u1ecb cho t\u1ea5t c\u1ea3 c\xe1c node (ho\u1eb7c ng\u01b0\u1ee3c l\u1ea1i).\\n\\nG\u1ecdi ${N{_h}}$ l\xe0 s\u1ed1 node nh\u1ecf nh\u1ea5t trong c\xe2y c\xf3 chi\u1ec1u cao l\xe0 ${h}$.\\n\\n![Height](./images/height.PNG)\\n\\nV\u1edbi \u0111\u1ed3 h\xecnh nh\u01b0 tr\xean, ta c\xf3\\n\\n<p style={{textAlign: \\"center\\"}}>\\n\\n${N{_ {O(1)}} = O(1)}$ v\xe0 ${N{_ h} = 1 + N{_ {h-1}} + N{_{h-2}}}$\\n\\n</p>\\n\\n#### 2.1. C\xe1ch 1\\n\\nBi\u1ec3u th\u1ee9c tr\xean khi\u1ebfn ta li\xean t\u01b0\u1edfng \u0111\u1ebfn d\xe3y fibonacci, ta c\xf3 ${N{_h} > F{_h}}$ v\u1edbi ${F{_h}}$ l\xe0 s\u1ed1 fibonacci th\u1ee9 ${h}$. Ta c\xf3 ${F{_h} = \\\\frac{\\\\gamma^h}{\\\\sqrt{5}}}$, v\u1edbi ${\\\\gamma = 1.61803398875...}$, (golden ratio).\\n\\nV\u1edbi ${N{_h} = n}$ (s\u1ed1 node trong c\xe2y).\\n\\n<p style={{textAlign: \\"center\\"}}>\\n\\n${ n > \\\\frac{\\\\gamma^h}{\\\\sqrt{5}} => h < log{_\\\\gamma}n => h < 1.440log{_2}n }$.\\n\\n</p>\\n\\n#### 2.2. C\xe1ch 2\\n\\n<p style={{textAlign: \\"center\\"}}>\\n\\n${=> N{_ h} = 1 + N{_ {h-1}} + N{_{h-2}}}$\\n\\n${=> N{_ h} > 1 + 2N{_{h-2}}}$\\n\\n${=> N{_ h} > 2N{_{h-2}}}$\\n\\n${=> h < 2log{_2}n}$\\n\\n</p>\\n\\nDo v\u1eady, ${h = O(logn)}$.\\n\\n### 3. C\xe1c ho\u1ea1t \u0111\u1ed9ng tr\xean c\xe2y AVL\\n\\n#### 3.1. Ch\xe8n node (insert), x\xf3a node (delete), t\xecm node (search)\\nC\xe1c ho\u1ea1t \u0111\u1ed9ng k\u1ec3 tr\xean trong c\xe2y AVL c\u0169ng gi\u1ed1ng nh\u01b0 trong c\xe2y t\xecm ki\u1ebfm nh\u1ecb ph\xe2n, v\u1edbi ${h = O(logn)}$. \u0110i\u1ec3m kh\xe1c bi\u1ec7t trong ch\xe8n v\xe0 x\xf3a node l\xe0 sau khi th\u1ef1c hi\u1ec7n c\xe1c ho\u1ea1t \u0111\u1ed9ng \u0111\xf3, ta c\u1ea7n l\xe0m th\xeam m\u1ed9t b\u01b0\u1edbc c\xe2n b\u1eb1ng c\xe2y \u0111\u1ec3 \u0111\u1ea3m b\u1ea3o t\xednh ch\u1ea5t ${(1)}$.\\n\\n#### 3.2. C\xe1c ho\u1ea1t \u0111\u1ed9ng c\xe2n b\u1eb1ng c\xe2y\\nV\xed d\u1ee5 sau \u0111\xe2y s\u1ebd th\u1ec3 hi\u1ec7n s\u1ef1 c\u1ea7n thi\u1ebft trong vi\u1ec7c c\xe2n b\u1eb1ng l\u1ea1i c\xe2y\\n\\nGi\u1ea3 s\u1eed ta c\xf3 c\xe2y sau\\n\\n![Insert](./images/insert.JPG)\\n\\nTa mu\u1ed1n ch\xe8n 23 v\xe0o c\xe2y, th\u1ef1c hi\u1ec7n ch\xe8n nh\u01b0 trong c\xe2y t\xecm ki\u1ebfm nh\u1ecb ph\xe2n. Sau khi ch\xe8n, ta th\u1ea5y t\xednh ch\u1ea5t ${(1)}$ b\u1ecb vi ph\u1ea1m. Ta c\u1ea7n c\xe2n b\u1eb1ng l\u1ea1i c\xe2y \u0111\u1ec3 c\xf3 \u0111\u01b0\u1ee3c\\n\\n![Insert2](./images/insert_2.JPG)\\n\\n##### 3.2.1. Balance factor\\nTrong c\xe2y nh\u1ecb ph\xe2n, balance factor \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a nh\u01b0 sau\\n\\n${BF(x)}$ = chi\u1ec1u cao c\xe2y con tr\xe1i c\u1ee7a ${x}$ ${-}$ chi\u1ec1u cao c\xe2y con ph\u1ea3i c\u1ee7a ${x}$.\\n\\nNh\u01b0 v\u1eady, trong c\xe2y AVL, ta c\xf3 ${BF(x) \\\\in \\\\\\\\{-1, 0, 1\\\\\\\\} }$.\\n\\n##### 3.2.2. C\xe1c ho\u1ea1t \u0111\u1ed9ng c\xe2n b\u1eb1ng c\xe2y\\n\\nKhi BF c\u1ee7a m\u1ed9t node n\xe0o \u0111\xf3 c\xf3 gi\xe1 tr\u1ecb kh\xf4ng n\u1eb1m trong t\u1eadp gi\xe1 tr\u1ecb tr\xean, khi \u0111\xf3 ta c\u1ea7n th\u1ef1c hi\u1ec7n c\u1ea7n b\u1eb1ng l\u1ea1i c\xe2y.\\nTa c\xf3 2 lo\u1ea1i ho\u1ea1t \u0111\u1ed9ng c\xe2n b\u1eb1ng c\u01a1 b\u1ea3n c\u1ee7a c\xe2y AVL: **right rotation** v\xe0 **left rotation**\\n\\n![Rotation](./images/rotation.PNG)\\n\\n\\n#### 3.3. C\xe2n b\u1eb1ng c\xe2y trong tr\u01b0\u1eddng h\u1ee3p c\u1ee5 th\u1ec3\\n\\n##### 3.3.1. Tr\u01b0\u1eddng h\u1ee3p c\xe2y con tr\xe1i c\xf3 tr\u1ecdng v\u1ec1 b\xean tr\xe1i (left left case)\\nTr\u01b0\u1eddng h\u1ee3p n\xe0y x\u1ea3y ra khi m\u1ed9t node c\xf3 BF = 2 v\xe0 c\xe2y con tr\xe1i c\u1ee7a n\xf3 c\xf3 BF = 1. Khi \u0111\xf3, ta ch\u1ec9 c\u1ea7n 1 l\u1ea7n **right rotation** t\u1ea1i v\u1ecb tr\xed node c\u1ea7n x\xe9t th\xec c\xe2y c\xe2n b\u1eb1ng.\\n\\n![Left Left](./images/left_left.PNG)\\n\\n##### 3.3.2. Tr\u01b0\u1eddng h\u1ee3p c\xe2y con tr\xe1i c\xf3 tr\u1ecdng v\u1ec1 b\xean ph\u1ea3i (left right case)\\nTr\u01b0\u1eddng h\u1ee3p n\xe0y x\u1ea3y ra khi m\u1ed9t node c\xf3 BF = 2 v\xe0 c\xe2y con tr\xe1i c\u1ee7a n\xf3 c\xf3 BF = -1. Khi \u0111\xf3, ta c\u1ea7n l\xe0m l\u1ea7n l\u01b0\u1ee3t 2 b\u01b0\u1edbc sau\\n* **Left rotation** c\xe2y con tr\xe1i.\\n* **Right rotation** node c\u1ea7n x\xe9t.\\n\\n![Left Right](./images/left_right.PNG)\\n\\n##### 3.3.3. Tr\u01b0\u1eddng h\u1ee3p c\xe2y con ph\u1ea3i c\xf3 tr\u1ecdng v\u1ec1 b\xean ph\u1ea3i (right right case)\\nTr\u01b0\u1eddng h\u1ee3p n\xe0y x\u1ea3y ra khi m\u1ed9t node c\xf3 BF = -2 v\xe0 c\xe2y con ph\u1ea3i c\u1ee7a n\xf3 c\xf3 BF = -1. Khi \u0111\xf3, ta ch\u1ec9 c\u1ea7n 1 l\u1ea7n **left rotation** t\u1ea1i v\u1ecb tr\xed node c\u1ea7n x\xe9t th\xec c\xe2y c\xe2n b\u1eb1ng.\\n\\n![Right Right](./images/right_right.PNG)\\n\\n##### 3.3.4. Tr\u01b0\u1eddng h\u1ee3p c\xe2y con ph\u1ea3i c\xf3 tr\u1ecdng v\u1ec1 b\xean tr\xe1i (right left case)\\nTr\u01b0\u1eddng h\u1ee3p n\xe0y x\u1ea3y ra khi m\u1ed9t node c\xf3 BF = -2 v\xe0 c\xe2y con tr\xe1i c\u1ee7a n\xf3 c\xf3 BF = 1. Khi \u0111\xf3, ta c\u1ea7n l\xe0m l\u1ea7n l\u01b0\u1ee3t 2 b\u01b0\u1edbc sau\\n* **Right rotation** c\xe2y con ph\u1ea3i.\\n* **Left rotation** node c\u1ea7n x\xe9t.\\n\\n![Right Left](./images/right_left.PNG)\\n\\n### 4. Code python cho c\xe1c ho\u1ea1t \u0111\u1ed9ng tr\xean c\xe2y AVL\\n\\n```python\\n# ---------------------------METHOD TO HELP BALANCE THE TREE---------------------------\\n#      y                               x\\n#     / \\\\     Right Rotation          /  \\\\\\n#    x   T3   - - - - - - - >        T1   y\\n#   / \\\\       < - - - - - - -            / \\\\\\n#  T1  T2     Left Rotation            T2  T3\\n\\n# ---------------------------BALANCE THE TREE IN PARTICULAR CASES---------------------------\\n# -----Left Left Case\\n#          z                                      y\\n#         / \\\\                                   /   \\\\\\n#        y   T4      Right Rotate (z)          x      z\\n#       / \\\\          - - - - - - - - ->      /  \\\\    /  \\\\\\n#      x   T3                               T1  T2  T3  T4\\n#     / \\\\\\n#   T1   T2\\n# -----Left Right Case\\n#      z                               z                           x\\n#     / \\\\                            /   \\\\                        /  \\\\\\n#    y   T4  Left Rotate (y)        x    T4  Right Rotate(z)    y      z\\n#   / \\\\      - - - - - - - - ->    /  \\\\      - - - - - - - ->  / \\\\    / \\\\\\n# T1   x                          y    T3                    T1  T2 T3  T4\\n#     / \\\\                        / \\\\\\n#   T2   T3                    T1   T2\\n# -----Right Right Case\\n#   z                                y\\n#  /  \\\\                            /   \\\\\\n# T1   y     Left Rotate(z)       z      x\\n#     /  \\\\   - - - - - - - ->    / \\\\    / \\\\\\n#    T2   x                     T1  T2 T3  T4\\n#        / \\\\\\n#      T3  T4\\n# -----Right Left Case\\n#    z                            z                            x\\n#   / \\\\                          / \\\\                          /  \\\\\\n# T1   y   Right Rotate (y)    T1   x      Left Rotate(z)   z      y\\n#     / \\\\  - - - - - - - - ->     /  \\\\   - - - - - - - ->  / \\\\    / \\\\\\n#    x   T4                      T2   y                  T1  T2  T3  T4\\n#   / \\\\                              /  \\\\\\n# T2   T3                           T3   T4\\n\\nclass AVLNode:\\n    def __init__(self, val):\\n        self.left = None\\n        self.right = None\\n        self.val = val\\n        self.height = 1\\n\\n\\nclass AVLTree:\\n    def insert(self, root, key):\\n        # perform bst\\n        if not root:\\n            return AVLNode(key)\\n        if root.val < key:\\n            root.right = self.insert(root.right, key)\\n        if root.val > key:\\n            root.left = self.insert(root.left, key)\\n        # update the height of the ancestor node\\n        root.height = 1 + max(self.get_height(root.left),\\n                              self.get_height(root.right))\\n\\n        # get balance factor\\n        balance = self.get_balance(root)\\n\\n        # perform balance\\n        # left left\\n        if balance > 1 and key < root.left.val:\\n            return self.right_rotate(root)\\n        # right right\\n        if balance < -1 and key > root.right.val:\\n            return self.left_rotate(root)\\n        # left right\\n        if balance > 1 and key > root.left.val:\\n            root.left = self.left_rotate(root.left)\\n            return self.right_rotate(root)\\n        # right left\\n        if balance < -1 and key < root.left.val:\\n            root.right = self.right_rotate(root.right)\\n            return self.left_rotate(root)\\n\\n        return root\\n\\n    def left_rotate(self, x):\\n        y = x.right\\n        T2 = y.left\\n\\n        y.left = x\\n        x.right = T2\\n\\n        x.height = 1 + max(self.get_height(x.left), self.get_height(x.right))\\n        y.height = 1 + max(self.get_height(y.left), self.get_height(y.right))\\n\\n        return y\\n\\n    def right_rotate(self, y):\\n        x = y.left\\n        T2 = x.right\\n\\n        x.right = y\\n        y.left = T2\\n\\n        x.height = 1 + max(self.get_height(x.left), self.get_height(x.right))\\n        y.height = 1 + max(self.get_height(y.left), self.get_height(y.right))\\n\\n        return x\\n\\n    def get_height(self, root):\\n        if not root:\\n            return 0\\n\\n        return root.height\\n\\n    def get_balance(self, root):\\n        if not root:\\n            return 0\\n\\n        return self.get_height(root.left) - self.get_height(root.right)\\n\\n    def inorder(self, root):\\n        if root is not None:\\n            self.inorder(root.left)\\n            print(root.val)\\n            self.inorder(root.right)\\n\\n\\navl_tree = AVLTree()\\nroot = None\\n\\nroot = avl_tree.insert(root, 20)\\nroot = avl_tree.insert(root, 10)\\nroot = avl_tree.insert(root, 30)\\nroot = avl_tree.insert(root, 40)\\nroot = avl_tree.insert(root, 50)\\nroot = avl_tree.insert(root, 5)\\nroot = avl_tree.insert(root, 15)\\nroot = avl_tree.insert(root, 25)\\nroot = avl_tree.insert(root, 55)\\n\\navl_tree.inorder(root)\\n```\\n\\n### 5. Thu\u1eadt to\xe1n s\u1eafp x\u1ebfp AVL\\nCho m\u1ed9t m\u1ea3ng g\u1ed3m ${n}$ ph\u1ea7n t\u1eed, thu\u1eadt to\xe1n s\u1eafp x\u1ebfp AVL \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n qua c\xe1c b\u01b0\u1edbc sau\\n* Th\u1ef1c hi\u1ec7n ch\xe8n l\u1ea7n l\u01b0\u1ee3t ${n}$ ph\u1ea7n t\u1eed v\xe0o c\xe2y AVL. M\u1ed7i ph\u1ea7n t\u1eed \u0111\u01b0\u1ee3c ch\xe8n t\u1ed1n ${O(logn)}$ time (nh\u01b0 trong c\xe2y t\xecm ki\u1ebfm nh\u1ecb ph\xe2n). Ta c\u1ea7n ch\xe8n ${n}$ ph\u1ea7n t\u1eed, n\xean time complexity c\u1ee7a qu\xe1 tr\xecnh l\xe0 ${O(nlogn)}$.\\n* Ta th\u1ef1c hi\u1ec7n duy\u1ec7t inorder traversal (nh\u01b0 trong c\xe2y t\xecm ki\u1ebfm nh\u1ecb ph\xe2n). Vi\u1ec7c n\xe0y khi\u1ebfn ta ph\u1ea3i duy\u1ec7t qua t\u1ea5t c\u1ea3 ph\u1ea7n t\u1eed, n\xean time complexity c\u1ee7a qu\xe1 tr\xecnh l\xe0 ${O(n)}$.\\n\\nDo v\u1eady, time complexity t\u1ed5ng l\xe0 ${O(n + nlogn) = O(nlogn)}$. Tuy nhi\xean, v\xec ph\u1ea7n c\u1ed9ng th\xeam ${O(n)}$ kia khi\u1ebfn thu\u1eadt to\xe1n s\u1eafp x\u1ebfp c\xe2y AVL n\xe0y kh\xf4ng hi\u1ec7u qu\u1ea3 v\xe0 k\xe9m th\u1ef1c t\u1ebf b\u1eb1ng c\xe1c thu\u1eadt to\xe1n s\u1eafp x\u1ebfp b\xe0i tr\u01b0\u1edbc m\xecnh \u0111\xe3 li\u1ec7t k\xea, b\u1ea1n \u0111\u1ecdc c\xf3 th\u1ec3 truy c\u1eadp **[t\u1ea1i \u0111\xe2y](/blog/2021-02-20-sorting-algorithms/index.md)**.\\n\\n### 6. M\u1edf r\u1ed9ng\\nB\u1ea1n \u0111\u1ecdc c\xf3 th\u1ec3 t\xecm th\u1ea5y visualization cho c\xe1c ho\u1ea1t \u0111\u1ed9ng c\u1ee7a c\xe2y AVL \u0111\u1ec3 tr\u1ef1c quan h\u01a1n **[t\u1ea1i \u0111\xe2y](https://www.cs.usfca.edu/~galles/visualization/AVLtree.html)**.\\n\\n\\n### 7. T\xe0i li\u1ec7u tham kh\u1ea3o\\n\\n[AVL tree](https://en.wikipedia.org/wiki/AVL_tree)\\n\\n[AVL Trees: Rotations, Insertion, Deletion with C++ Example](https://www.guru99.com/avl-tree.html)"},{"id":"binarysearch-tree","metadata":{"permalink":"/blogs/blog/binarysearch-tree","editUrl":"https://github.com/lam1051999/blogs/edit/main/blog/2021-02-22-binarysearch-tree/index.md","source":"@site/blog/2021-02-22-binarysearch-tree/index.md","title":"C\xe2y t\xecm ki\u1ebfm nh\u1ecb ph\xe2n","description":"Intro","date":"2021-02-22T00:00:00.000Z","formattedDate":"February 22, 2021","tags":[{"label":"tree","permalink":"/blogs/blog/tags/tree"},{"label":"binary tree","permalink":"/blogs/blog/tags/binary-tree"},{"label":"algorithms","permalink":"/blogs/blog/tags/algorithms"},{"label":"search","permalink":"/blogs/blog/tags/search"}],"readingTime":11.09,"truncated":true,"authors":[{"name":"Tr\u1ea7n L\xe2m","title":"Data Engineer","url":"https://github.com/lam1051999","imageURL":"https://github.com/lam1051999.png","key":"tranlam"}],"frontMatter":{"slug":"binarysearch-tree","title":"C\xe2y t\xecm ki\u1ebfm nh\u1ecb ph\xe2n","authors":"tranlam","tags":["tree","binary tree","algorithms","search"],"image":"./images/intro.PNG"},"prevItem":{"title":"C\xe2y AVL, thu\u1eadt to\xe1n s\u1eafp x\u1ebfp AVL","permalink":"/blogs/blog/avl-tree"},"nextItem":{"title":"C\xe1c thu\u1eadt to\xe1n s\u1eafp x\u1ebfp c\u01a1 b\u1ea3n","permalink":"/blogs/blog/sorting-algorithms"}},"content":"![Intro](./images/intro.PNG)\\n\\nTrong qu\xe1 tr\xecnh h\u1ecdc l\u1eadp tr\xecnh, b\u1ea1n s\u1ebd b\u1eaft g\u1eb7p r\u1ea5t nhi\u1ec1u lo\u1ea1i c\u1ea5u tr\xfac d\u1eef li\u1ec7u nh\u01b0: m\u1ea3ng, danh s\xe1ch li\xean k\u1ebft, t\u1eeb \u0111i\u1ec3n (dictionary),... M\u1ed7i lo\u1ea1i c\u1ea5u tr\xfac d\u1eef li\u1ec7u c\xf3 \u01b0u \u0111i\u1ec3m v\xe0 nh\u01b0\u1ee3c \u0111i\u1ec3m ri\xeang. H\xf4m nay, m\xecnh s\u1ebd n\xf3i v\u1ec1 lo\u1ea1i c\u1ea5u tr\xfac d\u1eef li\u1ec7u kh\xe1 th\xfa v\u1ecb l\xe0 c\xe2y t\xecm ki\u1ebfm nh\u1ecb ph\xe2n, m\u1ed9t c\u1ea5u tr\xfac d\u1eef li\u1ec7u r\u1ea5t thu\u1eadn l\u1ee3i cho b\xe0i to\xe1n t\xecm ki\u1ebfm.\\n\\n\x3c!--truncate--\x3e\\n\\n### 1. \u0110\u1eb7t v\u1ea5n \u0111\u1ec1\\nNh\u1eefng b\xe0i to\xe1n th\u1ef1c t\u1ebf m\xe0 ch\xfang ta hay c\xe1c doanh nghi\u1ec7p gi\u1ea3i quy\u1ebft th\u01b0\u1eddng \u0111\u01b0\u1ee3c ph\xe2n ra c\xe1c v\u1ea5n \u0111\u1ec1 nh\u1ecf v\xe0 \xe1p d\u1ee5ng c\xe1c thu\u1eadt to\xe1n, c\u0169ng nh\u01b0 c\u1ea5u tr\xfac d\u1eef li\u1ec7u ph\xf9 h\u1ee3p \u0111\u1ec3 \u0111\u01b0a ra \u0111\u01b0\u1ee3c c\xe1ch l\xe0m, sao cho hi\u1ec7u qu\u1ea3 v\xe0 \u0111\u1ee1 t\u1ed1n chi ph\xed nh\u1ea5t. V\u1ea5n \u0111\u1ec1 sau, m\xecnh xin l\u1ea5y v\xed d\u1ee5 tham kh\u1ea3o t\u1eeb kh\xf3a h\u1ecdc 6.006 c\u1ee7a MIT, c\xe1c b\u1ea1n c\xf3 th\u1ec3 truy c\u1eadp **[t\u1ea1i \u0111\xe2y](https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-006-introduction-to-algorithms-fall-2011/lecture-videos/lecture-5-binary-search-trees-bst-sort/)**.\\n\\nGi\u1ea3 s\u1eed h\xe3ng h\xe0ng kh\xf4ng n\u1ecd c\xf3 ch\u01b0\u01a1ng tr\xecnh qu\u1ea3n l\xfd cho \u0111\u01b0\u1eddng bay. M\u1ed7i chuy\u1ebfn bay khi \u0111\u1ebfn s\xe2n th\xec ph\u1ea3i y\xeau c\u1ea7u m\u1ed9t l\u1ecbch h\u1ea1 c\xe1nh v\xe0o m\u1ed9t th\u1eddi \u0111i\u1ec3m nh\u1ea5t \u0111\u1ecbnh. \u0110\u1ec3 kh\xf4ng x\u1ea3y ra xung \u0111\u1ed9t n\xe0o, c\xe1c th\u1eddi \u0111i\u1ec3m h\u1ea1 c\xe1nh ph\u1ea3i c\xe1ch nhau \xedt nh\u1ea5t ${k}$ ph\xfat ${(1)}$. Danh s\xe1ch th\u1eddi \u0111i\u1ec3m h\u1ea1 c\xe1nh l\xe0 ${R}$ g\u1ed3m ${n}$ ph\u1ea7n t\u1eed. L\xe0m sao th\xeam m\u1ed9t th\u1eddi \u0111i\u1ec3m h\u1ea1 c\xe1nh ${t}$ \u0111\u1ec3 th\u1ecfa m\xe3n r\xe0ng bu\u1ed9c ${(1)}$ \u1edf tr\xean.\\nM\xecnh c\xf3 h\xecnh \u1ea3nh cho b\xe0i to\xe1n th\xeam tr\u1ef1c quan\\n\\n![Example](./images/example.PNG)\\n\\nV\u1edbi s\u1ed1 ph\u1ea7n t\u1eed l\xe0 ${n}$, ta mong mu\u1ed1n th\u1ef1c hi\u1ec7n ph\xe9p t\xecm v\u1ecb tr\xed th\xedch h\u1ee3p v\xe0 ch\xe8n th\u1eddi \u0111i\u1ec3m bay m\u1edbi trong th\u1eddi gian hi\u1ec7u qu\u1ea3, nh\u01b0 ${O(logn)}$.\\nV\xe0 sau \u0111\xe2y s\u1ebd l\xe0 c\xe1c m\u1ee5c \u0111\xe1nh gi\xe1 b\xe0i to\xe1n v\u1edbi m\u1ed9t s\u1ed1 c\u1ea5u tr\xfac d\u1eef li\u1ec7u c\u1ee5 th\u1ec3.\\n\\n#### 1.1. M\u1ea3ng/danh s\xe1ch li\xean k\u1ebft ch\u01b0a s\u1eafp x\u1ebfp\\nQuy tr\xecnh ch\xe8n ph\u1ea7n t\u1eed v\xe0o m\u1ea3ng ch\u01b0a s\u1eafp x\u1ebfp, m\xe0 kh\xf4ng quan t\xe2m \u0111\u1ebfn \u0111i\u1ec1u ki\u1ec7n r\xe0ng bu\u1ed9c ${(1)}$, s\u1ebd t\u1ed1n ${O(1)}$.\\nQuy tr\xecnh ch\xe8n ph\u1ea7n t\u1eed v\xe0o m\u1ea3ng ch\u01b0a s\u1eafp x\u1ebfp, m\xe0 quan t\xe2m \u0111\u1ebfn \u0111i\u1ec1u ki\u1ec7n r\xe0ng bu\u1ed9c ${(1)}$, s\u1ebd t\u1ed1n ${O(n)}$.\\n\\nTime complexity: ${O(n)}$.\\n\\n#### 1.2. M\u1ea3ng \u0111\xe3 s\u1eafp x\u1ebfp\\n\\n* T\xecm v\u1ecb tr\xed ph\xf9 h\u1ee3p t\u1ed1n ${O(logn)}$ (s\u1eed d\u1ee5ng t\xecm ki\u1ebfm nh\u1ecb ph\xe2n, nh\xecn v\xe0o ph\u1ea7n t\u1eed trung v\u1ecb v\xe0 quy\u1ebft \u0111\u1ecbnh \u0111i sang tr\xe1i hay ph\u1ea3i).\\n* So s\xe1nh v\u1edbi ph\u1ea7n t\u1eed \u1edf 2 b\xean c\u1ee7a v\u1ecb tr\xed t\u1ed1n ${O(1)}$.\\n* Ch\xe8n ph\u1ea7n t\u1eed v\xe0o v\u1ecb tr\xed th\xedch h\u1ee3p \u0111\xf3 t\u1ed1n ${O(n)}$ (khi m\xe0 b\u1ea1n c\xf3 th\u1ec3 s\u1ebd ph\u1ea3i d\u1ecbch ph\u1ea7n l\u1edbn c\xe1c ph\u1ea7n t\u1eed l\xean 1 v\u1ecb tr\xed v\u1edbi tr\u01b0\u1eddng h\u1ee3p ch\xe8n ph\u1ea7n t\u1eed v\xe0o \u0111\u1ea7u m\u1ea3ng).\\n\\nTime complexity: ${O(n)}$.\\n\\n#### 1.3. Danh s\xe1ch li\xean k\u1ebft \u0111\u01b0\u1ee3c s\u1eafp x\u1ebfp\\nVi\u1ec7c ch\xe8n ph\u1ea7n t\u1eed v\xe0o 1 linked list s\u1ebd m\u1ea5t ${O(1)}$. Nh\u01b0ng vi\u1ec7c t\xecm v\u1ecb tr\xed \u0111\u01b0\u1ee3c ch\xe8n s\u1ebd m\u1ea5t ${O(n)}$ khi m\xe0 ta ph\u1ea3i duy\u1ec7t l\u1ea7n l\u01b0\u1ee3t t\u1eeb head xu\u1ed1ng v\u1ecb tr\xed \u0111\xf3.\\n\\n![Linked List](./images/linked_list.PNG)\\n\\n#### 1.4. C\xe2y heap\\nV\u1edbi vi\u1ec7c ch\xe8n v\xe0o c\xe2y min-heap ho\u1eb7c max-heap\\n* Vi\u1ec7c t\xecm v\u1ecb tr\xed ch\xe8n s\u1ebd m\u1ea5t ${O(n)}$ khi m\xe0 ta c\xf3 th\u1ec3 ph\u1ea3i duy\u1ec7t t\u1ea5t c\u1ea3 ph\u1ea7n t\u1eed.\\n* Vi\u1ec7c ch\xe8n v\xe0o c\xe2y min/max heap l\xe0 kh\xf4ng \u1ed5n \u0111\u1ecbnh, v\xec c\xf3 th\u1ec3 sau khi ch\xe8n v\xe0o v\u1ecb tr\xed n\xe0o \u0111\xf3, ta ph\xe1 v\u1ee1 t\xednh ch\u1ea5t c\u1ee7a c\xe2y min/max heap v\xe0 ph\u1ea3i ch\u1ea1y **min/max-heapify** (\u1edf b\xe0i vi\u1ebft [c\xe1c thu\u1eadt to\xe1n s\u1eafp x\u1ebfp c\u01a1 b\u1ea3n](/blog/2021-02-20-sorting-algorithms/index.md), m\xecnh c\u0169ng \u0111\xe3 n\xf3i v\u1ec1 **max-heapify**) \u0111\u1ec3 l\u1ea5y l\u1ea1i \u0111\u01b0\u1ee3c thu\u1ed9c t\xednh ph\xf9 h\u1ee3p. Vi\u1ec7c ch\u1ea1y l\u1ea1i **min/max-heapify** s\u1ebd kh\xf4ng th\u1ec3 \u0111\u1ea3m b\u1ea3o \u0111\u01b0\u1ee3c \u0111i\u1ec1u ki\u1ec7n r\xe0ng bu\u1ed9c ${(1)}$.\\n\\n*Ch\xfang ta c\u1ea7n m\u1ed9t c\u1ea5u tr\xfac d\u1eef li\u1ec7u t\u1ed1t h\u01a1n \u0111\u1ec3 c\xf3 th\u1ec3 th\u1ef1c hi\u1ec7n t\xecm v\u1ecb tr\xed th\xedch h\u1ee3p v\xe0 ch\xe8n trong ${O(logn)}$.*\\n\\n### 2. C\xe2y t\xecm ki\u1ebfm nh\u1ecb ph\xe2n\\nC\xe2y t\xecm ki\u1ebfm nh\u1ecb ph\xe2n l\xe0 c\u1ea5u tr\xfac d\u1eef li\u1ec7u th\u1ecfa m\xe3n ${(2)}$\\n* M\u1ed7i node ch\u1ec9 c\xf3 t\u1ed1i \u0111a 2 node con.\\n* Gi\xe1 tr\u1ecb node con tr\xe1i nh\u1ecf h\u01a1n node cha.\\n* Gi\xe1 tr\u1ecb node con ph\u1ea3i l\u1edbn h\u01a1n node cha.\\n* C\xe2y con tr\xe1i v\xe0 c\xe2y con ph\u1ea3i c\u0169ng l\xe0 m\u1ed9t c\xe2y t\xecm ki\u1ebfm nh\u1ecb ph\xe2n.\\n\\nM\u1ed7i node c\u1ee7a c\xe2y g\u1ed3m\\n* Gi\xe1 tr\u1ecb c\u1ee7a node.\\n* Con tr\u1ecf tr\u1ecf t\u1edbi node con tr\xe1i.\\n* Con tr\u1ecf tr\u1ecf t\u1edbi node con ph\u1ea3i. \\n\\n```python\\nclass Node:\\n    def __init__(self, val, left=None, right=None):\\n        self.val = val\\n        self.left = left\\n        self.right = right\\n```\\n\\nC\xe1c lo\u1ea1i c\xe2y nh\u1ecb ph\xe2n:\\n* **Full binary tree:** m\u1ed7i node c\u1ee7a c\xe2y c\xf3 0 ho\u1eb7c 2 node con.\\n* **Complete binary tree:** c\xe1c t\u1ea7ng \u0111\u1ec1u ch\u1ee9a \u0111\u1ea7y node ngo\u1ea1i tr\u1eeb t\u1ea7ng cu\u1ed1i, v\xe0 c\xe1c node t\u1ea7ng cu\u1ed1i ph\u1ea3i \u0111\u01b0\u1ee3c \u0111i\u1ec1n \u0111\u1ea7y t\u1eeb tr\xe1i sang ph\u1ea3i.\\n* **Degenerate binary tree:** c\xe2y m\xe0 t\u1ea5t c\u1ea3 c\xe1c node cha \u0111\u1ec1u ch\u1ec9 c\xf3 1 node con.\\n* **Perfect binary tree:** internal node n\xe0o c\u0169ng c\xf3 2 node con v\xe0 c\xe1c leaf \u1edf c\u0169ng m\u1ed9t m\u1ee9c.\\n* **Balanced binary tree:** chi\u1ec1u cao c\u1ee7a c\xe2y con tr\xe1i v\xe0 c\xe2y con ph\u1ea3i ch\xeanh l\u1ec7ch nhau nhi\u1ec1u nh\u1ea5t l\xe0 1.\\n\\nD\u01b0\u1edbi \u0111\xe2y l\xe0 h\xecnh \u1ea3nh minh h\u1ecda\\n\\n![Types](./images/types.PNG)\\n\\n### 3. C\xe1c ho\u1ea1t \u0111\u1ed9ng v\u1edbi c\xe2y t\xecm ki\u1ebfm nh\u1ecb ph\xe2n\\nX\xe9t c\xe2y c\xf3 ${n}$ node, chi\u1ec1u cao l\xe0 ${h}$.\\n\\n#### 3.1. Search - T\xecm ki\u1ebfm m\u1ed9t gi\xe1 tr\u1ecb trong c\xe2y\\nT\xecm ki\u1ebfm m\u1ed9t kh\xf3a tr\xean c\xe2y, ta th\u1ef1c hi\u1ec7n b\u1eb1ng ph\u01b0\u01a1ng ph\xe1p \u0111\u1ec7 quy. B\u1eaft \u0111\u1ea7u t\u1eeb g\u1ed1c, ta so s\xe1nh gi\xe1 tr\u1ecb c\u1ee7a node g\u1ed1c v\u1edbi kh\xf3a. N\u1ebfu gi\xe1 tr\u1ecb node g\u1ed1c nh\u1ecf h\u01a1n kh\xf3a, ta ph\u1ea3i t\xecm n\xf3 tr\xean c\xe2y con tr\xe1i, n\u1ebfu gi\xe1 tr\u1ecb node g\u1ed1c l\u1edbn h\u01a1n kh\xf3a, ta t\xecm kh\xf3a \u0111\xf3 tr\xean c\xe2y con ph\u1ea3i. Ta th\u1ef1c hi\u1ec7n \u0111i\u1ec1u n\xe0y v\u1edbi t\u1ea5t c\u1ea3 node ta \u0111i t\u1edbi. N\u1ebfu gi\xe1 tr\u1ecb node b\u1eb1ng kh\xf3a, ta tr\u1ea3 v\u1ec1 node \u0111\xf3. N\u1ebfu gi\xe1 tr\u1ecb node l\xe0 r\u1ed7ng, ta k\u1ebft lu\u1eadn kh\xf4ng t\xecm th\u1ea5y kh\xf3a tr\xean c\xe2y.\\n\\n![Search](./images/search.JPG)\\n\\nV\xed d\u1ee5 t\xecm kh\xf3a ${40}$. Ta so s\xe1nh ${40 < 50}$, \u0111i xu\u1ed1ng c\xe2y con tr\xe1i \u0111\u1ec3 x\xe9t. Ta so s\xe1nh ${40 > 30}$, \u0111i xu\u1ed1ng c\xe2y con ph\u1ea3i \u0111\u1ec3 x\xe9t. Cu\u1ed1i c\xf9ng, ta t\xecm \u0111\u01b0\u1ee3c node c\xf3 gi\xe1 tr\u1ecb l\xe0 ${40}$.\\n\\n**Code Python**\\n```python\\ndef search(root, key):\\n    if root is None:\\n        print(\\"Cannot find the key \\" + key +  \\" in bst\\")\\n        return None\\n    # ti\u1ebfp t\u1ee5c duy\u1ec7t\\n    if root.val < key:\\n        return search(root.right, key)\\n    elif root.val > key:\\n        return search(root.left, key)\\n    else:\\n        return root\\n```\\n\\n**Ph\xe2n t\xedch thu\u1eadt to\xe1n**: t\xecm ki\u1ebfm kh\xf3a trong c\xe2y t\u1ed1n ${O(h)}$.\\n* **Average case:** chi\u1ec1u cao c\xe2y ${h = \\\\Theta(logn)}$, n\xean time complexity s\u1ebd l\xe0 ${O(logn)}$.\\n* **Worst case:** khi c\xe2y l\xe0 m\u1ed9t degenerate binary tree, chi\u1ec1u cao c\xe2y ${h = n}$ n\xean time complexity l\xe0 ${O(n)}$.\\n\\n#### 3.2. Insert - Ch\xe8n m\u1ed9t node v\xe0o c\xe2y\\nQu\xe1 tr\xecnh ch\xe8n m\u1ed9t node c\xf3 gi\xe1 tr\u1ecb nh\u1ea5t \u0111\u1ecbnh c\xe2y di\u1ec5n ra c\u0169ng c\xf3 quy tr\xecnh \u0111i kh\xe1 gi\u1ed1ng v\u1edbi search. Ta duy\u1ec7t nh\u01b0 v\u1eady cho \u0111\u1ebfn khi g\u1eb7p node r\u1ed7ng th\xec ta ch\xe8n node c\u1ea7n ch\xe8n v\xe0o v\u1ecb tr\xed \u0111\xf3. Trong qu\xe1 tr\xecnh duy\u1ec7t, ta t\xecm th\u1ea5y node n\xe0o \u0111\xf3 c\xf3 gi\xe1 tr\u1ecb b\u1eb1ng kh\xf3a, ta tr\u1ea3 v\u1ec1 node \u0111\xf3.\\n\\n![Insert](./images/insert.PNG)\\n\\nV\xed d\u1ee5 ch\xe8n kh\xf3a ${4}$. So s\xe1nh ${4 < 6}$, th\u1ef1c hi\u1ec7n \u0111i xu\u1ed1ng c\xe2y con tr\xe1i, so s\xe1nh ${4 > 3}$, th\u1ef1c hi\u1ec7n \u0111i xu\u1ed1ng c\xe2y con ph\u1ea3i. Th\u1ea5y v\u1ecb tr\xed c\xe2y con ph\u1ea3i r\u1ed7ng, ta ch\xe8n node kh\xf3a ${4}$ t\u1ea1i v\u1ecb tr\xed \u0111\xf3.\\n\\n**Code Python**\\n```python\\ndef insert(root, key):\\n    # \u0111\xe3 t\u1edbi leaf\\n    if root is None:\\n        return Node(key)\\n    # ti\u1ebfp t\u1ee5c duy\u1ec7t. N\u1ebfu b\u1ea5t ng\u1edd g\u1eb7p node c\xf3 gi\xe1 tr\u1ecb b\u1eb1ng kh\xf3a, tr\u1ea3 v\u1ec1 node \u0111\xf3. \\n    else:\\n        if root.val == key:\\n            return root\\n        elif root.val < key:\\n            root.right = insert(root.right, key)\\n        else:\\n            root.left = insert(root.left, key)\\n            \\n    return root\\n```\\n\\n**Ph\xe2n t\xedch thu\u1eadt to\xe1n**: t\xecm ki\u1ebfm v\u1ecb tr\xed c\u1ea7n ch\xe8n trong c\xe2y t\u1ed1n ${O(h)}$, ch\xe8n t\u1ed1n ${O(1)}$. Do v\u1eady, time complexity l\xe0 ${O(h)}$.\\n* **Average case:** chi\u1ec1u cao c\xe2y ${h = \\\\Theta(logn)}$, n\xean time complexity s\u1ebd l\xe0 ${O(logn)}$.\\n* **Worst case:** khi c\xe2y l\xe0 m\u1ed9t degenerate binary tree, chi\u1ec1u cao c\xe2y ${h = n}$ n\xean time complexity l\xe0 ${O(n)}$.\\n\\n**Gi\u1ea3i quy\u1ebft v\u1ea5n \u0111\u1ec1 \u1edf m\u1ee5c 1:** do t\u1ea1i b\u01b0\u1edbc ch\xe8n node v\xe0o trong c\xe2y, ta th\u1ea5y \u0111\u01b0\u1ee3c r\u1eb1ng ta c\xf3 th\u1ec3 th\xeam v\xe0o c\xe1c c\xe2u l\u1ec7nh \u0111i\u1ec1u ki\u1ec7n \u0111\u1ec3 c\xf3 ch\u1ea5p thu\u1eadn vi\u1ec7c ch\xe8n hay kh\xf4ng m\xe0 kh\xf4ng l\xe0m \u1ea3nh h\u01b0\u1edfng \u0111\u1ebfn c\xe1c t\xednh ch\u1ea5t \u1edf ${(2)}$ c\u1ee7a c\xe2y t\xecm ki\u1ebfm nh\u1ecb ph\xe2n.\\n\\n![Insert2](./images/insert_2.PNG)\\n\\nNh\u01b0 v\u1edbi c\xe2y tr\xean, tr\u01b0\u1eddng h\u1ee3p ${k = 3}$. Ta mu\u1ed1n ch\xe8n ${45}$. T\u1ea1i b\u01b0\u1edbc x\xe9t node ${40}$, ta th\u1ea5y ${45 - 40 > 3}$, n\xean b\u01b0\u1edbc ti\u1ebfp theo s\u1ebd ch\xe8n ${45}$, m\xe0 kh\xf4ng l\xe0m m\u1ea5t \u0111i c\xe1c t\xednh ch\u1ea5t c\u1ee7a c\xe2y. N\u1ebfu ta mu\u1ed1n ch\xe8n ${42}$, ta x\xe9t ${42 - 40 < 3}$, ta kh\xf4ng th\u1ef1c hi\u1ec7n ch\xe8n node.\\n\\n#### 3.3. Delete - X\xf3a m\u1ed9t node tr\xean c\xe2y\\nQu\xe1 tr\xecnh x\xf3a m\u1ed9t node tr\xean c\xe2y t\xecm ki\u1ebfm nh\u1ecb ph\xe2n x\u1ea3y ra trong 3 tr\u01b0\u1eddng h\u1ee3p\\n* Node c\u1ea7n x\xf3a kh\xf4ng c\xf3 node con. \\n* Node c\u1ea7n x\xf3a c\xf3 1 node con.\\n* Node c\u1ea7n x\xf3a c\xf3 c\u1ea3 2 node con.\\n\\n**Tr\u01b0\u1eddng h\u1ee3p 1:** Node c\u1ea7n x\xf3a kh\xf4ng c\xf3 node con\\n\\n![Delete](./images/delete.JPG)\\n\\nV\xed d\u1ee5 v\u1edbi vi\u1ec7c x\xf3a node c\xf3 kh\xf3a ${40}$ \u1edf c\xe2y tr\xean, ta ch\u1ec9 vi\u1ec7c gi\u1ea3i ph\xf3ng n\xf3 kh\u1ecfi c\xe2y.\\n\\n**Tr\u01b0\u1eddng h\u1ee3p 2:** Node c\u1ea7n x\xf3a c\xf3 1 node con\\n\\n![Delete2](./images/delete_2.JPG)\\n\\nV\xed d\u1ee5 v\u1edbi vi\u1ec7c x\xf3a node c\xf3 kh\xf3a ${90}$ \u1edf c\xe2y tr\xean, ta ch\u1ec9 c\u1ea7n thay th\u1ebf node \u0111\xf3 v\u1edbi node con duy nh\u1ea5t c\u1ee7a n\xf3.\\n\\n**Tr\u01b0\u1eddng h\u1ee3p 3:** Node c\u1ea7n x\xf3a c\xf3 2 node con, ta thay th\u1ebf n\xf3 b\u1eb1ng node c\xf3 kh\xf3a l\u1edbn nh\u1ea5t \u1edf c\xe2y con tr\xe1i c\u1ee7a n\xf3 (node c\u1ef1c ph\u1ea3i c\u1ee7a c\xe2y con tr\xe1i), ho\u1eb7c node c\xf3 kh\xf3a nh\u1ecf nh\u1ea5t \u1edf c\xe2y con ph\u1ea3i c\u1ee7a n\xf3 (node c\u1ef1c tr\xe1i c\u1ee7a c\xe2y con ph\u1ea3i).\\n\\n![Delete3](./images/delete_3.JPG)\\n\\nV\xed d\u1ee5 v\u1edbi vi\u1ec7c x\xf3a node c\xf3 kh\xf3a ${30}$ \u1edf c\xe2y tr\xean, ta t\xecm node c\xf3 kh\xf3a nh\u1ecf nh\u1ea5t \u1edf c\xe2y con ph\u1ea3i c\u1ee7a n\xf3, l\xe0 ${35}$, v\xe0 thay th\u1ebf node c\xf3 kh\xf3a ${35}$ v\xe0o v\u1ecb tr\xed node c\xf3 kh\xf3a ${30}$. Sau \u0111\xf3, ta nh\u1eadn ra r\u1eb1ng, node c\xf3 kh\xf3a ${35}$ \u1edf v\u1ecb tr\xed c\u0169 l\xe0 node c\xf3 1 node con. N\xean ta c\u0169ng \xe1p d\u1ee5ng quy tr\xecnh x\xf3a node nh\u01b0 **Tr\u01b0\u1eddng h\u1ee3p 2** cho v\u1ecb tr\xed \u0111\xf3.\\n\\n**Code Python**\\n```python\\n# t\xecm node tr\xe1i nh\u1ea5t t\u1ea1i c\xe2y con ph\u1ea3i\\ndef find_min(root):\\n    current = root\\n    # \u0111i \u0111\u1ebfn node tr\xe1i nh\u1ea5t c\u1ee7a c\xe2y con ph\u1ea3i\\n    while current.left is not None:\\n        current = current.left\\n    return current\\n\\ndef delete(root, key):\\n    if root is None:\\n        return root\\n    # ti\u1ebfp t\u1ee5c duy\u1ec7t cho \u0111\u1ebfn khi t\xecm th\u1ea5y node c\xf3 gi\xe1 tr\u1ecb l\xe0 kh\xf3a\\n    if root.val < key:\\n        root.right = delete(root.right, key)\\n    elif root.val > key:\\n        root.left = delete(root.left, key)\\n    else:\\n        # tr\u01b0\u1eddng h\u1ee3p 1\\n        if root.left is None and root.right is None:\\n            root = None\\n            return root\\n        # tr\u01b0\u1eddng h\u1ee3p 2\\n        elif root.left is None:\\n            root.val = root.right.val\\n            root.right = None\\n            return root\\n        elif root.right is None:\\n            root.val = root.left.val\\n            root.left = None\\n            return root\\n        # tr\u01b0\u1eddng h\u1ee3p 3\\n        else:\\n            temp = find_min(root.right)\\n            root.val = temp.val\\n            root.right = delete(root.right, temp.val)\\n            return root\\n\\n    return root\\n```\\n\\n**Ph\xe2n t\xedch thu\u1eadt to\xe1n**:\\n* **Tr\u01b0\u1eddng h\u1ee3p 1:** t\xecm node t\u1ed1n ${O(h)}$, x\xf3a node t\u1ed1n ${O(1)}$. Do v\u1eady, time complexity l\xe0 ${O(h)}$.\\n* **Tr\u01b0\u1eddng h\u1ee3p 2:** t\xecm node t\u1ed1n ${O(h)}$, x\xf3a node t\u1ed1n ${O(1)}$, chuy\u1ec3n node t\u1ed1n ${O(1)}$. Do v\u1eady, time complexity l\xe0 ${O(h)}$.\\n* **Tr\u01b0\u1eddng h\u1ee3p 3:** t\xecm node t\u1ed1n ${O(h)}$, t\xecm node tr\xe1i nh\u1ea5t tr\xean c\xe2y con ph\u1ea3i t\u1ed1n ${O(h)}$, x\xf3a node tr\xe1i nh\u1ea5t tr\xean c\xe2y con ph\u1ea3i t\u1ed1n ${O(h)}$. Do v\u1eady, time complexity l\xe0 ${O(h)}$.\\n* **Average case:** chi\u1ec1u cao c\xe2y ${h = \\\\Theta(logn)}$, n\xean time complexity s\u1ebd l\xe0 ${O(logn)}$.\\n* **Worst case:** khi c\xe2y l\xe0 m\u1ed9t degenerate binary tree, chi\u1ec1u cao c\xe2y ${h = n}$ n\xean time complexity l\xe0 ${O(n)}$.\\n\\n#### 3.4. Traversal - Duy\u1ec7t c\xe2y theo th\u1ee9 t\u1ef1\\nVi\u1ec7c duy\u1ec7t v\xe0 in ra c\xe1c gi\xe1 tr\u1ecb c\u1ee7a c\xe1c node trong c\xe2y c\xf3 3 c\xe1ch duy\u1ec7t: pre-order, in-order, post-order\\n\\nX\xe9t c\xe2y sau ${(3)}$\\n\\n![Order](./images/order.PNG)\\n\\n##### 3.4.1. Duy\u1ec7t pre-order\\nTa duy\u1ec7t node cha tr\u01b0\u1edbc, \u0111\u1ebfn node con tr\xe1i v\xe0 sau \u0111\xf3 \u0111\u1ebfn node con ph\u1ea3i.\\n\\nV\xed d\u1ee5 v\u1edbi c\xe2y ${(3)}$, duy\u1ec7t pre-order, k\u1ebft qu\u1ea3 l\xe0 ${6, 3, 1, 10, 9, 12}$.\\n\\n**Code Python**\\n```python\\ndef preorder(root):\\n    if root:\\n        print(root.val)\\n        preorder(root.left)\\n        preorder(root.right)\\n```\\n\\n##### 3.4.2. Duy\u1ec7t in-order\\nTa duy\u1ec7t node con tr\xe1i tr\u01b0\u1edbc, \u0111\u1ebfn node cha v\xe0 sau \u0111\xf3 \u0111\u1ebfn node con ph\u1ea3i.\\n\\nV\xed d\u1ee5 v\u1edbi c\xe2y ${(3)}$, duy\u1ec7t pre-order, k\u1ebft qu\u1ea3 l\xe0 ${1, 3, 6, 9, 10, 12}$.\\n\\n**Code Python**\\n```python\\ndef inorder(root):\\n    if root:\\n        inorder(root.left)\\n        print(root.val)\\n        inorder(root.right)\\n```\\n\\n##### 3.4.3. Duy\u1ec7t post-order\\nTa duy\u1ec7t node con tr\xe1i tr\u01b0\u1edbc, \u0111\u1ebfn node con ph\u1ea3i v\xe0 sau \u0111\xf3 \u0111\u1ebfn node cha.\\n\\nV\xed d\u1ee5 v\u1edbi c\xe2y ${(3)}$, duy\u1ec7t pre-order, k\u1ebft qu\u1ea3 l\xe0 ${1, 3, 9, 12, 10, 6}$.\\n\\n**Code Python**\\n```python\\ndef postorder(root):\\n    if root:\\n        postorder(root.left)\\n        postorder(root.right)\\n        print(root.val)\\n```\\n\\n**Ph\xe2n t\xedch thu\u1eadt to\xe1n**:\\nTa duy\u1ec7t h\u1ebft c\xe1c node tr\xean c\xe2y n\xean time complexity l\xe0 ${O(n)}$.\\n\\n### 4. M\u1edf r\u1ed9ng\\nC\xe2y t\xecm ki\u1ebfm nh\u1ecb ph\xe2n l\xe0 c\u1ea5u tr\xfac th\xfa v\u1ecb v\xe0 hi\u1ec7u qu\u1ea3. B\u1ea1n \u0111\u1ecdc c\xf3 th\u1ec3 t\xecm th\u1ea5y visualization cho c\xe1c ho\u1ea1t \u0111\u1ed9ng c\u1ee7a c\xe2y t\xecm ki\u1ebfm nh\u1ecb ph\xe2n \u0111\u1ec3 tr\u1ef1c quan h\u01a1n **[t\u1ea1i \u0111\xe2y](https://www.cs.usfca.edu/~galles/visualization/BST.html)**.\\n\\n\\n### 5. T\xe0i li\u1ec7u tham kh\u1ea3o\\n\\n[Binary Search Tree | Set 1 (Search and Insertion)](https://www.geeksforgeeks.org/binary-search-tree-set-1-search-and-insertion/)\\n\\n[C\xe2y t\xecm ki\u1ebfm nh\u1ecb ph\xe2n](https://vi.wikipedia.org/wiki/C%C3%A2y_t%C3%ACm_ki%E1%BA%BFm_nh%E1%BB%8B_ph%C3%A2n)\\n\\n[5 Ph\xfat Th\xf4ng Th\u1ea1o Binary Search Tree](https://codelearn.io/sharing/5-phut-thong-thao-binary-search-tree)"},{"id":"sorting-algorithms","metadata":{"permalink":"/blogs/blog/sorting-algorithms","editUrl":"https://github.com/lam1051999/blogs/edit/main/blog/2021-02-20-sorting-algorithms/index.md","source":"@site/blog/2021-02-20-sorting-algorithms/index.md","title":"C\xe1c thu\u1eadt to\xe1n s\u1eafp x\u1ebfp c\u01a1 b\u1ea3n","description":"Intro","date":"2021-02-20T00:00:00.000Z","formattedDate":"February 20, 2021","tags":[{"label":"algorithms","permalink":"/blogs/blog/tags/algorithms"},{"label":"sorting","permalink":"/blogs/blog/tags/sorting"}],"readingTime":21.48,"truncated":true,"authors":[{"name":"Tr\u1ea7n L\xe2m","title":"Data Engineer","url":"https://github.com/lam1051999","imageURL":"https://github.com/lam1051999.png","key":"tranlam"}],"frontMatter":{"slug":"sorting-algorithms","title":"C\xe1c thu\u1eadt to\xe1n s\u1eafp x\u1ebfp c\u01a1 b\u1ea3n","authors":"tranlam","tags":["algorithms","sorting"],"image":"./images/intro.JPEG"},"prevItem":{"title":"C\xe2y t\xecm ki\u1ebfm nh\u1ecb ph\xe2n","permalink":"/blogs/blog/binarysearch-tree"},"nextItem":{"title":"Thu\u1eadt to\xe1n t\xecm \u0111\u1ec9nh Peak Finding","permalink":"/blogs/blog/peak-finding"}},"content":"![Intro](./images/intro.JPEG)\\n\\nTr\u1edf l\u1ea1i th\xf4i. Nh\u1eefng blogs \u0111\u1ea7u ti\xean n\xe0y m\xecnh s\u1ebd ch\u1ec9 vi\u1ebft v\u1ec1 nh\u1eefng thu\u1eadt to\xe1n c\u01a1 b\u1ea3n nh\u1ea5t khi m\u1edbi ch\u1eadp ch\u1eefng v\xe0o h\u1ecdc l\u1eadp tr\xecnh th\xf4i. Th\u1ee9 nh\u1ea5t, \u0111\u1ec3 m\xecnh h\u1ecdc l\u1ea1i c\xe1c th\u1ee9 c\u01a1 b\u1ea3n (v\xec m\xecnh c\u1ef1c k\xec hay qu\xean). Th\u1ee9 hai, \u0111\u1ec3 c\xe1c b\u1ea1n m\u1edbi h\u1ecdc l\u1eadp tr\xecnh c\xf3 th\u1ec3 tham kh\u1ea3o ha. B\xe0i vi\u1ebft n\xe0y s\u1ebd n\xf3i v\u1ec1 c\xe1c thu\u1eadt to\xe1n s\u1eafp x\u1ebfp c\u01a1 b\u1ea3n m\xecnh \u0111\u01b0\u1ee3c h\u1ecdc \u1edf tr\u01b0\u1eddng l\u1edbp, v\xe0 c\u0169ng t\u1ef1 h\u1ecdc n\u1eefa.\\n\\n\x3c!--truncate--\x3e\\n\\n### 1. T\u1ea1i sao ch\xfang ta c\u1ea7n nh\u1eefng thu\u1eadt to\xe1n s\u1eafp x\u1ebfp?\\n**Th\u1ee9 nh\u1ea5t**, \u0111\u01a1n gi\u1ea3n l\xe0 ch\u1ec9 \u0111\u1ec3 qua c\xe1c k\xec thi \u1edf tr\u01b0\u1eddng \u0111\u1ea1i h\u1ecdc, h\u1ecdc m\u1ea5y m\xf4n Ng\xf4n ng\u1eef l\u1eadp tr\xecnh, C\u1ea5u tr\xfac d\u1eef li\u1ec7u v\xe0 gi\u1ea3i thu\u1eadt,... \u0111i thi d\u1ec5 b\u1ecb h\u1ecfi m\u1ea5y c\xe1i s\u1eafp x\u1ebfp n\xe0y l\u1eafm lu\xf4n.\\n\\n**Th\u1ee9 hai**, kh\xe2u s\u1eafp x\u1ebfp ph\u1ea7n t\u1eed th\u01b0\u1eddng l\xe0 kh\xe2u trung gian, ti\u1ec1n x\u1eed l\xfd d\u1eef li\u1ec7u trong c\xe1c b\xe0i to\xe1n, h\u1ec7 th\u1ed1ng x\u1eed l\xfd,... \u0111\u1ec3 th\u1ef1c hi\u1ec7n c\xe1c c\xf4ng vi\u1ec7c l\u1edbn h\u01a1n sau n\xf3. V\xec l\u01b0\u1ee3ng d\u1eef li\u1ec7u trong c\xe1c h\u1ec7 th\u1ed1ng th\u1ef1c t\u1ebf lu\xf4n r\u1ea5t l\u1edbn, n\xean ta c\u1ea7n c\xe1c thu\u1eadt to\xe1n s\u1eafp x\u1ebfp hi\u1ec7u qu\u1ea3 \u0111\u1ec3 \u0111\u1ee1 t\u1ed1n chi ph\xed nh\u1ea5t (th\u1eddi gian v\xe0 b\u1ed9 nh\u1edb).\\n\\n**C\xe1c v\xed d\u1ee5 \u0111\u01a1n gi\u1ea3n v\u1ec1 \xe1p d\u1ee5ng thu\u1eadt to\xe1n s\u1eafp x\u1ebfp**\\n* S\u1eafp x\u1ebfp danh s\xe1ch kh\xe1ch h\xe0ng theo t\xean trong t\u1ec7p tin qu\u1ea3n l\xfd.\\n* T\xecm ph\u1ea7n t\u1eed trung v\u1ecb trong ${\\\\Theta(1)}$, hay l\xe0 t\xecm ki\u1ebfm 1 ph\u1ea7n t\u1eed n\xe0o \u0111\xf3 v\u1edbi ${\\\\Theta(logn)}$ n\u1ebfu nh\u01b0 c\xf3 m\u1ed9t m\u1ea3ng \u0111\xe3 \u0111\u01b0\u1ee3c s\u1eafp x\u1ebfp.\\n* Database s\u1eed d\u1ee5ng c\xe1c thu\u1eadt to\xe1n merge sort \u0111\u1ec3 s\u1eafp x\u1ebfp c\xe1c t\u1eadp d\u1eef li\u1ec7u khi ch\xfang qu\xe1 l\u1edbn \u0111\u1ec3 load c\u1ea3 c\u1ee5c v\xe0o b\u1ed9 nh\u1edb.\\n* T\xecm ki\u1ebfm file, n\xe9n d\u1eef li\u1ec7u, t\xecm \u0111\u01b0\u1eddng \u0111i.\\n* C\xe1c tr\xecnh thi\u1ebft k\u1ebf \u0111\u1ed3 h\u1ecda c\u0169ng s\u1eed d\u1ee5ng thu\u1eadt to\xe1n \u0111\u1ec3 s\u1eafp x\u1ebfp c\xe1c t\u1ea7ng (layers) \u0111\u1ec3 render th\u1ebf n\xe0o cho hi\u1ec7u qu\u1ea3.\\n* \u0102n xong c\u1ed7, m\u1eb9 b\u1ea1n b\u1eaft b\u1ea1n r\u1eeda b\xe1t. B\u1ea1n v\u1eadt l\u1ed9n v\u1edbi ch\u1ee5c ch\u1ed3ng b\xe1t trong 1 ti\u1ebfng l\u1eadn v\xe0 gi\u1edd b\u1ea1n kh\xf4ng mu\u1ed1n m\u1ea5t th\xeam b\u1ea5t c\u1ee9 th\u1eddi gian n\xe0o cho \u0111\u1ed1ng b\xe1t kia n\u1eefa. H\xf3a ra, c\xf4ng vi\u1ec7c c\xf2n l\u1ea1i l\xe0 s\u1eafp x\u1ebfp \u0111\u1ed3ng b\xe1t v\xe0o tr\u1ea1n sao cho ng\u0103n n\u1eafp, \u0111\u1eb9p v\xe0 h\u01a1n h\u1ebft l\xe0 nhanh ch\xf3ng \u0111\u1ec3 b\u1ea1n c\xf2n \u0111i ngh\u1ecbch \u0111i\u1ec7n tho\u1ea1i. Theo b\u1ea3n n\u0103ng c\u1ee7a t\u1ea5t c\u1ea3 ng\u01b0\u1eddi ch\xe2u \xc1 tr\xed th\xf4ng minh trung b\xecnh \u0111\u1ed5 l\xean, b\u1ea1n \u0111\xe3 s\u1eafp x\u1ebfp ch\xfang r\u1ea5t nhanh v\xe0 ch\u1ed3ng nh\u1ecf \u0111\u1ebfn ch\u1ed3ng to r\u1ea5t b\u1eaft m\u1eaft, sau \u0111\xf3, b\u1ea1n nh\u1eadn ra l\xe0 m\xecnh \u0111\xe3 v\xf4 t\xecnh \xe1p d\u1ee5ng Counting Sort v\xe0o vi\u1ec7c n\xe0y.\\n\\n**C\xe1c ph\xe9p to\xe1n c\u01a1 b\u1ea3n s\u1eed d\u1ee5ng trung gian**\\n* Ph\xe9p to\xe1n so s\xe1nh 2 ph\u1ea7n t\u1eed ${(a, b)}$, tr\u1ea3 v\u1ec1 ${True}$ n\u1ebfu ${(a > b)}$, tr\u1ea3 v\u1ec1 ${False}$ n\u1ebfu ng\u01b0\u1ee3c l\u1ea1i.\\n* Ph\xe9p to\xe1n \u0111\u1ed5i ch\u1ed7 2 ph\u1ea7n t\u1eed ${(a, b)}$, trong Python s\u1ebd \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n nh\u01b0 sau\\n```python\\na, b = b, a\\n```\\nTrong qu\xe1 tr\xecnh ph\xe2n t\xedch c\xe1c thu\u1eadt to\xe1n, ta gi\u1ea3 s\u1eed r\u1eb1ng c\xe1c ph\xe9p to\xe1n tr\xean ch\u1ec9 t\u1ed1n constant time ${\\\\Theta(1)}$.\\n\\n### 2. S\u1eafp x\u1ebfp n\u1ed5i b\u1ecdt (bubble sort)\\nS\u1eafp x\u1ebfp n\u1ed5i b\u1ecdt l\xe0 lo\u1ea1i s\u1eafp x\u1ebfp \u0111\u01a1n gi\u1ea3n v\xe0 k\xe9m hi\u1ec7u qu\u1ea3, th\u01b0\u1eddng \u0111\u01b0\u1ee3c d\u1ea1y trong h\u1ea7u h\xeat t\u1ea5t c\u1ea3 c\xe1c course v\u1ec1 thu\u1eadt to\xe1n b\u1edfi n\xf3 kh\xe1 tr\u1ef1c quan. S\u1eafp x\u1ebfp n\u1ed5i b\u1ecdt so s\xe1nh t\u1eebng c\u1eb7p s\u1ed1 trong m\u1ed9t m\u1ea3ng v\xe0 ho\xe1n \u0111\u1ed5i v\u1ecb tr\xed cho nhau n\u1ebfu ch\xfang kh\xf4ng theo th\u1ee9 t\u1ef1. Nh\u1eefng ph\u1ea7n t\u1eed l\u1edbn nh\u1ea5t s\u1ebd \u0111\u01b0\u1ee3c \u0111\u1ea9y xu\u1ed1ng cu\u1ed1i m\u1ea3ng, trong khi nh\u1eefng ph\u1ea7n t\u1eed nh\u1ecf s\u1ebd d\u1ea7n d\u1ea7n \\"n\u1ed5i l\xean\\" \u0111\u1ea7u m\u1ea3ng.\\n\\n**Thu\u1eadt to\xe1n:**\\n* So s\xe1nh ${arr[0]}$ v\u1edbi ${arr[1]}$, n\u1ebfu ${arr[0] > arr[1]}$, ho\xe1n \u0111\u1ed5i v\u1ecb tr\xed c\u1ee7a ch\xfang. Ti\u1ebfp t\u1ee5c l\xe0m nh\u01b0 v\u1eady cho v\u1edbi (${arr[1], arr[2]}$), (${arr[2], arr[3]}$),...\\n* Th\u1ef1c hi\u1ec7n b\u01b0\u1edbc ${n}$ l\u1ea7n.\\n\u0110\u1ec3 tr\u1ef1c quan h\u01a1n, m\xecnh \u0111em ra h\xecnh \u1ea3nh m\xf4 t\u1ea3 sau\\n\\n![Bubble Sort](./images/bubble.GIF)\\n\\n**Ph\xe2n t\xedch thu\u1eadt to\xe1n:**\\n* **Best case:** x\u1ea3y ra khi ta \xe1p d\u1ee5ng thu\u1eadt to\xe1n tr\xean m\u1ea3ng \u0111\xe3 \u0111\u01b0\u1ee3c s\u1eafp x\u1ebfp. Khi \u0111\xf3, s\u1ebd kh\xf4ng c\xf3 b\u01b0\u1edbc swap n\xe0o trong l\u1ea7n duy\u1ec7t \u0111\u1ea7u ti\xean, ch\u1ec9 c\xf3 c\xe1c b\u01b0\u1edbc so s\xe1nh, t\u1eeb \u0111\xf3 th\xec thu\u1eadt to\xe1n s\u1ebd k\u1ebft th\xfac lu\xf4n sau l\u1ea7n duy\u1ec7t n\xe0y.\\nV\xec th\u1ebf, time complexity s\u1ebd l\xe0 ${\\\\Theta(n)}$.\\nV\xec l\xfd do n\xe0y, bubble sort c\u0169ng \u0111\u01b0\u1ee3c d\xf9ng \u0111\u1ec3 ki\u1ec3m tra xem m\u1ed9t m\u1ea3ng \u0111\xe3 \u0111\u01b0\u1ee3c s\u1eafp x\u1ebfp hay ch\u01b0a.\\n* **Worst case:** x\u1ea3y ra khi m\u1ea3ng b\u1ecb s\u1eafp x\u1ebfp theo chi\u1ec1u ng\u01b0\u1ee3c l\u1ea1i, do \u0111\xf3, c\xf3 ${n-1}$ ph\xe9p so s\xe1nh v\xe0 ho\xe1n \u0111\u1ed5i s\u1ebd \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n trong l\u1ea7n duy\u1ec7t \u0111\u1ea7u ti\xean, ${n-2}$ ph\xe9p so s\xe1nh v\xe0 ho\xe1n \u0111\u1ed5i s\u1ebd \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n trong l\u1ea7n duy\u1ec7t ti\u1ebfp theo,...\\nV\xec th\u1ebf, t\u1ed5ng s\u1ed1 ph\xe9p so s\xe1nh v\xe0 ho\xe1n \u0111\u1ed5i s\u1ebd l\xe0 ${Sum = (n-1) + (n-2) +...+ 2 + 1 = \\\\frac{n \\\\times (n-1)}{2}}$. Do \u0111\xf3, time complexity s\u1ebd l\xe0 ${\\\\Theta(n^2)}$.\\n* **Space complexity:** ${\\\\Theta(1)}$.\\n\\n**Code Python**\\n```python\\nini_arr = [1, 5, 2, 45, 2, 32, 12, 55, 26, 77, 8]\\n\\ndef bubble_sort(arr):\\n    for i in range(len(arr)):\\n        swapped = False\\n        for j in range(len(arr) - i - 1):\\n            if arr[j] > arr[j+1]:\\n                arr[j], arr[j+1] = arr[j+1], arr[j]\\n                swapped = True\\n        if not swapped:\\n            return\\n\\nbubble_sort(ini_arr)\\nprint(ini_arr)\\n```\\nOutput\\n```python\\n[1, 2, 2, 5, 8, 12, 26, 32, 45, 55, 77]\\n```\\n\\n### 3. S\u1eafp x\u1ebfp ch\xe8n (insertion sort)\\nT\u01b0\u1edfng t\u01b0\u1ee3ng b\u1ea1n ch\u01a1i ti\u1ebfn l\xean mi\u1ec1n Nam, khi m\u1edbi \u0111\u01b0\u1ee3c ph\xe1t xong b\u1ed9 b\xe0i trong tay, b\u1ea1n c\xf3 nhi\u1ec1u c\xe1ch s\u1eafp x\u1ebfp t\xf9y theo c\xe1 t\xednh c\u1ee7a b\u1ea1n. V\u1edbi m\xecnh, m\xecnh th\u01b0\u1eddng s\u1eafp x\u1ebfp theo th\u1ee9 t\u1ef1 qu\xe2n b\xe0i t\u1eeb b\xe9 \u0111\u1ebfn l\u1edbn. Nh\u1eefng l\xfac mu\u1ed1n s\u1eafp 1 l\xe1 b\xe0i m\u1edbi v\xe0o b\u1ed9 qu\xe2n b\xe0i tr\xean tay \u0111\xe3 theo th\u1ee9 t\u1ef1, m\xecnh th\u1ef1c hi\u1ec7n ch\xe8n l\xe1 b\xe0i v\xe0o v\u1ecb tr\xed th\xedch h\u1ee3p, v\xe0 \u0111\xf3 c\u0169ng l\xe0 \xfd t\u01b0\u1edfng c\u1ee7a insertion sort.\\n\\n**Thu\u1eadt to\xe1n:**\\nV\u1edbi ${i = 1, 2,..., n - 1}$, ta s\u1ebd ch\xe8n ${arr[i]}$ v\xe0o trong m\u1ea3ng \u0111\xe3 s\u1eafp x\u1ebfp ${arr[0:i-1]}$ b\u1eb1ng vi\u1ec7c th\u1ef1c hi\u1ec7n d\u1ecbch l\u1ea7n l\u01b0\u1ee3t c\xe1c ph\u1ea7n t\u1eed l\u1edbn h\u01a1n ${arr[i]}$ c\u1ee7a m\u1ea3ng ${arr[0:i-1]}$ l\xean v\xe0 \u0111\u1eb7t ${arr[i]}$ v\xe0o \u0111\xfang v\u1ecb tr\xed th\xedch h\u1ee3p.\\n\u0110\u1ec3 tr\u1ef1c quan h\u01a1n, m\xecnh \u0111em ra h\xecnh \u1ea3nh m\xf4 t\u1ea3 sau\\n\\n![Insertion Sort](./images/insertion.GIF)\\n\\n**Ph\xe2n t\xedch thu\u1eadt to\xe1n:**\\n* **Best case:** x\u1ea3y ra khi ta \xe1p d\u1ee5ng thu\u1eadt to\xe1n v\u1edbi m\u1ea3ng \u0111\xe3 \u0111\u01b0\u1ee3c s\u1eafp x\u1ebfp. Khi \u0111\xf3, ta ch\u1ec9 c\u1ea7n duy\u1ec7t qua 1 l\u01b0\u1ee3t m\u1ea3ng, ch\u1ec9 so s\xe1nh v\xe0 kh\xf4ng c\u1ea7n th\u1ef1c hi\u1ec7n m\u1ed9t b\u01b0\u1edbc ho\xe1n \u0111\u1ed5i n\xe0o c\u1ea3.\\nV\xec th\u1ebf, time complexity s\u1ebd l\xe0 ${\\\\Theta(n)}$.\\n* **Worst case:** x\u1ea3y ra khi m\u1ea3ng b\u1ecb s\u1eafp x\u1ebfp theo chi\u1ec1u ng\u01b0\u1ee3c l\u1ea1i, s\u1ebd c\xf3 1 ph\xe9p so s\xe1nh v\xe0 g\xe1n trong l\u1ea7n duy\u1ec7t \u0111\u1ea7u ti\xean, 2 ph\xe9p so s\xe1nh v\xe0 g\xe1n trong l\u1ea7n d\u1ecbch th\u1ee9 hai,...\\nV\xec th\u1ebf, t\u1ed5ng s\u1ed1 ph\xe9p so s\xe1nh v\xe0 g\xe1n s\u1ebd l\xe0 ${Sum = 1 + 2 +...+ (n-1) = \\\\frac{n \\\\times (n-1)}{2}}$. Do \u0111\xf3, time complexity s\u1ebd l\xe0 ${\\\\Theta(n^2)}$.\\n* **Space complexity:** ${\\\\Theta(1)}$.\\n\\n**Code Python**\\n```python\\nini_arr = [1, 5, 2, 45, 2, 32, 12, 55, 26, 77, 8]\\n\\ndef insertion_sort(arr):\\n    for key in range(1, len(arr)):\\n        value = arr[key]\\n        j = key - 1\\n        while j >= 0 and value < arr[j]:\\n            arr[j+1] = arr[j]\\n            j -= 1\\n        if key != j+1:\\n            arr[j+1] = value\\n\\ninsertion_sort(ini_arr)\\nprint(ini_arr)\\n```\\nOutput\\n```python\\n[1, 2, 2, 5, 8, 12, 26, 32, 45, 55, 77]\\n```\\n\\n### 4. S\u1eafp x\u1ebfp l\u1ef1a ch\u1ecdn (selection sort)\\n\xdd t\u01b0\u1edfng l\xe0 ta s\u1ebd **gi\u1ea3 \u0111\u1ecbnh** chia m\u1ea3ng c\u1ee7a ta ra l\xe0m 2 ph\u1ea7n: m\u1ea3ng con \u0111\u01b0\u1ee3c s\u1eafp x\u1ebfp ${arr{_1}}$ v\xe0 m\u1ea3ng con ch\u01b0a \u0111\u01b0\u1ee3c s\u1eafp x\u1ebfp ${arr{_2}}$. L\xfac n\xe0y, ${arr = (arr{_1})(arr{_2})}$.\\nTa s\u1ebd l\u1ea7n l\u01b0\u1ee3t t\xecm ph\u1ea7n t\u1eed nh\u1ecf nh\u1ea5t c\u1ee7a ${arr{_2}}$, t\xe1ch ra v\xe0 \u0111\u1ea9y ph\u1ea7n t\u1eed \u0111\xf3 sang ${arr{_1}}$. M\xecnh n\xf3i **gi\u1ea3 \u0111\u1ecbnh** \u1edf \u0111\xe2y l\xe0 sao, l\xe0 ch\xfang ta kh\xf4ng th\u1ef1c s\u1ef1 t\u1ea1o ra 2 m\u1ea3ng con m\u1edbi, m\xe0 c\xe1c ho\u1ea1t \u0111\u1ed9ng \u0111\u1ec1u \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n tr\xean m\u1ea3ng g\u1ed1c.\\n\\n**Thu\u1eadt to\xe1n:**\\n* T\xecm ph\u1ea7n t\u1eed nh\u1ecf nh\u1ea5t c\u1ee7a ${arr{_2}}$.\\n* Ho\xe1n \u0111\u1ed5i v\u1ecb tr\xed c\u1ee7a ph\u1ea7n t\u1eed nh\u1ecf nh\u1ea5t \u1ea5y v\u1edbi ph\u1ea7n t\u1eed \u0111\u1ea7u ti\xean c\u1ee7a ${arr{_2}}$. L\xfac n\xe0y, ta xem nh\u01b0 ${arr{_2}}$ \u0111\xe3 kh\xf4ng c\xf2n ph\u1ea7n t\u1eed nh\u1ecf nh\u1ea5t \u0111\xf3, v\xe0 gi\u1edd ph\u1ea7n t\u1eeb nh\u1ecf nh\u1ea5t \u0111\xf3 \u0111\xe3 gh\xe9p v\xe0o ${arr{_1}}$.\\n\\nM\xecnh c\xf3 h\xecnh \u1ea3nh \u0111\u1ec3 thu\u1eadt to\xe1n th\xeam tr\u1ef1c quan h\u01a1n\\n\\n![Selection Sort](./images/selection.PNG)\\n\\n**Ph\xe2n t\xedch thu\u1eadt to\xe1n:**\\n* **Best case:** x\u1ea3y ra khi \xe1p d\u1ee5ng thu\u1eadt to\xe1n tr\xean m\u1ea3ng \u0111\xe3 s\u1eafp x\u1ebfp, ta ch\u1ec9 ph\u1ea3i so s\xe1nh ch\u1ee9 kh\xf4ng c\u1ea7n th\u1ef1c hi\u1ec7n ho\xe1n \u0111\u1ed5i v\u1ecb tr\xed.\\nV\xec th\u1ebf, time complexity s\u1ebd l\xe0 ${\\\\Theta(n)}$.\\n* **Worst case:** x\u1ea3y ra khi m\u1ea3ng tr\xean \u0111\u01b0\u1ee3c s\u1eafp x\u1ebfp theo chi\u1ec1u ng\u01b0\u1ee3c l\u1ea1i, m\u1ed7i l\u1ea7n duy\u1ec7t ta ph\u1ea3i t\xecm ph\u1ea7n t\u1eed nh\u1ecf nh\u1ea5t c\u1ee7a m\u1ea3ng con ${arr{_2}}$.\\nV\xec th\u1ebf, t\u1ed5ng s\u1ed1 ph\xe9p duy\u1ec7t \u0111\u1ec3 t\xecm c\xe1c ph\u1ea7n t\u1eed nh\u1ecf nh\u1ea5t s\u1ebd l\xe0 ${Sum = (n-1) + (n-2) +...+ 1 = \\\\frac{n \\\\times (n-1)}{2}}$. Do \u0111\xf3, time complexity s\u1ebd l\xe0 ${\\\\Theta(n^2)}$.\\n* **Space complexity:** ${\\\\Theta(1)}$.\\n\\n**Code Python**\\n```python\\nini_arr = [1, 5, 2, 45, 2, 32, 12, 55, 26, 77, 8]\\n\\ndef selection_sort(arr):\\n    for i in range(len(arr) - 1):\\n        min_index = i\\n        for j in range(i+1, len(arr)):\\n            if arr[j] < arr[min_index]:\\n                min_index = j\\n        if i != min_index:\\n            arr[min_index], arr[i] = arr[i], arr[min_index]\\n\\nselection_sort(ini_arr)\\nprint(ini_arr)\\n```\\nOutput\\n```python\\n[1, 2, 2, 5, 8, 12, 26, 32, 45, 55, 77]\\n```\\n\\n### 5. S\u1eafp x\u1ebfp tr\u1ed9n (merge sort)\\nS\u1eafp x\u1ebfp tr\u1ed9n l\xe0 m\u1ed9t trong nh\u1eefng thu\u1eadt to\xe1n hi\u1ec7u qu\u1ea3 nh\u1ea5t. Thu\u1eadt to\xe1n ho\u1ea1t \u0111\u1ed9ng d\u1ef1a tr\xean nguy\xean t\u1eafc chia v\xe0 tr\u1ecb, l\u1ea7n l\u01b0\u1ee3t t\xe1ch c\xe1c m\u1ea3ng ra 2 m\u1ea3ng con cho \u0111\u1ebfn khi c\xe1c m\u1ea3ng con ch\u1ec9 c\xf2n 1 ph\u1ea7n t\u1eed. Sau \u0111\xf3, thu\u1eadt to\xe1n \\"tr\u1ed9n\\" c\xe1c m\u1ea3ng con \u0111\xf3 th\xe0nh m\u1ea3ng \u0111\u01b0\u1ee3c s\u1eafp x\u1ebfp ho\xe0n ch\u1ec9nh.\\n\\n**Thu\u1eadt to\xe1n:**\\n* L\u1ea7n l\u01b0\u1ee3t chia m\u1ea3ng g\u1ed1c th\xe0nh 2 m\u1ea3ng con, 2 m\u1ea3ng con th\xe0nh 4 m\u1ea3ng con n\u1eefa,... \u0111\u1ebfn khi ta \u0111\u01b0\u1ee3c ${n}$ m\u1ea3ng con, m\u1ed7i m\u1ea3ng con ch\u1ee9a 1 ph\u1ea7n t\u1eed.\\n\\n![Merge Sort 1](./images/merge_1.PNG)\\n\\n* Tr\u1ed9n c\xe1c m\u1ea3ng con \u0111\u1ec3 t\u1ea1o ra m\u1ea3ng l\u1edbn h\u01a1n \u0111\u01b0\u1ee3c s\u1eafp x\u1ebfp theo th\u1ee9 t\u1ef1 cho \u0111\u1ebfn khi ta nh\u1eadn \u0111\u01b0\u1ee3c 1 m\u1ea3ng duy nh\u1ea5t. \u0110\xf3 ch\xednh l\xe0 m\u1ea3ng \u0111\xe3 \u0111\u01b0\u1ee3c s\u1eafp x\u1ebfp t\u1eeb m\u1ea3ng g\u1ed1c.\\n\\n![Merge Sort 2](./images/merge_2.PNG)\\n\\nT\u1ed5ng k\u1ebft l\u1ea1i thu\u1eadt to\xe1n trong 1 h\xecnh \u1ea3nh\\n\\n![Merge Sort](./images/merge.PNG)\\n\\n**Ph\xe2n t\xedch thu\u1eadt to\xe1n:**\\n* **T\xe1ch m\u1ea3ng:** thu\u1eadt to\xe1n s\u1ebd t\xednh to\xe1n \u0111i\u1ec3m gi\u1eefa c\u1ee7a m\u1ea3ng b\u1eb1ng vi\u1ec7c l\u1ea5y chi\u1ec1u d\xe0i m\u1ea3ng r\u1ed3i chia 2, do \u0111\xf3, t\u1ed1n constant time ${\\\\Theta(1)}$ \u0111\u1ec3 chia m\u1ea3ng ra l\xe0m 2 m\u1ea3ng con.\\n* **S\u1eafp x\u1ebfp m\u1ea3ng con:** gi\u1ea3 s\u1eed s\u1eafp x\u1ebfp m\u1ea3ng t\u1ed1n ${T(n)}$ time. Nh\u01b0 v\u1eady \u0111\u1ec3 s\u1eafp x\u1ebfp 2 m\u1ea3ng con, ta t\u1ed1n ${2T(\\\\frac{n}{2})}$ time.\\n* **Tr\u1ed9n 2 m\u1ea3ng con:** s\u1eed d\u1ee5ng thu\u1eadt to\xe1n \\"2 ng\xf3n tay\\", m\u1ed7i ng\xf3n tr\u1ecf t\u1edbi v\u1ecb tr\xed \u0111\u1ea7u c\u1ee7a m\u1ed7i m\u1ea3ng con. Ch\xfang ta l\u1ea7n l\u01b0\u1ee3t so s\xe1nh 2 s\u1ed1 t\u1ea1i 2 v\u1ecb tr\xed m\xe0 2 ng\xf3n tay tr\u1ecf \u0111\u1ebfn v\xe0 ch\u1ecdn s\u1ed1 b\xe9 h\u01a1n \u0111\u1ec3 \u0111\u1ea9y v\xe0o m\u1ea3ng k\u1ebft qu\u1ea3. C\u1ee9 ph\u1ea7n t\u1eed \u1edf m\u1ea3ng con n\xe0o \u0111\u01b0\u1ee3c \u0111\u1ea9y v\xe0o, ta \u0111\u01b0a ng\xf3n tay tr\u1ecf t\u1edbi ph\u1ea7n t\u1eed ti\u1ebfp theo c\u1ee7a m\u1ea3ng \u0111\xf3. Vi\u1ec7c n\xe0y khi\u1ebfn ta ph\u1ea3i duy\u1ec7t qua ${2 \\\\times \\\\frac{n}{2} = n}$ ph\u1ea7n t\u1eed, do \u0111\xf3, ta t\u1ed1n ${\\\\Theta(n)}$.\\nNh\u01b0 v\u1eady, ta c\xf3 bi\u1ec3u th\u1ee9c sau\\n\\n<p style={{textAlign: \\"center\\"}}>\\n\\n${T(n) = \\\\Theta(1) + 2T(\\\\frac{n}{2}) + \\\\Theta(n)}$\\n\\n</p>\\n\\nV\u1edbi base case \u1edf \u0111\xe2y l\xe0 ${T(1) = \\\\Theta(1)}$.\\n\\n![Merge Sort 3](./images/merge_3.PNG)\\n\\nV\u1edbi m\u1ed7i m\u1ee9c thu\u1eadt to\xe1n th\u1ef1c hi\u1ec7n ${\\\\Theta(n)}$ c\xf4ng vi\u1ec7c, c\xf3 ${1+logn}$ m\u1ee9c. Do \u0111\xf3, ${T(n) = \\\\Theta(n + nlogn) = \\\\Theta(nlogn)}$. Thu\u1eadt to\xe1n s\u1ebd c\xf3 time complexity l\xe0 ${\\\\Theta(nlogn)}$.\\n* **Space complexity:** V\xec trong b\u01b0\u1edbc \\"tr\u1ed9n\\", ta ph\u1ea3i t\u1ef1 t\u1ea1o ra 2 m\u1ea3ng con, m\u1ed7i m\u1ea3ng con c\xf3 s\u1ed1 ph\u1ea7n t\u1eed l\xe0 ${\\\\frac{n}{2}}$, do v\u1eady, kh\xf4ng gian b\u1ed9 nh\u1edb ph\u1ee5 tr\u1ee3 s\u1ebd l\xe0 ${\\\\Theta(n)}$.\\n\\n**Code Python**\\n```python\\nimport math\\nini_arr = [1, 5, 2, 45, 2, 32, 12, 55, 26, 77, 8]\\n\\ndef merge(arr, l, m, r):\\n    n1 = m - l + 1\\n    n2 = r - m\\n    L = []\\n    R = []\\n    for i in range(n1):\\n        L.append(arr[l+i])\\n    for j in range(n2):\\n        R.append(arr[m+j+1])\\n    i = 0\\n    j = 0\\n    k = l\\n    while i < n1 and j < n2:\\n        if L[i] <= R[j]:\\n            arr[k] = L[i]\\n            i += 1\\n        else:\\n            arr[k] = R[j]\\n            j += 1\\n        k += 1\\n    while i < n1:\\n        arr[k] = L[i]\\n        i += 1\\n        k += 1\\n    while j < n2:\\n        arr[k] = R[j]\\n        j += 1\\n        k += 1\\n\\ndef merge_sort(arr, l, r):\\n    if l < r:\\n        m = math.floor(l + (r-l)/2)\\n        merge_sort(arr, l, m)\\n        merge_sort(arr, m+1, r)\\n        merge(arr, l, m, r)\\n\\nmerge_sort(ini_arr, 0 ,len(ini_arr) - 1)\\nprint(ini_arr)\\n```\\nOutput\\n```python\\n[1, 2, 2, 5, 8, 12, 26, 32, 45, 55, 77]\\n```\\n\\n### 6. S\u1eafp x\u1ebfp vun \u0111\u1ed1ng (heap sort)\\nS\u1eafp x\u1ebfp vun \u0111\u1ed1ng l\u1ea5y d\u1ef1a tr\xean c\u1ea5u tr\xfac d\u1eef li\u1ec7u binary heap.\\n\\n**C\u1ea5u tr\xfac d\u1eef li\u1ec7u binary heap:**\\nM\u1ed9t m\u1ea3ng d\u1eef li\u1ec7u c\xf3 th\u1ec3 \u0111\u01b0\u1ee3c bi\u1ec3u di\u1ec5n d\u01b0\u1edbi d\u1ea1ng c\xe2y nh\u1ecb ph\xe2n nh\u01b0 sau\\n\\n![Heap Sort](./images/heap.PNG)\\n\\nV\u1edbi m\u1ed7i node b\u1ea5t k\u1ef3 v\u1edbi ch\u1ec9 s\u1ed1 t\u01b0\u01a1ng \u1ee9ng l\xe0 ${i}$ trong c\xe2y nh\u1ecb ph\xe2n \u1edf tr\xean\\n* Node cha c\u1ee7a ${i}$ s\u1ebd c\xf3 ch\u1ec9 s\u1ed1 ${parent(i)}$ l\xe0 ${\\\\Bigl\\\\lfloor\\\\dfrac{i}{2}\\\\Bigr\\\\rfloor\\\\qquad}$.\\n* Node con tr\xe1i s\u1ebd c\xf3 ch\u1ec9 s\u1ed1 ${leftchild(i)}$ l\xe0 ${2i}$.\\n* Node con ph\u1ea3i s\u1ebd c\xf3 ch\u1ec9 s\u1ed1 ${rightchild(i)}$ l\xe0 ${2i + 1}$.\\n\\nC\xf3 2 ki\u1ec3u c\u1ee7a c\u1ea5u tr\xfac d\u1eef li\u1ec7u n\xe0y \u0111\xf3 l\xe0: max-heap v\xe0 min-heap.\\n* Trong max-heap, ta lu\xf4n c\xf3 ${A[parent(i)] \\\\ge A[i]}$. Do v\u1eady, ph\u1ea7n t\u1eed l\u1edbn nh\u1ea5t n\u1eb1m \u1edf root, c\xf2n ph\u1ea7n t\u1eed nh\u1ecf nh\u1ea5t n\u1eb1m \u1edf leaf.\\n* Trong min-heap, ta lu\xf4n c\xf3 ${A[parent(i)] \\\\le A[i]}$. Do v\u1eady, ph\u1ea7n t\u1eed nh\u1ecf nh\u1ea5t n\u1eb1m \u1edf root, c\xf2n ph\u1ea7n t\u1eed l\u1edbn nh\u1ea5t n\u1eb1m \u1edf leaf.\\n\\nT\u1eeb \u0111\xf3, thu\u1eadt to\xe1n s\u1eafp x\u1ebfp n\xe0y \xe1p d\u1ee5ng max-heap ho\u1eb7c min-heap (trong b\xe0i n\xe0y m\xecnh s\u1ebd d\xf9ng max-heap) \u0111\u1ec3 t\u1ea1o ra m\u1ea3ng s\u1eafp x\u1ebfp theo th\u1ee9 t\u1ef1.\\n\\n**T\u1ea1o max-heap:** g\u1ecdi l\xe0 **max_heapify**\\nM\xecnh s\u1ebd \u0111\u01b0a ra v\xed d\u1ee5 \u0111\u01a1n gi\u1ea3n v\u1edbi m\u1ea3ng 3 ph\u1ea7n t\u1eed \u0111\u1ec3 th\xeam tr\u1ef1c quan, c\xf2n v\u1edbi m\u1ea3ng n ph\u1ea7n t\u1eed s\u1ebd c\u1ea7n l\xe0m theo m\u1ed9t c\xe1ch t\u1ed5ng qu\xe1t h\u01a1n\\n\\n![Heap Sort 2](./images/heap_2.PNG)\\n\\nCode python cho **max_heapify** t\u1ea1i m\u1ed9t node c\xf3 ch\u1ec9 s\u1ed1 ${i = index}$, ${length}$ l\xe0 chi\u1ec1u d\xe0i c\u1ee7a m\u1ea3ng, th\xeam v\xe0o \u0111\u1ec3 l\xe0m \u0111i\u1ec1u ki\u1ec7n r\xe0ng bu\u1ed9c cho ch\u1ec9 s\u1ed1 c\xe1c node con. Thu\u1eadt to\xe1n \u1edf d\u01b0\u1edbi n\xf3i r\u1eb1ng, n\u1ebfu node \u1edf ch\u1ec9 s\u1ed1 ${i = index}$ ch\u01b0a \u0111\xfang v\u1edbi quy lu\u1eadt max-heap, ta s\u1ebd **max_heapify** l\u1ea1i c\xe2y v\u1edbi root l\xe0 node \u0111\xf3, \u0111\u1ed3ng th\u1eddi **max_heapify** l\u1ea1i c\xe1c c\xe2y v\u1edbi root l\xe0 c\xe1c node con tr\xe1i v\xe0 ph\u1ea3i c\u1ee7a node \u0111\xf3.\\n```python\\ndef max_heapify(arr, length, index):\\n    l = (index + 1) * 2 - 1\\n    r = (index + 1) * 2\\n    largest = index\\n    if l < length and arr[index] < arr[l]:\\n        largest = l\\n    if r < length and arr[largest] < arr[r]:\\n        largest = r\\n    if largest != index:\\n        arr[index], arr[largest] = arr[largest], arr[index]\\n        max_heapify(arr, length, largest)\\n```\\n**max_heapify** n\xe0y s\u1ebd t\u1ed1n ${\\\\Theta(logn)}$ v\u1edbi m\u1ed7i node \u0111\u01b0\u1ee3c x\xe9t. B\u1edfi v\xec m\u1ed7i l\u1ea7n, node \u0111\xf3 s\u1ebd c\u1ea7n ph\u1ea3i \u0111i xu\u1ed1ng 1 c\u1ea5p tr\xean c\xe2y \u0111\u1ec3 x\xe9t, thu\u1eadt to\xe1n s\u1ebd ch\u1ecdn \u0111\xfang nh\xe1nh \u0111\u1ec3 \u0111i xu\u1ed1ng v\xe0 n\xf3 s\u1ebd kh\xf4ng backtrack l\u1ea1i l\xean tr\xean. Do v\u1eady, \u0111\u01b0\u1eddng \u0111i d\xe0i nh\u1ea5t thu\u1eadt to\xe1n n\xe0y c\xf3 th\u1ec3 ph\u1ea3i duy\u1ec7t l\xe0 t\u1eeb root \u0111\u1ebfn 1 leaf, l\xe0 chi\u1ec1u cao c\u1ee7a c\xe2y. Chi\u1ec1u cao c\u1ee7a c\xe2y nh\u1ecb ph\xe2n c\xf3 ${n}$ node l\xe0 ${\\\\Theta(logn)}$.\\n\\n**Thu\u1eadt to\xe1n:**\\n* Ta bi\u1ec3u di\u1ec5n m\u1ea3ng v\xe0 s\u1eafp x\u1ebfp c\xe1c ph\u1ea7n t\u1eed \u0111\u1ec3 c\xf3 m\u1ed9t c\xe2y max-heap. Do \u0111\xf3, root c\u1ee7a c\xe2y n\xe0y (khi n\xe0y s\u1ebd t\u01b0\u01a1ng \u1ee9ng v\u1edbi ph\u1ea7n t\u1eed c\xf3 ch\u1ec9 s\u1ed1 l\xe0 ${i = 0}$ trong m\u1ea3ng, v\u1edbi ${i = 0, 1,..., n-1}$) s\u1ebd l\xe0 ph\u1ea7n t\u1eed l\u1edbn nh\u1ea5t.\\n* Ta ho\xe1n \u0111\u1ed5i v\u1ecb tr\xed c\u1ee7a root ${arr[0]}$ v\u1edbi ph\u1ea7n t\u1eed cu\u1ed1i c\xf9ng c\u1ee7a m\u1ea3ng ${arr[n-1]}$. L\xfac n\xe0y, ph\u1ea7n t\u1eed l\u1edbn nh\u1ea5t c\u1ee7a m\u1ea3ng \u0111\xe3 n\u1eb1m \u1edf v\u1ecb tr\xed cu\u1ed1i c\xf9ng.\\n* L\xe0m l\u1ea1i b\u01b0\u1edbc 1 v\xe0 2 v\u1edbi ph\u1ea7n m\u1ea3ng c\xf2n l\u1ea1i ${arr[0:n-2]}$,...\\n\\n**Ph\xe2n t\xedch thu\u1eadt to\xe1n:**\\nX\xe2y d\u1ef1ng m\u1ed9t c\xe2y max-heap t\u1eeb m\u1ea3ng ch\u01b0a s\u1eafp x\u1ebfp c\u1ea7n ${\\\\Theta(n)}$ l\u1eddi g\u1ecdi h\xe0m **max_heapify**, m\u1ed7i l\u1eddi g\u1ecdi **max_heapify** t\u1ed1n ${\\\\Theta(logn)}$ time. Nh\u01b0 v\u1eady, to\xe0n b\u1ed9 thu\u1eadt to\xe1n c\xf3 time complexity l\xe0 ${\\\\Theta(nlogn)}$.\\nTuy v\u1eady, thu\u1eadt to\xe1n heap sort c\xf3 \u01b0u \u0111i\u1ec3m h\u01a1n so v\u1edbi merge sort \u0111\xf3 l\xe0 n\xf3 ch\u1ec9 s\u1eed d\u1ee5ng ${\\\\Theta(1)}$ b\u1ed9 nh\u1edb t\u1ea1m th\u1eddi, trong khi merge sort l\xe0 ${\\\\Theta(n)}$. N\u1ebfu y\u1ebfu t\u1ed1 b\u1ed9 nh\u1edb c\u0169ng quan tr\u1ecdng trong h\u1ec7 th\u1ed1ng c\u1ee7a b\u1ea1n (gi\u1ea3 d\u1ee5 c\xe1c h\u1ec7 th\u1ed1ng b\u1ed9 nh\u1edb nh\u1ecf nh\u01b0 h\u1ec7 th\u1ed1ng nh\xfang,...), b\u1ea1n h\xe3y c\xe2n nh\u1eafc d\xf9ng heap sort h\u01a1n l\xe0 merge sort. \\n\\n**Code Python**\\n```python\\nimport math\\nini_arr = [1, 5, 2, 45, 2, 32, 12, 55, 26, 77, 8]\\n\\ndef max_heapify(arr, length, index):\\n    l = (index + 1) * 2 - 1\\n    r = (index + 1) * 2\\n    largest = index\\n    if l < length and arr[index] < arr[l]:\\n        largest = l\\n    if r < length and arr[largest] < arr[r]:\\n        largest = r\\n    if largest != index:\\n        arr[index], arr[largest] = arr[largest], arr[index]\\n        max_heapify(arr, length, largest)\\n\\ndef heap_sort(arr):\\n    length = len(arr)\\n    last = math.floor(length / 2)\\n    # T\u1ea1i \u0111\xe2y, ch\u1ec9 duy\u1ec7t t\u1eeb ph\u1ea7n t\u1eed n/2 \u0111\u1ed5 v\u1ec1, v\xec ph\u1ea7n t\u1eed t\u1eeb n/2 + 1,..., n \u0111\u1ec1u l\xe0 leaves. C\xe1c leaves \u0111\xe3 \u0111\u01b0\u1ee3c th\u1ecfa m\xe3n t\xednh ch\u1ea5t max-heap\\n    for i in range(last - 1, -1, -1):\\n        max_heapify(arr, length, i)\\n    for i in range(length - 1, 0, -1):\\n        arr[i], arr[0] = arr[0], arr[i]\\n        max_heapify(arr, i, 0)\\n\\nheap_sort(ini_arr)\\nprint(ini_arr)\\n```\\nOutput\\n```python\\n[1, 2, 2, 5, 8, 12, 26, 32, 45, 55, 77]\\n```\\n\\n### 7. S\u1eafp x\u1ebfp nhanh (quick sort)\\nThu\u1eadt to\xe1n s\u1eafp x\u1ebfp nhanh \u0111\u01b0\u1ee3c ph\xe1t tri\u1ec3n b\u1edfi m\u1ed9t nh\xe0 khoa h\u1ecdc m\xe1y t\xednh ng\u01b0\u1eddi Anh Tony Hoare v\xe0o n\u0103m 1959, s\u1eed d\u1ee5ng nguy\xean l\xfd chia v\xe0 tr\u1ecb \u0111\u1ec3 s\u1eafp x\u1ebfp 1 m\u1ea3ng.\\n\\n**Thu\u1eadt to\xe1n:**\\n* **Chia m\u1ea3ng:** \\n    * Ch\u1ecdn m\u1ed9t ph\u1ea7n t\u1eed b\u1ea5t k\u1ef3 (g\u1ecdi l\xe0 pivot), ${A[m]}$. N\u1ebfu ta ch\u1ecdn \u0111\u01b0\u1ee3c 1 pivot t\u1ed1t th\xec thu\u1eadt to\xe1n c\u1ee7a ta s\u1ebd ch\u1ea1y r\u1ea5t nhanh. Tuy nhi\xean, s\u1ebd r\u1ea5t kh\xf3 \u0111\u1ec3 bi\u1ebft \u0111\u01b0\u1ee3c ph\u1ea7n t\u1eed n\xe0o \u0111\u01b0\u1ee3c coi l\xe0 1 pivot t\u1ed1t. C\xf3 m\u1ed9t v\xe0i c\xe1ch ch\u1ecdn pivot ph\u1ed5 bi\u1ebfn sau:\\n        * Ch\u1ecdn pivot ng\u1eabu nhi\xean.\\n        * Ch\u1ecdn ph\u1ea7n t\u1eed tr\xe1i nh\u1ea5t ho\u1eb7c ph\u1ea3i nh\u1ea5t.\\n        * L\u1ea5y 3 ph\u1ea7n t\u1eed: \u0111\u1ea7u ti\xean, \u1edf gi\u1eefa, cu\u1ed1i c\xf9ng c\u1ee7a m\u1ea3ng v\xe0 ch\u1ecdn ra ph\u1ea7n t\u1eed trung v\u1ecb t\u1eeb ch\xfang.\\n    * Chia m\u1ea3ng c\u1ee7a ta ra l\xe0m 2 ph\u1ea7n con: ${A[l:m-1]}$ g\u1ed3m c\xe1c ph\u1ea7n t\u1eed nh\u1ecf h\u01a1n ${A[m]}$, v\xe0 ${A[m+1:r]}$ ch\u1ee9a c\xe1c ph\u1ea7n t\u1eed l\u1edbn h\u01a1n ${A[m]}$.\\n    H\xecnh \u1ea3nh d\u01b0\u1edbi \u0111\xe2y th\u1ec3 hi\u1ec7n tr\u1ef1c quan h\u01a1n c\xe1ch chia m\u1ea3ng, v\u1edbi pivot lu\xf4n l\u1ea5y l\xe0 ph\u1ea7n t\u1eed cu\u1ed1i c\xf9ng\\n\\n![Quick Sort 2](./images/quick_2.PNG)\\n\\n* **Tr\u1ecb:** s\u1eafp x\u1ebfp m\u1ed9t c\xe1ch \u0111\u1ec7 quy 2 ph\u1ea7n con tr\xean b\u1eb1ng quick sort.\\n* **K\u1ebft h\u1ee3p:** kh\xf4ng c\u1ea7n k\u1ebft h\u1ee3p c\xe1c ph\u1ea7n con \u0111\u01b0\u1ee3c chia v\xec k\u1ebft qu\u1ea3 cu\u1ed1i c\xf9ng \u0111\xe3 cho m\u1ea3ng s\u1eafp x\u1ebfp theo th\u1ee9 t\u1ef1.\\n* **Thu\u1eadt to\xe1n \u0111\u1ec7 quy ho\xe0n ch\u1ec9nh:**\\n    * Ch\u1ecdn m\u1ed9t pivot. Chia m\u1ea3ng ra l\xe0m 2 ph\u1ea7n d\u1ef1a tr\xean pivot.\\n    * \xc1p d\u1ee5ng quick sort tr\xean ph\u1ea7n n\u1eeda nh\u1ecf h\u01a1n pivot.\\n    * \xc1p d\u1ee5ng quick sort tr\xean ph\u1ea7n n\u1eeda l\u1edbn h\u01a1n pivot.\\n\\n**Ph\xe2n t\xedch thu\u1eadt to\xe1n:**\\n<p style={{textAlign: \\"center\\"}}>\\n\\n${T(n) = T(k) + T(n-k-1) + \\\\Theta(n)}$\\n\\n</p>\\n\\nV\u1edbi ${k}$ l\xe0 s\u1ed1 ph\u1ea7n t\u1eed nh\u1ecf h\u01a1n pivot. Time complexity cho qu\xe1 tr\xecnh **partition** l\xe0 ${\\\\Theta(n)}$.\\n\\n* **Best case:** x\u1ea3y ra khi thu\u1eadt to\xe1n chia n\u1eeda **partition** lu\xf4n chia \u0111\u01b0\u1ee3c m\u1ea3ng c\u1ee7a ta th\xe0nh \u0111\xfang 2 ph\u1ea7n b\u1eb1ng ho\u1eb7c g\u1ea7n b\u1eb1ng nhau.\\n\\n![Quick Sort](./images/quick.PNG)\\n\\nNh\u01b0 v\u1eady, \u1edf best case, time complexity s\u1ebd l\xe0 ${\\\\Theta(nlogn)}$.\\n* **Worst case:** x\u1ea3y ra khi **partition** lu\xf4n ch\u1ecdn ph\u1ea3i s\u1ed1 l\u1edbn nh\u1ea5t ho\u1eb7c s\u1ed1 nh\u1ecf nh\u1ea5t l\xe0m pivot. N\u1ebfu nh\u01b0 ta ch\u1ecdn pivot theo chi\u1ebfn thu\u1eadt \\"lu\xf4n ch\u1ecdn ph\u1ea7n t\u1eed cu\u1ed1i c\u1ee7a m\u1ea3ng\\", worst case s\u1ebd x\u1ea3y ra khi m\xe0 m\u1ea3ng \u0111\xe3 \u0111\u01b0\u1ee3c s\u1eafp x\u1ebfp theo th\u1ee9 t\u1ef1 gi\u1ea3m d\u1ea7n. L\xfac n\xe0y\\n\\n<p style={{textAlign: \\"center\\"}}>\\n\\n${T(n) = T(0) + T(n-1) + \\\\Theta(n) = T(n-1) + \\\\Theta(n)}$\\n\\n</p>\\n\\nV\u1edbi base case l\xe0 ${\\\\Theta(1)}$ th\xec worst case, time complexity s\u1ebd l\xe0 ${T(n) = \\\\Theta(1) + \\\\Theta(n) + \\\\Theta(n) +...+ \\\\Theta(n) = \\\\Theta(n^2)}$\\n\\nM\u1eb7c d\xf9 worst case c\u1ee7a quick sort ch\u1eadm h\u01a1n nhi\u1ec1u so v\u1edbi c\xe1c thu\u1eadt to\xe1n s\u1eafp x\u1ebfp kh\xe1c, nh\u01b0ng trong th\u1ef1c t\u1ebf, v\xf2ng l\u1eb7p trong **partition** c\xf3 th\u1ec3 \u0111\u01b0\u1ee3c tri\u1ec3n khai m\u1ed9t c\xe1ch hi\u1ec7u qu\u1ea3 tr\xean h\u1ea7u nh\u01b0 t\u1ea5t c\u1ea3 c\u1ea5u tr\xfac d\u1eef li\u1ec7u, b\u1edfi n\xf3 ch\u1ee9a kh\xe1 \xedt c\xe1c \\"constant factors\\" (c\xe1c ph\xe9p to\xe1n y\xeau c\u1ea7u constant time ${\\\\Theta(1)}$) h\u01a1n c\xe1c thu\u1eadt to\xe1n kh\xe1c, v\xe0 n\u1ebfu 2 thu\u1eadt to\xe1n n\xe0o c\xf3 c\xf9ng time complexity l\xe0 ${\\\\Theta(nlogn)}$, thu\u1eadt to\xe1n n\xe0o c\xf3 \xedt \\"constant factors\\" h\u01a1n th\xec ch\u1ea1y nhanh h\u01a1n. H\u01a1n n\u1eefa, worst case c\u1ee7a quick sort s\u1ebd hi\u1ebfm khi x\u1ea3y ra. Tuy v\u1eady, v\u1edbi l\u01b0\u1ee3ng d\u1eef li\u1ec7u r\u1ea5t l\u1edbn v\xe0 \u0111\u01b0\u1ee3c l\u01b0u tr\u1eef \u1edf b\u1ed9 nh\u1edb ngo\xe0i, merge sort s\u1ebd \u0111\u01b0\u1ee3c \u01b0u \xe1i h\u01a1n quick sort.\\n\\n**Code Python**\\n```python\\nini_arr = [1, 5, 2, 45, 2, 32, 12, 55, 26, 77, 8]\\n\\ndef partition(arr, l, r):\\n    pointer = l - 1\\n    pivot = arr[r]\\n    for j in range(l, r):\\n        if arr[j] < pivot:\\n            pointer += 1\\n            arr[pointer], arr[j] = arr[j], arr[pointer]\\n    arr[pointer+1], arr[r] = arr[r], arr[pointer+1]\\n    return pointer + 1\\n\\ndef quick_sort(arr, l, r):\\n    if l < r:\\n        pivot_index = partition(arr, l, r)\\n        quick_sort(arr, l, pivot_index - 1)\\n        quick_sort(arr, pivot_index+1, r)\\n\\nquick_sort(ini_arr, 0, len(ini_arr) - 1)\\nprint(ini_arr)\\n```\\nOutput\\n```python\\n[1, 2, 2, 5, 8, 12, 26, 32, 45, 55, 77]\\n```\\n\\n### 8. S\u1eafp x\u1ebfp \u0111\u1ebfm (counting sort)\\nM\u1ed9t thu\u1eadt to\xe1n kh\xe1 th\xfa v\u1ecb m\xe0 m\xecnh h\u1ecdc \u0111\u01b0\u1ee3c, th\u1eadm ch\xed n\xf3 ch\u1ea1y \u1edf linear time, \u0111\xf3 l\xe0 counting sort. Thu\u1eadt to\xe1n n\xe0y h\u1ea7u nh\u01b0 ch\u1ec9 \u0111\u01b0\u1ee3c \xe1p d\u1ee5ng v\u1edbi s\u1ed1 nguy\xean, r\u1ea5t kh\xf3 ho\u1eb7c kh\xf4ng th\u1ec3 \xe1p d\u1ee5ng \u0111\u01b0\u1ee3c v\u1edbi s\u1ed1 th\u1ef1c.\\n\\n**Thu\u1eadt to\xe1n:**\\n* Gi\u1ea3 s\u1eed c\xe1c ph\u1ea7n t\u1eed c\u1ee7a m\u1ea3ng g\u1ed1c ${A[0, 1, 2,..., n-1]}$ ch\u1ee9a c\xe1c ph\u1ea7n t\u1eed c\xf3 gi\xe1 tr\u1ecb trong kho\u1ea3ng ${[0, k]}$. Counting sort t\u1ea1o ra m\u1ed9t m\u1ea3ng t\u1ea1m th\u1eddi n\u1eefa \u0111\u1ec3 \u0111\u1ebfm l\xe0 m\u1ea3ng ${B[0, 1, 2,..., k-1]}$ g\u1ed3m ${k}$ ph\u1ea7n t\u1eed. Ph\u1ea7n t\u1eed th\u1ee9 ${i}$ c\u1ee7a ${B}$ s\u1ebd ch\u1ee9a s\u1ed1 ph\u1ea7n t\u1eed ${A[j]}$ th\u1ecfa m\xe3n ${A[j] = i }$ v\u1edbi ${j = 0, 1, 2,..., n-1}$.\\n* T\u1eeb m\u1ea3ng ${B}$ c\xf3 \u0111\u01b0\u1ee3c, ta l\xe0m ph\u1eb3ng th\xec s\u1ebd \u0111\u01b0\u1ee3c m\u1ea3ng ${C[0, 1, 2,..., n-1]}$ ch\u1ee9a c\xe1c ph\u1ea7n t\u1eed s\u1eafp x\u1ebfp theo th\u1ee9 t\u1ef1.\\n\u0110\u1ec3 tr\u1ef1c quan h\u01a1n, m\xecnh c\xf3 v\xed d\u1ee5 sau\\n\\n![Counting Sort](./images/counting.PNG)\\n\\n\u0110\u1ed1i v\u1edbi tr\u01b0\u1eddng h\u1ee3p m\u1ea3ng ${A}$ ch\u1ee9a c\xe1c ph\u1ea7n t\u1eed \xe2m, ta th\u1ef1c hi\u1ec7n t\xecm ph\u1ea7n t\u1eed nh\u1ecf nh\u1ea5t c\u1ee7a ${A}$ v\xe0 l\u01b0u tr\u1eef s\u1ed1 ph\u1ea7n t\u1eed \u0111\xf3 c\u1ee7a ${A}$ t\u1ea1i ch\u1ec9 s\u1ed1 ${0}$ c\u1ee7a ${B}$ (v\xec kh\xf4ng th\u1ec3 t\u1ed3n t\u1ea1i ch\u1ec9 s\u1ed1 \xe2m trong m\u1ea3ng).\\n\\n**Ph\xe2n t\xedch thu\u1eadt to\xe1n:**\\n* T\u1ea1o ra m\u1ea3ng ${B}$ r\u1ed7ng t\u1ed1n ${\\\\Theta(k)}$ time.\\n* T\xednh c\xe1c ph\u1ea7n t\u1eed c\u1ee7a m\u1ea3ng ${B}$ d\u1ef1a v\xe0o m\u1ea3ng ${A}$ t\u1ed1n ${\\\\Theta(n)}$ time.\\n* L\xe0m ph\u1eb3ng ${B}$ \u0111\u1ec3 l\u1ea5y ${C}$ t\u1ed1n ${\\\\Theta(n)}$ time.\\n\\nT\u1ed5ng time complexity s\u1ebd l\xe0 ${\\\\Theta(n+k)}$.\\nPh\u1ea7n ph\xe2n t\xedch n\xe0y s\u1ebd \u0111\u01b0\u1ee3c vi\u1ebft r\xf5 trong comment c\u1ee7a code.\\n* **Space complexity:** ${\\\\Theta(n+k)}$\\n\\n**Code Python**\\n```python\\nini_arr = [-10, -5, -20, -10, -1, -5, 5, 2, 45, 2, 32, 12, 55, 26, 77, 8]\\n\\ndef counting_sort(A):\\n    min_ele = int(min(A))\\n    max_ele = int(max(A))\\n    range_ele = max_ele - min_ele + 1\\n    B = []\\n    # B\u01b0\u1edbc n\xe0y t\u1ed1n O(k) time\\n    for i in range(range_ele):\\n        B.append(0)\\n    ###############################\\n\\n    # B\u01b0\u1edbc n\xe0y t\u1ed1n O(n) time\\n    for i in range(len(A)):\\n        B[A[i] - min_ele] += 1\\n    ###############################\\n\\n    C = []\\n    # Ta c\xf3 sum(B)= n = len(A) v\xe0 append() t\u1ed1n constant time O(1). Nh\u01b0 v\u1eady b\u01b0\u1edbc n\xe0y t\u1ed1n O(n)\\n    for i in range(range_ele):\\n        for j in range(B[i]):\\n            C.append(i + min_ele)\\n    ###############################\\n\\n    # ----\x3e T\u1ed5ng s\u1ebd t\u1ed1n O(n+k)\\n    return C\\n\\nprint(counting_sort(ini_arr))\\n```\\nOutput\\n```python\\n[-20, -10, -10, -5, -5, -1, 2, 2, 5, 8, 12, 26, 32, 45, 55, 77]\\n```\\n\\n**Nh\u1eadn x\xe9t counting sort:** \\n* Nh\u01b0 ta \u0111\xe3 th\u1ea5y \u1edf tr\xean, counting sort c\xf3 time complexity v\xe0 space complexity l\xe0 ${\\\\Theta(n+k)}$, do \u0111\xf3, counting sort s\u1ebd r\u1ea5t hi\u1ec7u qu\u1ea3 khi m\xe0 kho\u1ea3ng c\u1ee7a d\u1eef li\u1ec7u \u0111\u1ea7u v\xe0o nh\u1ecf, kh\xf4ng qu\xe1 l\u1edbn h\u01a1n nhi\u1ec1u so v\u1edbi ${n}$ (hay ${k}$ kh\xe1 nh\u1ecf).\\nV\xed d\u1ee5, n\u1ebfu ${k}$ l\u1edbn, kho\u1ea3ng ${k = \\\\Theta(n^2)}$, th\xec time complexity v\xe0 space complexity s\u1ebd l\xe0 ${\\\\Theta(n^2)}$ r\u1ea5t t\u1ec7.\\n* Counting sort c\u0169ng c\xf3 th\u1ec3 ph\xf9 h\u1ee3p v\u1edbi c\xe1c b\xe0i to\xe1n m\xe0 c\xe1c ph\u1ea7n t\u1eed c\u1ee7a m\u1ea3ng l\xe0 m\u1ed9t c\u1ea5u tr\xfac d\u1eef li\u1ec7u kh\xe1c, nh\u01b0ng c\u1ea5u tr\xfac d\u1eef li\u1ec7u \u0111\xf3 ph\u1ea3i c\xf3 m\u1ed9t ${key}$ l\xe0 s\u1ed1 nguy\xean \u0111\u1ec3 \u0111\u1ea1i di\u1ec7n cho t\u1eebng object trong c\u1ea5u tr\xfac d\u1eef li\u1ec7u \u0111\xf3.\\n* Counting sort c\xf2n l\xe0 ch\u01b0\u01a1ng tr\xecnh con cho thu\u1eadt to\xe1n m\u1ea1nh m\u1ebd h\u01a1n l\xe0 Radix sort, thu\u1eadt to\xe1n s\u1eafp x\u1ebfp ch\u1ea1y \u1edf linear time v\u1edbi gi\xe1 tr\u1ecb ${k}$ l\u1edbn h\u01a1n trong counting sort, l\xe0 ${k = n^{\\\\Theta(1)}}$ (l\u0169y th\u1eeba h\u1eb1ng c\u1ee7a ${n}$). \\n* Nh\u01b0 \u0111\xe3 n\xf3i \u1edf ph\u1ea7n gi\u1edbi thi\u1ec7u, vi\u1ec7c b\u1ea1n s\u1eafp b\xe1t theo th\u1ee9 t\u1ef1 t\u1eeb nh\u1ecf \u0111\u1ebfn l\u1edbn, t\xedch l\u0169y s\u1ed1 b\xe1t theo t\u1eebng k\xedch th\u01b0\u1edbc th\xe0nh c\xe1c kh\u1ed1i m\u1ed9t. \u0110\xf3 ch\xednh l\xe0 s\u1eed d\u1ee5ng counting sort. Nh\u01b0 v\xed d\u1ee5 d\u01b0\u1edbi \u0111\xe2y, c\xe1c s\u1ed1 b\u1eb1ng nhau \u0111\u01b0\u1ee3c k\u1ebft kh\u1ed1i theo m\xe0u.\\n\\n![Counting Sort 2](./images/counting_2.PNG)\\n\\n### 9. M\u1edf r\u1ed9ng\\nC\xe1c thu\u1eadt to\xe1n s\u1eafp x\u1ebfp kh\xe1 th\xfa v\u1ecb. M\u1ed9t trong nh\u1eefng \u0111i\u1ec1u khi\u1ebfn con ng\u01b0\u1eddi ta tho\u1ea3i m\xe1i nh\u1ea5t l\xe0 nh\xecn th\u1ea5y ph\xf2ng ng\u1ee7 c\u1ee7a m\xecnh \u0111\u01b0\u1ee3c s\u1eafp x\u1ebfp ng\u0103n n\u1eafp v\xe0 s\u1ea1ch \u0111\u1eb9p, \u0111i\u1ec1u \u0111\xf3 c\u0169ng t\u01b0\u01a1ng t\u1ef1 khi ta nh\xecn v\xe0o c\xe1c th\u1ee9 \u0111\u01b0\u1ee3c s\u1eafp x\u1ebfp kh\xe1c. Trang web v\u1ec1 animation c\u1ee7a c\xe1c thu\u1eadt to\xe1n s\u1eafp x\u1ebfp cho b\u1ea1n c\u1ea3m gi\xe1c th\u1ecfa m\xe3n v\xe0 th\u01b0 gi\xe3n c\xf3 th\u1ec3 \u0111\u01b0\u1ee3c t\xecm th\u1ea5y **[t\u1ea1i \u0111\xe2y](https://www.toptal.com/developers/sorting-algorithms)**.\\n\\n### 10. T\xe0i li\u1ec7u tham kh\u1ea3o\\n[Sorting Algorithms](https://www.interviewbit.com/tutorial/sorting-algorithms/#sorting-algorithms)\\n\\n[Sorting Algorithms](https://brilliant.org/wiki/sorting-algorithms/)\\n\\n[QuickSort](https://www.geeksforgeeks.org/quick-sort/)"},{"id":"peak-finding","metadata":{"permalink":"/blogs/blog/peak-finding","editUrl":"https://github.com/lam1051999/blogs/edit/main/blog/2021-02-18-peak-finding/index.md","source":"@site/blog/2021-02-18-peak-finding/index.md","title":"Thu\u1eadt to\xe1n t\xecm \u0111\u1ec9nh Peak Finding","description":"Intro","date":"2021-02-18T00:00:00.000Z","formattedDate":"February 18, 2021","tags":[{"label":"peak","permalink":"/blogs/blog/tags/peak"},{"label":"peak finding","permalink":"/blogs/blog/tags/peak-finding"},{"label":"algorithms","permalink":"/blogs/blog/tags/algorithms"}],"readingTime":5.835,"truncated":true,"authors":[{"name":"Tr\u1ea7n L\xe2m","title":"Data Engineer","url":"https://github.com/lam1051999","imageURL":"https://github.com/lam1051999.png","key":"tranlam"}],"frontMatter":{"slug":"peak-finding","title":"Thu\u1eadt to\xe1n t\xecm \u0111\u1ec9nh Peak Finding","authors":"tranlam","tags":["peak","peak finding","algorithms"],"image":"./images/intro.PNG"},"prevItem":{"title":"C\xe1c thu\u1eadt to\xe1n s\u1eafp x\u1ebfp c\u01a1 b\u1ea3n","permalink":"/blogs/blog/sorting-algorithms"}},"content":"![Intro](./images/intro.PNG)\\n\\nH\xf4m nay m\xecnh s\u1ebd n\xf3i v\u1ec1 m\xf4t thu\u1eadt to\xe1n c\u1ef1c k\xec c\u01a1 b\u1ea3n m\xe0 m\xecnh v\xe0 h\u1ea7u nh\u01b0 c\xe1c b\u1ea1n b\u1eaft \u0111\u1ea7u h\u1ecdc v\u1ec1 l\u1eadp tr\xecnh thu\u1eadt to\xe1n \u0111\u1ec1u \u0111\xe3 l\xe0m. \u0110\xf3 ch\xednh l\xe0 thu\u1eadt to\xe1n t\xecm \u0111\u1ec9nh Peak Finding.\\n\\n\x3c!--truncate--\x3e\\n\\n### 1. Gi\u1edbi thi\u1ec7u thu\u1eadt to\xe1n\\nTrong m\u1ed9t m\u1ea3ng, m\u1ed9t s\u1ed1 \u0111\u01b0\u1ee3c g\u1ecdi l\xe0 m\u1ed9t \\"peak\\" khi v\xe0 ch\u1ec9 khi c\xe1c ph\u1ea7n t\u1eed li\u1ec1n k\u1ec1 n\xf3 nh\u1ecf h\u01a1n ho\u1eb7c b\u1eb1ng ph\u1ea7n t\u1eed \u0111\u01b0\u1ee3c x\xe9t. T\u01b0\u1edfng t\u01b0\u1ee3ng r\u1eb1ng c\xf3 m\u1ed9t d\xe3y n\xfai nh\u01b0 sau\\n\\n![Peaks](./images/peaks.PNG)\\n\\nC\xe1c m\u0169i t\xean \u0111\u1ecf \u1edf tr\xean tr\u1ecf \u0111\u1ebfn c\xe1c \u0111\u1ec9nh (peak) c\u1ee7a m\u1ed9t d\xe3y n\xfai, v\xec c\xe1c \u0111i\u1ec3m \u0111\xf3 cao h\u01a1n c\xe1c \u0111i\u1ec3m l\xe2n c\u1eadn xung quanh n\xf3 (c\xe1c \u0111i\u1ec3m \u1edf s\u01b0\u1eddn n\xfai).\\n\\n\u0110\u1ec3 tr\u1ef1c quan h\u01a1n trong l\u1eadp tr\xecnh, ta l\u1ea5y v\xed d\u1ee5 v\u1edbi m\u1ea3ng sau:\\n![1D Array](./images/1Darr.PNG)\\n\\nX\xe9t m\u1ea3ng c\xe1c k\xed hi\u1ec7u nh\u01b0 tr\xean, ph\u1ea7n t\u1eed \u1edf v\u1ecb tr\xed th\u1ee9 3 \u0111\u01b0\u1ee3c g\u1ecdi l\xe0 m\u1ed9t peak khi v\xe0 ch\u1ec9 khi **${c \\\\ge b}$** v\xe0 **${c \\\\ge d}$**. Ph\u1ea7n t\u1eed th\u1ee9 9 \u0111\u01b0\u1ee3c g\u1ecdi l\xe0 m\u1ed9t peak khi v\xe0 ch\u1ec9 khi **${i \\\\ge h}$**.\\n\\nCh\xfa \xfd r\u1eb1ng: \\n* Trong m\u1ed9t m\u1ea3ng, s\u1ebd lu\xf4n t\u1ed3n t\u1ea1i \xedt nh\u1ea5t m\u1ed9t peak.\\n* B\xe0i to\xe1n n\xe0y c\u1ee7a ch\xfang ta s\u1ebd l\xe0 t\xecm m\u1ed9t peak ch\u1ee9 kh\xf4ng t\xecm t\u1ea5t c\u1ea3 c\xe1c peak.\\n\\n### 2. T\xecm peak trong m\u1ea3ng 1 chi\u1ec1u\\nGi\u1ea3 s\u1eed ta c\xf3 m\u1ed9t m\u1ea3ng 1 chi\u1ec1u g\u1ed3m **${n}$** ph\u1ea7n t\u1eed, t\xecm m\u1ed9t peak c\u1ee7a m\u1ea3ng \u0111\xf3.\\n\\n#### 2.1. C\xe1ch 1: Duy\u1ec7t tuy\u1ebfn t\xednh (linear traversing)\\n**\xdd t\u01b0\u1edfng:** Duy\u1ec7t qua t\u1eebng ph\u1ea7n t\u1eed c\u1ee7a m\u1ea3ng v\xe0 ki\u1ec3m tra xem ph\u1ea7n t\u1eed \u0111ang x\xe9t c\xf3 th\u1ecfa m\xe3n t\xednh ch\u1ea5t l\xe0 m\u1ed9t peak hay kh\xf4ng.\\n\\n**Ph\xe2n t\xedch thu\u1eadt to\xe1n:** M\u1ed7i ph\u1ea7n t\u1eed \u0111ang \u0111\u01b0\u1ee3c duy\u1ec7t s\u1ebd c\xf3 c\xe1c c\xe2u l\u1ec7nh \u0111i\u1ec1u ki\u1ec7n \u0111\u1ec3 ki\u1ec3m tra xem ph\u1ea7n t\u1eed \u0111\xf3 c\xf3 l\xe0 peak, c\xe1c c\xe2u l\u1ec7nh \u0111i\u1ec1u ki\u1ec7n n\xe0y t\u1ed1n constant time ${\\\\Theta(1)}$. Trong tr\u01b0\u1eddng h\u1ee3p x\u1ea5u nh\u1ea5t, ta s\u1ebd ph\u1ea3i duy\u1ec7t h\u1ebft t\u1ea5t c\u1ea3 **${n}$** ph\u1ea7n t\u1eeb c\u1ee7a m\u1ea3ng m\u1edbi t\xecm \u0111\u01b0\u1ee3c peak. Do v\u1eady, worst case c\u1ee7a thu\u1eadt to\xe1n s\u1ebd c\xf3 time complexity l\xe0 ${\\\\Theta(n)}$.\\n\\n#### 2.2. C\xe1ch 2: Duy\u1ec7t nh\u1ecb ph\xe2n (binary search)\\n**\xdd t\u01b0\u1edfng:** Trong c\xe1ch n\xe0y, ta s\u1ebd lu\xf4n nh\xecn v\xe0o v\u1ecb tr\xed \u1edf gi\u1eefa c\u1ee7a m\u1ea3ng \u0111\u01b0\u1ee3c duy\u1ec7t v\xe0 quy\u1ebft \u0111\u1ecbnh xem ta s\u1ebd duy\u1ec7t n\u1eeda n\xe0o ti\u1ebfp theo c\u1ee7a m\u1ea3ng \u0111\xf3 \u0111\u1ec3 t\xecm ra peak.\\n\\n**Thu\u1eadt to\xe1n:** \\n* Nh\xecn v\xe0o v\u1ecb tr\xed ${\\\\frac{n}{2}}$.\\n* N\u1ebfu ${a[\\\\frac{n}{2}] \\\\lt a[\\\\frac{n}{2} - 1]}$, ta nh\xecn v\xe0o n\u1eeda tr\xe1i (c\xe1c ph\u1ea7n t\u1eed ${1, 2,...,\\\\frac{n}{2} - 1)}$ c\u1ee7a m\u1ea3ng \u0111ang x\xe9t \u0111\u1ec3 t\xecm peak.\\n* N\u1ebfu ${a[\\\\frac{n}{2}] \\\\lt a[\\\\frac{n}{2} + 1]}$, ta nh\xecn v\xe0o n\u1eeda ph\u1ea3i (c\xe1c ph\u1ea7n t\u1eed ${\\\\frac{n}{2} + 1, \\\\frac{n}{2} + 2,..., n)}$ c\u1ee7a m\u1ea3ng \u0111ang x\xe9t \u0111\u1ec3 t\xecm peak.\\n* N\u1ebfu kh\xf4ng th\u1ecfa m\xe3n c\u1ea3 2 \u0111i\u1ec1u ki\u1ec7n tr\xean, ta tr\u1ea3 v\u1ec1 ph\u1ea7n t\u1eed v\u1ecb tr\xed ${\\\\frac{n}{2}}$ ch\xednh l\xe0 m\u1ed9t peak.\\n\\n\u0110\u1ec3 gi\u1ea3i th\xedch cho \u0111i\u1ec1u n\xe0y, m\xecnh c\xf3 m\u1ed9t h\xecnh v\u1ebd \u0111\u1ec3 cho tr\u1ef1c quan h\u01a1n\\n\\n![1D Expression](./images/1Dexp.PNG)\\n\\nM\u0169i t\xean \u0111\u1ecf tr\u1ecf t\u1edbi v\u1ecb tr\xed \u0111ang x\xe9t. Gi\u1ea3 s\u1eed ta \u0111ang \u0111\u1ee9ng tr\xean m\u1ed9t v\u1ecb tr\xed \u1edf d\xe3y n\xfai, \u0111\u1ec3 ta c\xf3 th\u1ec3 tr\xe8o l\xean \u0111\u1ec9nh, ta s\u1ebd lu\xf4n ng\xf3 sang b\xean m\xe0 ta th\u1ea5y v\u1ecb tr\xed c\u1ee7a n\xf3 cao h\u01a1n v\u1ecb tr\xed ta \u0111ang \u0111\u1ee9ng, v\xe0 \u0111\xf3 c\u0169ng l\xe0 thu\u1eadt to\xe1n gi\u1ea3i quy\u1ebft cho b\xe0i to\xe1n n\xe0y.\\n\\n**Ph\xe2n t\xedch thu\u1eadt to\xe1n:** S\u1eed d\u1ee5ng chia \u0111\u1ec3 tr\u1ecb (divide and conquer), ta c\xf3 bi\u1ec3u th\u1ee9c sau\\n<p style={{textAlign: \\"center\\"}}>\\n\\n${T(n) = T(\\\\frac{n}{2}) + \\\\Theta(1)}$\\n\\n</p>\\n\\nTime complexity cho c\xe1c c\xe2u \u0111i\u1ec1u ki\u1ec7n so s\xe1nh ${\\\\Theta(1)}$, base case \u1edf \u0111\xe2y l\xe0 ${T(1) = \\\\Theta(1)}$.\\nT\u1eeb \u0111\xf3, ${T(n) = \\\\Theta(1) + \\\\Theta(1) +...+ \\\\Theta(1) = \\\\Theta(log{_2}{n})}$.\\n\\n**Code Python**\\n```python\\nimport math\\nini_arr = [10, 20, 15, 2, 23, 90, 67]\\n\\ndef peak_finding(arr):\\n    length = len(arr)\\n    middle = math.floor(length / 2)\\n    if length == 1:\\n        return arr[0]\\n    if length == 2:\\n        return arr[0] if (arr[0] >= arr[1]) else arr[1]\\n    if arr[middle] < arr[middle - 1]:\\n        return peak_finding(arr[:middle])\\n    elif arr[middle] < arr[middle + 1]:\\n        return peak_finding(arr[middle + 1:])\\n    else:\\n        return arr[middle]\\n\\n\\nprint(peak_finding(ini_arr))\\n```\\nOutput\\n```python\\n20\\n```\\n\\n### 3. T\xecm peak trong m\u1ea3ng 2 chi\u1ec1u\\nTa h\xecnh dung m\u1ea3ng 2 chi\u1ec1u **${m \\\\times n}$** \u0111\u01b0\u1ee3c bi\u1ec3u di\u1ec5n d\u01b0\u1edbi d\u1ea1ng ma tr\u1eadn m h\xe0ng v\xe0 n c\u1ed9t\\n![2D Matrix](./images/2Dmat.PNG)\\n\\nM\u1ed9t ph\u1ea7n t\u1eed \u0111\u01b0\u1ee3c coi l\xe0 m\u1ed9t peak khi v\xe0 ch\u1ec9 khi n\xf3 l\u1edbn h\u01a1n ho\u1eb7c b\u1eb1ng t\u1ea5t c\u1ea3 c\xe1c ph\u1ea7n t\u1eed li\u1ec1n k\u1ec1 theo chi\u1ec1u d\u1ecdc v\xe0 ngang.\\n\\n#### 3.1. Duy\u1ec7t tr\u1ef1c ti\u1ebfp\\n**\xdd t\u01b0\u1edfng:** Duy\u1ec7t qua t\u1eebng ph\u1ea7n t\u1eed c\u1ee7a m\u1ea3ng v\xe0 ki\u1ec3m tra xem ph\u1ea7n t\u1eed \u0111ang x\xe9t c\xf3 th\u1ecfa m\xe3n t\xednh ch\u1ea5t l\xe0 m\u1ed9t peak hay kh\xf4ng.\\n\\n**Ph\xe2n t\xedch thu\u1eadt to\xe1n:** worst case c\u1ee7a thu\u1eadt to\xe1n s\u1ebd c\xf3 time complexity l\xe0 ${\\\\Theta(m \\\\times n)}$.\\n\\n#### 3.2. Thu\u1eadt to\xe1n Greedy Ascent\\n**\xdd t\u01b0\u1edfng:** Ch\xfang ta b\u1eaft \u0111\u1ea7u t\u1ea1i m\u1ed9t \u0111i\u1ec3m ng\u1eabu nhi\xean. V\u1edbi \u0111i\u1ec3m \u0111ang x\xe9t, ch\xfang ta so s\xe1nh n\xf3 v\u1edbi 4 \u0111i\u1ec3m li\u1ec1n k\u1ec1 theo c\xe1c chi\u1ec1u d\u1ecdc v\xe0 ngang, n\u1ebfu c\xf3 gi\xe1 tr\u1ecb n\xe0o l\u1edbn h\u01a1n \u0111i\u1ec3m \u0111ang x\xe9t, ta s\u1ebd x\xe9t \u0111i\u1ec3m ti\u1ebfp theo l\xe0 \u0111i\u1ec3m \u0111\xf3.\\n\\n**Ph\xe2n t\xedch thu\u1eadt to\xe1n:** Tho\u1ea1t ngh\u0129 qua th\xec ta th\u1ea5y thu\u1eadt to\xe1n c\xf3 v\u1ebb s\u1ebd hi\u1ec7u qu\u1ea3 h\u01a1n, nh\u01b0ng worst case c\u1ee7a n\xf3 v\u1eabn l\xe0 ${\\\\Theta(m \\\\times n)}$ khi m\xe0 ta ph\u1ea3i duy\u1ec7t ph\u1ea7n l\u1edbn c\xe1c ph\u1ea7n t\u1eed.\\n\\n#### 3.3. Thu\u1eadt to\xe1n Jamming Binary Search\\n**\xdd t\u01b0\u1edfng:** Ta d\u1ef1a tr\xean c\xe1ch t\xecm ki\u1ebfm Binary Search nh\u01b0 \xe1p d\u1ee5ng v\u1edbi m\u1ea3ng m\u1ed9t chi\u1ec1u \u1edf tr\xean.\\n\\n**Thu\u1eadt to\xe1n:** \\n* Ch\u1ecdn c\u1ed9t \u1edf gi\u1eefa ${i = \\\\frac{n}{2}}$. T\xecm gi\xe1 tr\u1ecb l\u1edbn nh\u1ea5t c\u1ee7a c\u1ed9t \u0111\xf3. Gi\u1ea3 s\u1eed gi\xe1 tr\u1ecb \u0111\xf3 n\u1eb1m \u1edf v\u1ecb tr\xed ${(j, i)}$.\\n* So s\xe1nh c\xe1c ph\u1ea7n t\u1eed \u1edf v\u1ecb tr\xed ${(j, i - 1), (j, i), (j, i + 1)}$.\\n* Ta ch\u1ecdn ma tr\u1eadn con ph\u1ea7n b\xean tr\xe1i n\u1ebfu ${a[j, i - 1] \\\\gt a[j, i]}$, ch\u1ecdn ma tr\u1eadn con ph\u1ea7n b\xean ph\u1ea3i n\u1ebfu ${a[j, i + 1] \\\\gt a[j, i]}$ \u0111\u1ec3 x\xe9t b\u01b0\u1edbc ti\u1ebfp theo.\\n* N\u1ebfu kh\xf4ng, ta tr\u1ea3 v\u1ec1 gi\xe1 tr\u1ecb ${a[j, i]}$ l\xe0 m\u1ed9t peak.\\n\\n**Ph\xe2n t\xedch thu\u1eadt to\xe1n:** Base case \u1edf \u0111\xe2y s\u1ebd l\xe0 ch\xfang ta ch\u1ec9 c\xf3 m\u1ed9t c\u1ed9t duy nh\u1ea5t, t\xecm gi\xe1 tr\u1ecb l\u1edbn nh\u1ea5t c\u1ee7a c\u1ed9t \u0111\xf3. T\u1eeb \u0111\xf3, ta c\xf3 bi\u1ec3u th\u1ee9c sau\\n<p style={{textAlign: \\"center\\"}}>\\n\\n${T(m, n) = T(m, \\\\frac{n}{2}) + \\\\Theta(m) }$\\n\\n</p>\\n\\nV\u1edbi ${T(m, 1) = \\\\Theta(m)}$.\\nDo v\u1eady, ${T(m, n) = \\\\Theta(m) + \\\\Theta(m) +...+ \\\\Theta(m) = \\\\Theta(mlog{_2}{n})}$.\\n\\n**Code Python**\\n```python\\nimport numpy as np\\nimport math\\nini_matrix = np.array([[14, 13, 12, 6], [15, 9, 11, 7], [\\n                      16, 17, 19, 92], [17, 18, 17, 12]])\\n\\ndef peak_finding_2d(matrix):\\n    (rows, cols) = matrix.shape\\n    j = math.floor(cols / 2)\\n    i_in_max = np.argmax(matrix[:, j])\\n    if cols == 1:\\n        return matrix[i_in_max, j]\\n    if cols == 2:\\n        peak_1 = np.amax(matrix[:, 0])\\n        peak_2 = np.amax(matrix[:, 1])\\n        return peak_1 if peak_1 >= peak_2 else peak_2\\n    if matrix[i_in_max, j] < matrix[i_in_max, j-1]:\\n        return peak_finding_2d(matrix[:, :j])\\n    elif matrix[i_in_max, j] < matrix[i_in_max, j+1]:\\n        return peak_finding_2d(matrix[:, (j+1):])\\n    else:\\n        return matrix[i_in_max, j]\\n\\n\\nprint(peak_finding_2d(ini_matrix))\\n```\\nOutput\\n```python\\n92\\n```"}]}')}}]);