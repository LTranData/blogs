"use strict";(self.webpackChunklamtran_blog=self.webpackChunklamtran_blog||[]).push([[7428],{3905:(e,a,t)=>{t.d(a,{Zo:()=>m,kt:()=>b});var n=t(7294);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function o(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function l(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?o(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function i(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=n.createContext({}),s=function(e){var a=n.useContext(c),t=a;return e&&(t="function"==typeof e?e(a):l(l({},a),e)),t},m=function(e){var a=s(e.components);return n.createElement(c.Provider,{value:a},e.children)},g="mdxType",p={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},d=n.forwardRef((function(e,a){var t=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),g=s(t),d=r,b=g["".concat(c,".").concat(d)]||g[d]||p[d]||o;return t?n.createElement(b,l(l({ref:a},m),{},{components:t})):n.createElement(b,l({ref:a},m))}));function b(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var o=t.length,l=new Array(o);l[0]=d;var i={};for(var c in a)hasOwnProperty.call(a,c)&&(i[c]=a[c]);i.originalType=e,i[g]="string"==typeof e?e:r,l[1]=i;for(var s=2;s<o;s++)l[s]=t[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},9978:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>c,contentTitle:()=>l,default:()=>g,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var n=t(7462),r=(t(7294),t(3905));const o={slug:"db-schemachange/",title:"db-schemachange",description:"db-schemachange",authors:"tranlam",tags:["Databases","Cloud","Data Platform","Database Change Management"],image:"./images/flyway-naming-convention.png"},l=void 0,i={permalink:"/blog/db-schemachange/",editUrl:"https://github.com/LTranData/blogs/edit/main/blog/2025-07-13-db-schemachange/index.md",source:"@site/blog/2025-07-13-db-schemachange/index.md",title:"db-schemachange",description:"db-schemachange",date:"2025-07-13T00:00:00.000Z",formattedDate:"July 13, 2025",tags:[{label:"Databases",permalink:"/blog/tags/databases"},{label:"Cloud",permalink:"/blog/tags/cloud"},{label:"Data Platform",permalink:"/blog/tags/data-platform"},{label:"Database Change Management",permalink:"/blog/tags/database-change-management"}],readingTime:17.4,truncated:!0,authors:[{name:"Lam Tran",title:"Data Engineer",url:"https://github.com/LTranData",imageURL:"https://github.com/LTranData.png",key:"tranlam"}],frontMatter:{slug:"db-schemachange/",title:"db-schemachange",description:"db-schemachange",authors:"tranlam",tags:["Databases","Cloud","Data Platform","Database Change Management"],image:"./images/flyway-naming-convention.png"},nextItem:{title:"Cloud Native Data Platform",permalink:"/blog/cloud-native-data-platform/"}},c={image:t(1494).Z,authorsImageUrls:[void 0]},s=[],m={toc:s};function g(e){let{components:a,...o}=e;return(0,r.kt)("wrapper",(0,n.Z)({},m,o,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"db-schemachange")," is a simple, lightweight python based tool to manage database objects for Databricks, Snowflake, MySQL, Postgres, SQL Server, and Oracle. It\nfollows an Imperative-style approach to Database Change Management (DCM) and was inspired by\nthe ",(0,r.kt)("a",{parentName:"p",href:"https://flywaydb.org"},"Flyway database migration tool"),". When combined with a version control system and a CI/CD\ntool, database changes can be approved and deployed through a pipeline using modern software delivery practices. As such\nschemachange plays a critical role in enabling Database (or Data) DevOps."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"banner image",src:t(1494).Z,width:"682",height:"320"})))}g.isMDXComponent=!0},1494:(e,a,t)=>{t.d(a,{Z:()=>n});const n=t.p+"assets/images/flyway-naming-convention-a318530d1f6a49d3e46235d474ed3281.png"}}]);